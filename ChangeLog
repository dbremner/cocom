2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (new_heap_chunk): Increase size according to
	heuristic.
	(compact_heap): Don't delete free heap chunk according to
	heuristic.  Move objects only if it is necessary.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_errors.h (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New external definitions.

	* DINO/d_errors.c (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New messages.
	(DERR_erange): Change the message.

	* DINO/d_yacc.y: Add rules for {char, int, float} (..).
	(get_string_code): Add processing `\a'.

	* DINO/d_ir.sprut (charof, intof, floatof): New nodes.

	* DINO/d_func.c (print_ch, get_char_code): Add processing `\a'.

	* DINO/d_eval.c (evaluate): Add evaluating charof, intof, floatof.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	charof, intof, floatof.
	
	* DINO/d_run.sprut (try_heap_free): Return TRUE if heap piece has
	been freed.
	(heap_pop): Changed saved_cstack for current processor if the
	stack has been popped.
	(pack_vector_if_possible): Set eltype when els_number == 0.

	* DINO/d_conv.c (to_vect_string_conversion): Switch off GC
	temporally.

	* Dino/Makefile.in: Fix typo.
	
	* DINO/dino.tst.in: Add tests for {char, int, float} (..).  Modify
	output for system error `result too large'.

	* DINO/dino.sgml.in: Add descriptions of {char, int, float} (..).

	* DINO/dino-5.html, DINO/dino-8.html, DINO/dino-9.html,
	DINO/dino.dvi, DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (rcount_call): Rename it into gmatch.

        * DINO/d_func.c (rcount_call): Rename it into gmatch.  Return
	vector instead of the count.
	
        * DINO/d_ir.sprut (RCOUNT_NAME, rcount_decl): Rename them into
	GMATCH_NAME, gmatch_decl.

	* DINO/d_run.sprut (temp_vlobj2): New global variable.
	(initiate_heap): Create temp_vlobj2.
	(finish_heap): Delete temp_vlobj2.
	
	* DINO/dino.tst.in: Test gmatch instead of rcount.
	
	* DINO/dino.sgml.in: Add description of function gmatch and
	remove rcount.

	* DINO/dino-4.html, DINO/dino-8.html DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.
	
2001-07-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (getf_call, fgetf_call): New prototypes.

	* DINO/d_func.c (general_getln_call): rename it onto
	general_get_ln_file_call.  Add new parameters to process [f]getf.
	(getf_call, fgetf_call): New functions.
	(getln_call, fgetln_call): Use general_get_ln_file_call.

	* DINO/d_ir.sprut (GETF_NAME, FGETF_NAME, getf_decl, fgetf_decl):
	New macros and variables.
	(decls_table): Add entries for getf fgtef.

	* DINO/dino.tst.in: Add tests for getf and fgetf.
	
	* DINO/dino.sgml.in: Add description of functions getf and
	fgetf.

	* DINO/dino-4.html, DINO/dino-8.htmlM DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.
	
2001-07-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (HAVE_SETITIMER): Set up the default value.

	* DINO/d_dino.c (exception_action): Use HAVE_SETITIMER value.

	* DINO/d_eval.c (find_context_by_scope): Use
	current_cached_container_tick.
	(evaluate_program): Use HAVE_SETITIMER value.
	(profile_compare_function): Ditto.
	(print_profile): Ditto.  Print gc time when HAVE_SETITIMER==0.

	* DINO/d_ir.sprut (block): New field cached_container_tick.

	* DINO/d_run.sprut (current_cached_container_tick, gc_ticker): New
	global variables.
	(initiate_heap): Initialize the variables.
	(clear_caches): Remove it.
	(gc): Modify current_cached_container_tick instead of calling
	clear_caches.  Switch on/off gc_ticker.
	(heap_push): Modify current_cached_container_tick.
	(activate_given_process): Modify current_cached_container_tick
	instead of calling clear_caches.
	
2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (print_profile): Print GC time too.

	* DINO/d_run.sprut (in_gc_p, gc_interrupts_number): New global
	variables.
	(initiate_heap): Initiate them.
	(gc): Set up and clear in_gc_p.
	(profile_interrupt): Check that we are in GC.
	
2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_extern.sprut (create_pack_vector): New function prototype
	and member in struct spi.
	(create_pack_vector): New function.

	* DINO/d_run.sprut (compact_heap): Use new_place for looking for
	object in temp refs.
	(create_pack_vector): New function.
	(create_empty_string, create_string): Use create_pack_vector.
	(external_address): Insert an external variable address in
	external_vars only once.
	
	* DINO/d_conv.c (to_vect_string_conversion): Use create_string.

	* DINO/d_eval.c (execute_concat_op): Use create_pack_vector and
	create_unpack_vector.
	(evaluate): Use create_pack_vector.  Set up the correct context
	for func and class.

	* DINO/d_func.c (to_lower_upper): Create the result string first
	before copying into it.
	(regex_node): New global structure.
	(regex_tab, regex_os, regex_vlo): New global variables.
	(regex_node_hash, regex_node_eq, regex_node_eq,
	initiate_regex_tab, finish_regex_tab): New functions.
	(match_call): Use find_regex and create_pack_vector.  Place pmatch
	in temp_vlobj.  Don't call regfree.
	(rcount_call): Use find_regex.  Don't call regfree.
	(generall_sub_call): Use find_regex and create_pack_vector.  Don't
	call regfree.
	(split_call): Ditto.
	(subv_call): Use create_pack_vector.
	(getgroups_call, readdir_call): Ditto.
	(mode_finish): Create the string before set mode of ctop.
	(initiate_funcs): Call initiate_regex_tab.
	(finish_funcs): New function.

	* DINO/dino.tst.in: Correct test results for the 66th test.

	* DINO/dino.sgml.in: Fix typo in regex syntax.

	* DINO/{dino-8.html, dino.dvi, dino.info*, dino.ps, dino.txt}:
	Update.
	
2001-07-06  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (heap_object_size): Add processing hideblock.

2001-06-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * AMMUNITION/IEEE.h (MAX_SINGLE_2_STRING_LENGTH,
	MAX_DOUBLE_2_STRING_LENGTH, MAX_QUAD_2_STRING_LENGTH,
	MAX_SINGLE_4_STRING_LENGTH, MAX_DOUBLE_4_STRING_LENGTH,
	MAX_QUAD_4_STRING_LENGTH, MAX_SINGLE_8_STRING_LENGTH,
	MAX_DOUBLE_8_STRING_LENGTH, MAX_QUAD_8_STRING_LENGTH,
	MAX_SINGLE_10_STRING_LENGTH, MAX_DOUBLE_10_STRING_LENGTH,
	MAX_QUAD_10_STRING_LENGTH, MAX_SINGLE_16_STRING_LENGTH,
	MAX_DOUBLE_16_STRING_LENGTH, MAX_QUAD_16_STRING_LENGTH): New
	macros.
	(IEEE_single_to_binary_string, IEEE_double_to_binary_string,
	IEEE_quad_to_binary_string, IEEE_single_from_binary_string,
	IEEE_double_from_binary_string, IEEE_quad_from_binary_string): New
	function prototypes.
	(to_binary_string, from_binary_string): New C++ functions.
	
        * AMMUNITION/IEEE.c (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single_to_binary_string,
	IEEE_double_to_binary_string, IEEE_quad_to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single_from_binary_string, IEEE_double_from_binary_string,
	IEEE_quad_from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.
	
        * AMMUNITION/IEEE.cpp (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single::to_binary_string,
	IEEE_double::to_binary_string, IEEE_quad::to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single::from_binary_string, IEEE_double::from_binary_string,
	IEEE_quad::from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.

	* AMMUNITION/IEEE.tst.in: Add the new macros and test the new
	external functions.

	* AMMUNITION/IEEE++.tst.in: Ditto.
	
	* AMMUNITION/ammunition.sgml.in: Add description of the new macros
	and the external functions.

	* AMMUNITION/ammunition++.sgml.in: Ditto.

	* AMMUNITION/{ammunition.info*, ammunition.txt, ammunition.ps,
	ammunition.dvi, ammunition-11.html}: Update.

	* AMMUNITION/{ammunition++.info*, ammunition++.txt,
	ammunition++.ps, ammunition++.dvi, ammunition++-11.html}: Ditto.

	* AMMUNITION/ammunition++.info-4: New file.

	* DINO/ieee.d (opvalue): New exception class.
	(ignore_excepts): New variable.
	(process_except): Use it.
	(to_binary_string, from_binary_string):  New functions.

	* DINO/ieee_int.c (ieee_single_to_binary_string,
	ieee_double_to_binary_string, ieee_quad_to_binary_string,
	ieee_single_from_binary_string, ieee_double_from_binary_string,
	ieee_quad_from_binary_string): New functions.
	(ieee_address): Add their addresses.

	* DINO/ieee.tst.in (453): Test new functions and ignoring the
	excepts.

2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SHILKA/yacc.y (make_lower_case_string): New function.  Use it
	for creation of keywords when -case.

	* SHILKA/shilka.tst.in: Add Novikov's test.
	
2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/arithm.h (unsigned_integer_from_based_string): Fix
	typo.

	* DINO/mpi.d (mpi_ignore_overflow): New variable.
	(check_overflow): Make it private.  Do not generate excpetion if
	mpi_ignore_overflow is set up.
	(unsigned_add, unsigned_subtract, unsigned_multiply,
	unsigned_divide, unsigned_remainder, unsigned_shift_right,
	unsigned_shift_left, unsigned_or, unsigned_and, unsigned_not,
	unsigned_eq, unsigned_ne, unsigned_gt, unsigned_lt, unsigned_ge,
	unsigned_le, unsigned_change_size, unsigned_to_based_string,
	unsigned_to_string, unsigned_from_based_string,
	unsigned_from_string): New functions.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder,
	mpi_unsigned_shift_right, mpi_unsigned_shift_left,
	mpi_unsigned_or, mpi_unsigned_and, mpi_unsigned_not,
	mpi_unsigned_eq, mpi_unsigned_ne, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le,
	mpi_unsigned_change_size, mpi_unsigned_to_based_string,
	mpi_unsigned_from_based_string): New external functions.

	* DINO/mpi.c (arithm_op): New function.
	(mpi_add, mpi_subtract, mpi_multiply, mpi_divide, mpi_remainder):
	Use it.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder): New functions.
	(mpi_par_op): Set up size of the result mpi.
	(shift): New function.
	(mpi_shift_right, mpi_shift_left): Use it.
	(mpi_unsigned_shift_right, mpi_unsigned_shift_left): New
	functions.
	(logical): New function.
	(mpi_or, mpi_and): Use it.
	(mpi_unsigned_or, mpi_unsigned_and): New functions.
	(not): New function.
	(mpi_not): Use it.
	(mpi_unsigned_not): New function.
	(cmp): New function.
	(mpi_eq, mpi_new, mpi_gt, mpi_lt, mpi_ge, mpi_le): Use it.
	(mpi_unsigned_eq, mpi_unsigned_new, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le): New functions.
	(change_size): New function.
	(mpi_change_size): Use it.
	(mpi_unsigned_change_size): New function.
	(to_based_string): New function.
	(mpi_to_based_string): Use it.
	(mpi_unsigned_to_based_string): New function.
	(from_based_string): New function.
	(mpi_from_based_string): Use it.
	(mpi_unsigned_from_based_string): New function.
	(mpi_address): Add new exported functions.

	* DINO/dino.tst.in: Expand test for mpi.
	
	* DINO/dino.sgml.in: Add comment for match.

	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.ps, DINO/dino.txt: Update.
	
2001-06-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (rcount_call): New prototype.

	* d_eval.c (evaluate): Create objects before setting mode.

	* d_func.c (rcount_call): New function.

	* d_run.sprut (create_string): Call create_empty_string with
	bigger min_length.

	* d_ir.sprut (rcount): Add new function (macros, table entry
	etc.).

	* dino.tst.in: Add tests for rcount.

	* dino.sgml.in: Add documentation of rcount.

	* dino.html, dino-4.html, dino-8.html, dino.dvi, dino.info*,
	dino.ps, dino.txt: Update.

2001-06-21  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* mpi.c (mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.  Use
	integer_to_based_string and integer_from_based_string.

	* mpi.d (mpi_except): Add mpi_base.
	(mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.
	(to_based_string, from_based_string): New functions.
	(to_string, from_string): Use them.
	
2001-06-20  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* arithm.c, arithm.cpp, arithm.h: Add new functions
	unsigned_integer_to_based_string, integer_to_based_string,
	unsigned_integer_from_base_string, integer_from_based_string,
	to_based_string, from_based_string, to_based_str, from_based_str.
	(integer_from_string, unsigned_integer_from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	integer_to_string, unsigned_integer_to_string): Modify them.
	(signed_integer::from_string, unsigned_integer::from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	signed_integer::to_string, unsigned_integer::to_string): Modify
	them.
	
        * ammunition.sgml.in, ammunition.sgml.in: The new functions
	documentation.

	* ammunition.txt, ammunition.ps, ammunition.info*, ammunition.dvi,
	ammunition-10.html, ammunition++.txt, ammunition++.ps,
	ammunition++.info*, ammunition++.dvi, ammunition++-10.html:
	Update.
	
2001-06-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* sgml-txt: Fix bug with itemize inside enum.

	* dino.sgml.in: Fix indentation for itemize.

	* dino-{468}.html, dino.dvi, dino-info*, dino.ps, dino.txt:
	Update.

2001-06-05  Dave Bodenstab  <imdave@mcs.net>

	* DINO/compare.tst: Permit to use compiled code for TCL tests.

2001-05-31  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdino): Fix different build directory problem.

	* yacc.exe: New file.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/Makefile.in DINO/Makefile.in MSTA/Makefile.in
	NONA/Makefile.in OKA/Makefile.in SHILKA/Makefile.in
	SPRUT/Makefile.in: Change generated documenation if it is only
	obsolete.

	* Makefile.in AMMUNITION/Makefile.in DINO/Makefile.in
	MSTA/Makefile.in NONA/Makefile.in OKA/Makefile.in
	SHILKA/Makefile.in SPRUT/Makefile.in: Generation doc files from
	any build directory.

	* REGEX/Makefile.in REGEX/doc/Makefile.in REGEX/test/Makefile.in:
	Removing some unnecessary entries.
	
2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.html cocom.dvi cocom.txt cocom.ps cocom.info
	AMMUNITION/ammunition*.html AMMUNITION/ammunition.info*
	AMMUNITION/ammunition.txt AMMUNITION/ammunition.dvi
	AMMUNITION/ammunition.ps AMMUNITIONammunition++*.html
	AMMUNITIONammunition++.info* AMMUNITIONammunition++.txt
	AMMUNITIONammunition++.dvi AMMUNITIONammunition++.ps
	DINO/dino*.html DINO/dino.info* DINO/dino.txt DINO/dino.dvi
	DINO/dino.ps MSTA/msta*.html MSTA/msta.info* MSTA/msta.txt
	MSTA/msta.dvi MSTA/msta.ps NONA/nona*.html NONA/nona.info*
	NONA/nona.txt NONA/nona.dvi NONA/nona.ps OKA/oka*.html
	OKA/oka.info* OKA/oka.txt OKA/oka.dvi OKA/oka.ps
	SHILKA/shilka*.html SHILKA/shilka.info* SHILKA/shilka.txt
	SHILKA/shilka.dvi SHILKA/dino.ps SPRUT/sprut*.html
	SPRUT/sprut.info* SPRUT/sprut.txt SPRUT/sprut.dvi SPRUT/sprut.ps:
	Add generated documentation files.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Initial revision of cocom and dino.
