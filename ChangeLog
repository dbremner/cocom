2002-03-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.spec, dino.spec: Use %attr for %doc.

	* DINO/d_dino.h (STANDARD_DINO_EXTERN_LIBS): Add ipcerr and
	socket.

	* DINO/d_func.c (process_errno_call): Remove assert.

	* DINO/dino.1: Add ipcerr and socket.

	* DINO/dino.dvi, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.
	
	* DINO/dino.tst.in: Add tests for socket.

2002-03-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.spec: New file.

	* dino.spec: New file.

	* Makefile.in, AMMUNITION/Makefile.in, DINO/Makefile.in,
	MSTA/Makefile.in, NONA/Makefile.in, OKA/Makefile.in,
	SHILKA/Makefile.in, SPRUT/Makefile.in: Add DESTDIR needed for RPM.

2002-03-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in: Check only_cocom_source_files on empty.

	* acconfig.h (socklen_t, HAVE_INET_ATON): New undefs.

	* configure.in: Check type scoklen_t, function inet_aton, and
	libaray -lxnet.

	* configure: Update.

	* AMMUNITION/cocom-config.h.in: Update.

	* DINO/Makefile.in (ipcerr_lib): New macro.
	(DINO_EXTERN_LIBS, DINO_EXTERN_LIBS_PATH, source): Add files for
	ipcerr.
	(ipcerr_lib): New rule for building.
	(install, uninstall, create-distdir, depend): Add files for
	ipcerr.
	Update dependencies.

	* DINO/compare.tst: Add test numbers.

	* DINO/d_main.c (get_library_search_function): Add code for ipcerr
	and socket.
	(ipcerr_address, socket_address): Add externals.
	
	* DINO/d_built.h (process_errno_call): New prototype.

	* DINO/d_func.c (process_system_errors): Use strerror for
	default message.
	(process_errno_call): New function.

	* DINO/d_ir.sprut (ENVIROMENT): New function __process_errno__.
	(PROCESS_ERRNO_NAME): New macro.
	(process_errno_decl): New global variable.
	(decls_table): Add entry for __process_errno__.

	* DINO/socket.d (ipcerr): Include it.
	(socket_error): Extend error.
	(invalid_address, host_not_found, no_address, no_recovery): New
	classes in socket_error.
	(socket_errors): New variable.
	(socket_excepts): remove it from __scoket_package.
	(_socket_invalid_address, _socket_host_not_found,
	_socket_no_address, _socket_no_recovery, _socket_try_again): New
	private external vars.
	(generate_socket_exception): Change it.  Remove parameter.

	* DINO/socket_int.c: Include d_config.h.
	(_socket_invalid_address, _socket_host_not_found,
	_socket_no_address, _socket_no_recovery, _socket_try_again): New
	global vars.
	(get_ip_address, _gethostinfo, _getservent, _sread, _swrite,
	_recvfrom, _sendto, _accept, _stream_client, _dgram_client,
	_stream_server, _dgram_server): Process errors.
	(_socket_init): Set up _socket_invalid_address,
	_socket_host_not_found, _socket_no_address, _socket_no_recovery,
	_socket_try_again.
	(socket_address): New function.

	* MSTA/Makefile.in: Update dependencies.

	* NONA/Makefile.in: Ditto.

	* OKA/Makefile.in: Ditto.

	* SHILKA/Makefile.in: Ditto.

	* SPRUT/Makefile.in: Ditto.

	* AMMUNITION/Makefile.in: Ditto.

	* DINO/ipcerr.d: New file.

	* DINO/ipcerr_int.c: New file.
	
2002-03-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (earley_set_lookahead_level): Check the
	parameter level and change it if it is not in the range.

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Add tests with
	lookahead level not in the range.

	* AMMUNITION/{ammunition.sgml.in, ammunition++.sgml.in}: Comments
	about the lookahead value not in ther range.

        * AMMUNITION/{ammunition++-13.html, ammunition++.dvi,
	ammunition++.info, ammunition++.info-1, ammunition++.info-2,
	ammunition++.info-3, ammunition++.info-4, ammunition++.ps,
	ammunition++.txt, ammunition-13.html, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps, ammunition.txt}: Update.

	* DINO/d_ir.sprut (int_earley_set_lookahead_level, set_lookahead):
	New functions in the environment.
	(INT_EARLEY_SET_LOOKAHEAD_LEVEL_NAME): New macro.
	(int_earley_set_lookahead_level_decl): New global variable.
	(decls_table): Add entry for int_earley_set_lookahead_level.

	* DINO/d_built.h (int_earley_set_lookahead_level): New extrenal
	definition.

	* DINO/d_func.c (int_earley_set_lookahead_level): New function.

	* DINO/dino.tst.in: New tests for set_lookahead.

	* DINO/dino.sgml.in (set_lookahead): Describe it.

	* DINO/{dino-10.html, dino-8.html, dino.dvi, dino.html, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt): Update.
	
2002-03-15  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (int_earley_parse): Process case root==NULL.

	* DINO/dino.tst.in: Add test for parse returning nil.

	* DINO/dino.sgml.in: Add comments about returning nil by function
	parse.

	* DINO/{dino.html, dino-8.html, dino-10.html, dino.dvi, dino.dvi,
	dino.info, dino.info-1, dino.info-2, dino.info-3, dino.info-4,
	dino.ps, dino.txt}: Update.

	* AMMUNITION/{ammunition.sgml.in, ammunition++.sgml.in}: Fix typo.

	* AMMUNITION/{ammunition++-13.html, ammunition++.dvi,
	ammunition++.info, ammunition++.info-1, ammunition++.info-2,
	ammunition++.info-3, ammunition++.info-4, ammunition++.ps,
	ammunition++.txt, ammunition-13.html, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps, ammunition.txt}: Update.

2002-03-14  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (make_parse): Check found reduce situation
	always.

	* AMMUNITION/earley.tst.in: Add test for right recursion.
	
	* AMMUNITION/earley++.tst.in: Ditto.
	
2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_heap.c (eq_vector): Fix typo in the 2nd argument of eq_val in
	comparison of unpacked vectors.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_heap.c (eq_key): Process nil too.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/socket.d: New file.

	* DINO/socket_int.c: New file.
	
	* DINO/Makefile.in: Add building sockets module.
	
	* DINO/d_heap.c (move_object): Check that the tailored size is less
	than the original one.
	(compact_heap): Take moved stacks into account of checking the
	last heap chunk.

2002-03-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{ammunition++.dvi, ammunition++.info,
	ammunition++.info-1, ammunition++.info-2, ammunition++.info-3,
	ammunition++.info-4, ammunition++.ps, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps): Update.

2002-03-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (unpack_vector): Set up mode after moving the
	value.

	* DINO/compare.tst: Add Dino test for sockets.
	
2002-02-27  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: Remove CR for test outputs under Cygwin.

2002-02-11  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_conflict_flag, error_single_definition):
	Add it.

	* MSTA/common.c (error_conflict_flag, error_single_definition):
	Add it.

	* MSTA/anal.c (process_definition_list): Use
	errro_single_definition instead of single_definition.
	
	* MSTA/gen-comm.h (error_single_definition): Remove it.

	* MSTA/gen-comm.c (error_single_definition): Ditto.

	* MSTA/gen.c (find_error_single_definition): Remove it.
	(generate): Don't call it.

	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Don't make default for LR-set containing `... error .' too.
	
	* MSTA/lr.c (contains_error): New function.
	(add_context_conflicts): Use error_conflict_flag and the function.

	* MSTA/main.c: Add options -(no-)error-conflict.
	(main): Add error_conflict_flag.

	* MSTA/msta.tst.in: Add tests for options -(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_conflict_flag): Remove it.

	* MSTA/common.c (error_conflict_flag): Remove it.

	* MSTA/lr.c (contains_error): Remove.
	(add_context_conflicts): Remove error_conflict_flag.

	* MSTA/main.c: Remove options -(no-)error-conflict.
	(main): Remove error_conflict_flag.

	* MSTA/msta.tst.in: Remove test for options -(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdir, distdinodir): Change it.

	* MSTA/Makefile.in (distdir): Change it.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in: Use -local-error-recovery.

	* DINO/dino.dsp: Ditto.

2002-02-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_reduce_flag, error_conflict_flag): New
	external definition.

	* MSTA/common.c (error_reduce_flag, error_conflict_flag): New
	variables.

	* MSTA/lr.c (contains_error): New function.
	(add_context_conflicts): Don't add conflict on error if not
	error_conflict_flag.

	* MSTA/main.c: Add options -(no-)error-reduce,
	-(no-)error-conflict.
	(main): Set up error_reduce_flag and error_conflict_flag.

	* MSTA/gen.c (set_up_LR_set_some_field_standard_values): Set up
	field it_is_errored_LR_set.

	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Don't set up default reduce if not error_reduce_flag.

	* MSTA/parser.c (YYRESTORE_AND_TRY_NEXT_ERROR_LABEL_NAME): New
	macro.
	(output_switch): Use `goto yyrestore_and_try_next_error' instead
	of YYABORT.
	(output_code_before_switch): Use yyrestore_and_try_next_error.
	Clear yychar after end of one error recovery try.
	(output_parser_itself): Set up yychar and yylval at the end of
	error recovery.

	* MSTA/msta.tst.in: New tests for options -(no-)error-reduce,
	-(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-reduce,
	-(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/parser.c (YYERROR_MESSAGE_MACRO_NAME): New macro.
	(output_definitions_outside_yyparse): Output the new macro
	definition.
	(output_shift_pop_actions): Output setting up yyprev_char for all
	regimes.
	(output_switch): Use YYERROR_MESSAGE.  Output setting up
	yyprev_char for all regimes.
	(output_definition_inside_yyparse): Output definition of
	yyprev_char for all regimes.
	(output_parser_itself): Output clearing yychar and setting up
	yyprev_char at the end of minimal cost error recovery.

	* MSTA/msta.sgml.in (YYERROR_MESSAGE): Describe the new macro.

	* MSTA/msta-3.html, MSTA/msta.dvi, MSTA/msta.ps, MSTA/msta.txt,
	MSTA/msta.info*: Update.
	
2002-01-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (additional_files): Add fcalc1.y.

	* MSTA/common.h (YACC_ERROR_RECOVERY, LOCAL_ERROR_RECOVERY,
	MINIMAL_ERROR_RECOVERY): New macros.
	(yacc_error_recovery_flag): Rename it into msta_error_recovery.

	* MSTA/common.c (yacc_error_recovery_flag): Rename it into
	msta_error_recovery.
	
	* MSTA/main.c (COMMAND_LINE_DESCRIPTION_PART3, main): Rename
	-no-yacc-error-recovery into -local-error-recovery.  Add new
	option -minimal-error-recovery.  Make -yacc-error-recovery by
	default.
	
	* MSTA/ird.sprut (LR_set): Add field it_is_errored_LR_set.
	
	* MSTA/regular.c (mark_semantic_pushed_LR_sets): Setup flag
	it_is_errored_LR_set.

	* MSTA/parser.c (ERRORED_STATE_FLAGS_VECTOR_NAME,
	YYUNDEFINED_RECOVERY_COST_MACRO_NAME,
	YYEXPAND_SAVED_STATES_BUFFER_FUNCTION_NAME,
	YYEXPAND_SAVED_ATTRIBUTES_BUFFER_FUNCTION_NAME,
	YYINCREASE_TOKENS_BUFFER_FUNCTION_NAME): New macros.
	(output_errored_states_table): New function.
	(output_parser_tables): Call the new function.
	(output_include_directives): Add include file limits.h.
	(YYSTATE_TOKEN_NUMS_VARIABLE_NAME,
	YYSAVED_STATE_TOKEN_NUMS_VARIABLE_NAME,
	YYSAVED_STATES_VARIABLE_NAME, YYSAVED_ATTRIBUTES_VARIABLE_NAME):
	New macros.
	(output_inside_outside_definitions): Add code for minimal error
	recovery.
	(output_saved_state_or_attribute_buffer_expansion_function_title,
	output_token_buffer_increase_function_title): New functions.
	(output_class_start, output_class_start): Add code for minimal
	error recovery.
	(YYNEXT_ERROR_LABEL_NAME, YYERR_RECOVERY_TRY_END_LABEL_NAME,
	YYRECOVERY_FINISH_LABEL_NAME, YYSAVED_STATES_END_VARIABLE_NAME,
	YYSAVED_ATTRIBUTES_END_VARIABLE_NAME,
	YYLOOK_AHEAD_CHAR_END_VARIABLE_NAME, YYCHAR_PTR_VARIABLE_NAME,
	YYERROR_STATE_VARIABLE_NAME, YYBEST_ERROR_STATE_VARIABLE_NAME,
	YYERROR_ATTRIBUTE_VARIABLE_NAME,
	YYBEST_ERROR_ATTRIBUTE_VARIABLE_NAME,
	YYRECOVERY_COST_VARIABLE_NAME, YYBEST_RECOVERY_COST_VARIABLE_NAME,
	YYERROR_STATE_NUM_VARIABLE_NAME,
	YYBEST_ERROR_STATE_NUM_VARIABLE_NAME,
	YYERROR_ATTRIBUTE_NUM_VARIABLE_NAME,
	YYBEST_ERROR_ATTRIBUTE_NUM_VARIABLE_NAME,
	YYTOKEN_IGNORED_NUM_VARIABLE_NAME,
	YYBEST_TOKEN_IGNORED_NUM_VARIABLE_NAME,
	YYCURR_TOKEN_NUM_VARIABLE_NAME, YYERROR_TOKEN_NUM_VARIABLE_NAME,
	YYLOOK_AHEAD_CHAR_END_VARIABLE_NAME): New macros.
	(output_look_ahead_arrays_length,
	output_definitions_outside_yyparse,
	output_state_or_attribute_stack_expansion,
	output_states_stack_check, output_states_stack_check,
	output_states_stack_check, output_shift_pop_actions,
	output_shift_pop_actions, output_debug_print_about_saving_token,
	output_check_yyfirst_char_ptr): Add code for minimal error
	recovery.
	(output_saving_token, output_increase_tokens_buffer,
	output_restoring_minimal_recovery_state): New functions.
	(output_switch, output_definition_inside_yyparse,
	output_code_before_switch, output_initiation_code,
	output_scanner_array_variables_allocatio,
	output_parser_array_variables_allocation, output_free_arrays,
	output_parser_itself): Add code for minimal error recovery.
	
	* MSTA/quality.tst.in: New tests 46 and 47 for minimal error
	recovery.  Use option -local-error-recovery.

	* MSTA/msta.1: Rename -no-yacc-error-recovery into
	-local-error-recovery.  Add new option -minimal-error-recovery.
	Make -yacc-error-recovery by default.

	* cocom.sgml.in: Add information about the new error recovery
	method.

	* MSTA/msta.sgml.in: Add information about the new (minimal) error
	recovery method.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

        * MSTA/msta-1.html, MSTA/msta-3.html, MSTA/msta-5.html,
	MSTA/msta.1, MSTA/msta.dvi, MSTA/msta.info, MSTA/msta.info-1,
	MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.sgml.in, MSTA/msta.txt:
	Update.
	
2001-12-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (int_earley_set_cost_flag): New prototype.

	* d_ir.sprut (ENVIRONMENT): New Dino variables nil_anode and
	error_anode, new functions int_earley_set_cost_flag and set_cost.
	(nil_anode_decl, error_anode_decl, int_earley_set_cost_flag_decl):
	New variables.
	(NIL_ANODE_NAME, ERROR_ANODE_NAME, INT_EARLEY_SET_COST_FLAG_NAME):
	New macros.
	(decls_table): New entries for nil_anode, error_anode,
	int_earley_set_cost_flag.
	
	* d_func.c (int_earley_set_cost_flag): New function.
	(tree_to_heap): Use nil_anode_decl and error_anode_decl.
	(init_parse_alloc): Rename it into int_parse_alloc.
	(int_earley_parse): Add new parameter for earley_parse.

	* dino.tst.in (265, 284): New expected positions for argv and env.

	* dino.sgml.in (nil_anode, error_anode): New environment
	variables.
	(set_cost): New parser function.

	* dino.html, dino-4.html, dino-8.html,, dino.dvi, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt: Update.
	
2001-12-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * earley.h (EARLEY_NIL_TRANSLATION_NUMBER, EARLEY_NEGATIVE COST):
	new macros.
	(earley_anode): New member cost.
	(earley_set_cost_flag, set_cost_flag): New functions.
	(earley_parse, parse): New parameter parse_free.
	(read_rule): New parameter anode_cost.
	
	* earley.c (grammar): New member cost_p.
	(parse_free): New global variable.
	(rule): New member anode_cost.
	(rule_new_start): New parameter anode_cost.
	(earley_read_grammar): New parameter anode_cost.
	(earley_set_cost_flag): New function.
	(trans_print_node): Rename it trans_visit_node.
	(trans_print_node_hash): Rename it trans_visit_node_hash.
	(trans_print_node_eq): Rename it trans_visit_node_eq.
	(trans_print_nodes_tab): Rename it trans_visit_nodes_tab.
	(trans_print_nodes_os): Rename it trans_visit_nodes_os.
	(n_trans_print_nodes): Rename it n_trans_visit_nodes.
	(reserv_mem_tab, tnodes_vlo): New global variables.
	(reserv_mem_hash, reserv_mem_eq, prune_to_minimal,
	traverse_pruned_translation, find_minimal_translation): New
	functions.
	(make_parse): Change NULL onto empty node after processing the
	corresponding rule. Change pl_ind even if we don't nee a
	translation (a bug). Add building minimal tree(s).  Setup original
	cost to abstract nodes.
	(earley_parse): New parameter parse_free.
	(read_rule): New parameter anode_cost.  Set up anode_cost.
	(use_functions, use_description): Add the new parameters.
	
        * earley.cpp (earley::read_grammar): New paarmeter anode_cost.
	(earley::set_cost_flag): New function.
	(earley::parse): New parmeter parse_free.
	(use_functions, use_description): Add the new paremeters.
	
	* sgramm.y: Add rules for cost and empty nodes.
	(srule): New member anode_cost.
	(anode_cost): New global variable.
	(yylex): New lexema '-'.
	(sread_rule): New parameter anode_cost.

	* earley.tst.in, earley++.tst.in: New shell variable srdcir.  Add
	new parameters for (erley_)parse and read_rule.
	(42-47): New tests for costs and empty nodes.
	
	* ammunition.sgml.in, ammunition++.sgml.in: Add building minimal
	cost trees.  New grammar syntax for transaltion (cost and `-').
	(macro EARLEY_NIL_TRANSLATION_NUMBER, macro EARLEY_NEGATIVE COST,
	member cost, parameter anode_cost, function earley_set_cost_flag,
	public function set_cost_flag, parameter parse_free): Describe
	them.
	
	* ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.info-4, ammunition.dvi,
	ammunition.ps, ammunition.txt, ammunition-13.html,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.info-4, ammunition.dvi,
	ammunition.ps, ammunition.txt, ammunition-13.html: Update.

	* cocom.sgml.in: Add building minimal cost trees.
	
	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.
	
2001-11-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/compare.tst: Check for failing tests.

2001-11-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (source_position_ptr): Remove it.
	(SET_SOURCE_POSITION_PTR): Ditto.

	* DINO/d_context.c (type_test, third_expr_processing,
	third_block_passing): Use source_position instead of
	source_position_ptr.

	* DINO/d_dino.c (source_position_ptr): Remove it.
	(error_func_for_allocate, exception_action): Use IR_pos (cpc)
	instead of source_position_ptr.

	* DINO/d_errors.c (yyerror): Use source_position instead of
	source_position_ptr.

	* DINO/d_eval.c (FIND_CONTEXT_BY_SCOPE): New macro.
	(find_context_by_scope): Use it.
	(find_context_by_scope): New macro.
	(execute_a_period_operation, check_vector_index,
	store_vector_element, load_table_element, store_table_element):
	Use IR_pos (cpc) instead of source_position_ptr.
	(load_designator_value): Remove parameter and
	SET_SOURCE_POSITION_PTR.
	(store_designator_value):
	(store_designator_value): Remove SET_SOURCE_POSITION_PTR.
	(prepare_op_assign): Call load_designator_value without the
	parameter.  Use IR_pos (cpc) instead of source_position_ptr.
	(execute_div_op, execute_mod_op, execute_concat_op): Use IR_pos
	(cpc) instead of source_position_ptr.
	(evaluate): Move its code into evaluate_code.  Remove it.  Use
	IR_pos (cpc) instead of source_position_ptr.

	* DINO/d_func.c (min_max_call, to_lower_upper, eltype_call,
	keys_call, context_call, inside_call, process_regcomp_errors,
	match_call, gmatch_call, generall_sub_call, split_call, subv_call,
	cmpv_call, del_call, general_ins_call, rev_call,
	array_sort_compare_function, sort_call, two_strings_func_start,
	string_func_start, getcwd_call, get_stat, file_start, open_call,
	flush_call, tell_call, seek_call, file_function_call_start,
	general_put_call, general_get_call, general_get_ln_file_call,
	get_call, getln_call, getf_call, fget_function_call_start,
	fgetf_call, invinput_error, general_scan_call, scan_call,
	scanln_call, function_without_par, getgroups_call,
	float_function_start, float_function_start2, general_rand_call,
	process_system_errors, readdir_call, stat_start, time_call,
	strtime_call, clock_call, system_call, exit_call,
	process_func_class_call, int_earley_parse_grammar,
	int_earley_parse_grammar, int_earley_set_debug_level,
	int_earley_set_one_parse_flag, int_earley_set_error_recovery_flag,
	int_earley_set_recovery_match, init_read_token, int_earley_parse,
	int_earley_create_grammar): Use IR_pos (cpc) instead of
	source_position_ptr.
	(real_func_call_pos_ptr): Rename it into real_func_call_pc.

	* DINO/d_heap.c (activate_process, external_address): Use IR_pos
	(cpc) instead of source_position_ptr.

	* DINO/d_ir.sprut (assign_stmt): New abstract node.
	(assign, mult_assign, div_assign, rem_assign, plus_assign,
	minus_assign, concat_assign, lshift_assign, rshift_assign,
	ashift_assign, and_assign, xor_assign, or_assign, var_assign,
	par_assign): Use it as base.

	* DINO/d_yacc.y: Use source_position instead of
	source_position_ptr.
	(yylex): Ditto.

	* DINO/dino.tst.in (128, 314, 348-350): Change expected error
	position.
	
	* DINO/dino.sgml.in: New function sput, sputln, sprint, sprintln.

	* DINO/{dino-4.html, dino-8.html, dino.dvi, dino.html, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt: Update.
	
2001-11-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (sput_call, sputln_call, sprint_call,
	sprintln_call): New function prototypes.

	* DINO/d_func.c (print_ch): Adding to temp_vlobj instead of
	printing.
	(print_context): Ditto.
	(print_val): Ditto.
	(file_param_type): New enumeration.
	(finish_output): New function.
	(general_put_call, general_print_call): Adding to temp_vlobj
	instead of printing.  Call finish_output.
	(put_call, putln_call, fput_call, fputln_call, print_call,
	println_call, fprint_call, fprintln_call): Use the enumeration.
	(sput_call, sputln_call, sprint_call, sprintln_call): New
	functions.

	* DINO/d_ir.sprut (ENVIRONMENT): Add sput, sputln, sprint, sprint.
	(SPUT_NAME, SPUTLN_NAME, SPRINT_NAME, SPRINTLN_NAME): New macros.
	(sput_decl, sputln_decl, sprint_decl, sprintln_decl): New
	definitions.
	(decls_table): Add entries for sput, sputln, sprint, sprint.

	* DINO/dino.tst.in: Add new tests for sput, sputln, sprint,
	sprint.
	
2001-11-02  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (258, 453): Use srdcir for include under
	Cygnwin.
	(483): Process success for conversion of string representation of
	tiny float into 0 too.

2001-11-01  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in: Add all necessary for new file d_heap.c.
	
	* DINO/d_ir.sprut (destroy_unique_ident): New global variable.
	(initiate_icode): Initiate the new variable.
	
	* DINO/d_blocktab.h (process_block_decl_ident): Rename it onto
	process_block_decl_unique_ident.

	* DINO/d_blocktab.c (process_block_decl_ident): Rename it onto
	process_block_decl_unique_ident.
	
	* DINO/d_context.c (first_expr_processing): Use
	`process_block_decl_unique_ident' instead of
	`process_block_decl_ident'.
	(test_context): Add processing for ident `destroy'.
	
	* DINO/d_extern.sprut (instance_state_t, instance_state): New type
	and enumeration.
	(heap_obj): Add field `state'.
	
	* DINO/d_heap.c: New file -- former part of d_run.sprut.  Add code
	for implementing destroy.  Set up field `saved_cstack' for the
	current process whenever cstack is changed.
	
	* DINO/d_func.c (create_instance): Set up field `state'.
	(process_func_class_call): Set up field `saved_cstack' for the
	current process.
	
	* DINO/d_run.sprut: Move all functions into d_heap.c.
	
	* DINO/dino.dsp: Add d_heap.c.
	
	* DINO/dino.tst.in: New test for destroy.
	
	* DINO/dino.sgml.in:  Add description of function destroy.

	* DINO/{dino-4.html, dino.html, dino-10.html, dino.dvi,
	dino.info*, dino.ps, dino.txt}: Update.

2001-10-27  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: Add new test for version.
	
2001-10-27  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (getgn, getegn, getgroups_call, fgn_call): Add
	checking getgrgid on NULL.
	
	* DINO/d_eval.c (initiate_arguments): Rename it into
	initiate_vars.  Add initializing varaibale version.
	(evaluate_program): Use initiate_vars instead of
	initiate_arguments.

	* DINO/d_ir.sprut (ENVIRONMENT): Add final variable version.
	(VERSION_NAME): New macro.
	(version_decl): New variable.
	(decls_table): Add entry for version.

	* DINO/dino.sgml.in:  Add description of version and new
	parameter for getf, fgetf.

	* DINO/{dino-4.html, dino.html, dino-8.html, dino-10.html,
	dino.dvi, dino.info*, dino.ps, dino.txt}: Update.

2001-10-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (test): Remove function test.

	* DINO/d_func.c (process_func_class_call): Remove function test
	call.
	
2001-10-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in (DINO_VERSION): New macro.
	(distdir, libdir, includedir, OPTIONS): Use the new macro.
	(install): Copy the executable with version in the name.

	* DINO/compare.tst: New tests.  Print versions of the
	interpreters.  New parameter to run only DINO tests.

	* DINO/d_context.c (fourth_block_passing): Process chain starting
	with next_pc.

	* DINO/d_conv.c (implicit_arithmetic_conversion): Use ctop instead
	of free.
	(implicit_conversion_for_binary_arithmetic,
	implicit_int_conversion): Change depths in
	implicit_arithmetic_conversion calls.
	(implicit_eq_conversion): Use ctop instead of free.
	(implicit_conversion_for_eq_op): Change depths in
	implicit_eq_conversion calls.

	* DINO/d_dino.c (d_main): Use macro DINO_VERSION.

	* DINO/d_eval.c (push_var_ref, store_vector_element,
	store_table_element, store_designator_value, prepare_op_assign):
	Use ctop instead of free.
	(evaluate): Ditto.  Change depths in calls of
	implicit_arithmetic_conversion, implicit_int_conversion.

	* DINO/d_extern.sprut (DECR_FREE): Change it onto DECR_TOP.
	(DECR_CTOP): New macro.
	(heap_stack): Rename field free onto ctop.

	* DINO/d_func.c (min_max_call, to_lower_upper, eltype_call,
	keys_call, context_call, inside_call, match_call, gmatch_call,
	generall_sub_call, generall_sub_call, split_call, subv_call,
	cmpv_call, del_call, general_ins_call, rev_call, sort_call,
	get_file, rename_call, mkdir_call, rmdir_call, getcwd_call,
	chdir_call, general_chmod, isatty_call, open_call, close_call,
	flush_call, popen_call, pclose_call, tell_call, seek_call,
	file_function_call_start, general_put_call, general_print_call,
	getf_call, fgetf_call, scanel, str_function_end, getgroups_call,
	float_function_start, float_function_start2,
	float_function_finish, general_rand_call, readdir_call,
	ftype_call, stat_finish, fun_call, fgn_call, mode_finish,
	time_call, strtime_call, clock_call, gc_call, system_call,
	exit_call, init_call, call_external_func, create_instance,
	int_earley_parse_grammar, int_earley_set_debug_level,
	int_earley_set_one_parse_flag, int_earley_set_error_recovery_flag,
	int_earley_set_recovery_match, int_earley_parse): Use ctop instead
	of free.  Change depths in calls of implicit_arithmetic_conversion
	and implicit_int_conversion.
	(process_func_class_call): Ditto.  Save ctop and set up new one.

	* DINO/d_run.sprut (ER_CTOP): New macro.
	(SET_TOP, TOP_UP, TOP_DOWN): Use ctop instead of free.  New
	variants of macros.
	(traverse_used_heap_object, change_obj_refs): Use ctop instead of
	free.
	(gc): Save and restore ctop.
	(heap_push): Ditto.  Use ctop instead of free.
	(heap_pop, activate_given_process): Save and restore ctop.

	* DINO/dino.tst.in (test 356): Change output because of added
	optimizations.
	
2001-10-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (del_call): Fix typo in the condition.

	* DINO/d_eval.c (evaluate): Pop stack before blocking process too.

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Use srcdir for the
	tests.

	* DINO/dino.tst.in: Use new diagnostics in tests 466 and 469
	(functions getf and fgetf).
	
2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * DINO/d_ir.sprut (ENVIRONMENT): Add definition of function rev.
	(REV_NAME): New macro.
	(rev_decl): New varaibale and its external declaration.
	(format_vectorof): New node type.
	(decls_table): Add entry for the new function.
        
	* DINO/d_extern.sprut (heap_vect): Add field disp.
	(ER_unpack_els, ER_pack_els): Use the field.

	* DINO/d_run.sprut (OPTIMAL_ELS_SIZE): Make it bigger.
	(_pack_els, _unpack_els):
	(heap_chunk): Add member chunk_stack_top.
	(new_heap_chunk): Initialize the member
	(heap_allocate): Add new parameter saying where in the heap to
	allocate.
	(try_heap_free): Rename it onto try_heap_stack_free.
	(tailored_heap_object_size): Take field disp (for vector) into
	account.
	(define_new_heap_object): New function.
	(define_new_heap_object_places): Use the new function.
	(change_obj_refs): Rename it into change_refs.  Use the next new
	function.
	(change_obj_refs): New function.
	(move_object): New function.
	(compact_heap): Use the previous new function.
	(gc): Use function change_refs.
	(heap_push, heap_pop):  Use allocation for the stacks.
	(create_empty_vector): Use the disp and new parameter for heap
	allocation.
	(create_unpack_vector, expand_vector, unpack_vector): Ditto.
	(create_pack_vector, pack_vector_if_possible): Use the disp.
	(copy_vector): Use the new parameter for heap allocation.
	(hash_val): Use another encoding.
	(hash_key): Ditto.
	(START_TABLE_SIZE): Use the bigger vector.
	(create_tab, create_process): Use the new parameter for heap
	allocation.

	* DINO/d_yacc.y: Add transformation into vector with a format.
	
	* DINO/d_built.h (rev_call): New function definition.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	format_vectorof.

	* DINO/d_conv.h (to_vect_string_conversion): New format parameter.

	* DINO/d_conv.c (to_vect_string_conversion): Add conversion with
	format.  Fix a GC bug.
	(implicit_var_arithmetic_conversion,
	implicit_conversion_for_eq_op): Add NULL parameter to call of
	to_vect_string_conversion.

	* DINO/d_errors.h (ERR_invalid_conversion_format_type,
	DERR_format_conversion_to_vector_operand_type,
	DERR_vector_conversion_format_type):  External definitions of the
	new error messages.
	
	* DINO/d_errors.c (ERR_invalid_conversion_format_type,
	DERR_format_conversion_to_vector_operand_type,
	DERR_vector_conversion_format_type): The new error messages.

	* DINO/d_eval.c (execute_concat_op): Add NULL parameter to call of
	to_vect_string_conversion.
	(evaluate): Ditto.  Add new parameter to call of heap_allocate.
	Process format_vectorof.
	(eval_error): Add new parameter to call of heap_allocate.
	
	* DINO/d_func.c (to_lower_upper, match_call, gmatch_call,
	generall_sub_call, split_call, subv_call, cmpv_call): Add NULL
	parameter to call of to_vect_string_conversion.
	(del_call): Take the first element disp into account.  Return the
	result.
	(general_ins_call): Return the result.
	(rev_call): New function.
	(two_strings_func_start, string_func_start, print_val,
	general_put_call, general_get_call): Add NULL parameter to call of
	to_vect_string_conversion.
	(general_get_ln_file_call): Add new parameter as_lns_p.
	(getf_call): Process the new parameter.
	(fgetln_call): Use the new general_get_ln_file_call parameter.
	(fgetf_call): Ditto.  Process the new parameter.
	(general_scan_call): Use shorter code.
	(readdir_call, strtime_call, system_call): Add NULL parameter to
	call of to_vect_string_conversion.
	(create_instance): Add new parameter to call of heap_allocate.

	* DINO/dino.tst.in: New output for test # 362 because of new
	hashing.
	
	* DINO/dino.sgml.in: Vector conversion with format.  New function
	rev.  Function del, ins, insv now return the vector.  Function
	getln is with parameter now.

	* DINO/{dino-4.html, dino-5.html, dino-8.html, dino-9.html,
	dino.html, dino.dvi, dino.info, dino.info-1, dino.info-2,
	dino.info-3, dino.info-4, dino.ps, dino.txt}: Update.

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* REGEX/regex.h: Update it.

	* REGEX/regex.c: Update it.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (new_heap_chunk): Increase size according to
	heuristic.
	(compact_heap): Don't delete free heap chunk according to
	heuristic.  Move objects only if it is necessary.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_errors.h (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New external definitions.

	* DINO/d_errors.c (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New messages.
	(DERR_erange): Change the message.

	* DINO/d_yacc.y: Add rules for {char, int, float} (..).
	(get_string_code): Add processing `\a'.

	* DINO/d_ir.sprut (charof, intof, floatof): New nodes.

	* DINO/d_func.c (print_ch, get_char_code): Add processing `\a'.

	* DINO/d_eval.c (evaluate): Add evaluating charof, intof, floatof.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	charof, intof, floatof.
	
	* DINO/d_run.sprut (try_heap_free): Return TRUE if heap piece has
	been freed.
	(heap_pop): Changed saved_cstack for current processor if the
	stack has been popped.
	(pack_vector_if_possible): Set eltype when els_number == 0.

	* DINO/d_conv.c (to_vect_string_conversion): Switch off GC
	temporally.

	* Dino/Makefile.in: Fix typo.
	
	* DINO/dino.tst.in: Add tests for {char, int, float} (..).  Modify
	output for system error `result too large'.

	* DINO/dino.sgml.in: Add descriptions of {char, int, float} (..).

	* DINO/dino-5.html, DINO/dino-8.html, DINO/dino-9.html,
	DINO/dino.dvi, DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (rcount_call): Rename it into gmatch.

        * DINO/d_func.c (rcount_call): Rename it into gmatch.  Return
	vector instead of the count.
	
        * DINO/d_ir.sprut (RCOUNT_NAME, rcount_decl): Rename them into
	GMATCH_NAME, gmatch_decl.

	* DINO/d_run.sprut (temp_vlobj2): New global variable.
	(initiate_heap): Create temp_vlobj2.
	(finish_heap): Delete temp_vlobj2.
	
	* DINO/dino.tst.in: Test gmatch instead of rcount.
	
	* DINO/dino.sgml.in: Add description of function gmatch and
	remove rcount.

	* DINO/dino-4.html, DINO/dino-8.html DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.
	
2001-07-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (getf_call, fgetf_call): New prototypes.

	* DINO/d_func.c (general_getln_call): rename it onto
	general_get_ln_file_call.  Add new parameters to process [f]getf.
	(getf_call, fgetf_call): New functions.
	(getln_call, fgetln_call): Use general_get_ln_file_call.

	* DINO/d_ir.sprut (GETF_NAME, FGETF_NAME, getf_decl, fgetf_decl):
	New macros and variables.
	(decls_table): Add entries for getf fgtef.

	* DINO/dino.tst.in: Add tests for getf and fgetf.
	
	* DINO/dino.sgml.in: Add description of functions getf and
	fgetf.

	* DINO/dino-4.html, DINO/dino-8.htmlM DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.
	
2001-07-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (HAVE_SETITIMER): Set up the default value.

	* DINO/d_dino.c (exception_action): Use HAVE_SETITIMER value.

	* DINO/d_eval.c (find_context_by_scope): Use
	current_cached_container_tick.
	(evaluate_program): Use HAVE_SETITIMER value.
	(profile_compare_function): Ditto.
	(print_profile): Ditto.  Print gc time when HAVE_SETITIMER==0.

	* DINO/d_ir.sprut (block): New field cached_container_tick.

	* DINO/d_run.sprut (current_cached_container_tick, gc_ticker): New
	global variables.
	(initiate_heap): Initialize the variables.
	(clear_caches): Remove it.
	(gc): Modify current_cached_container_tick instead of calling
	clear_caches.  Switch on/off gc_ticker.
	(heap_push): Modify current_cached_container_tick.
	(activate_given_process): Modify current_cached_container_tick
	instead of calling clear_caches.
	
2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (print_profile): Print GC time too.

	* DINO/d_run.sprut (in_gc_p, gc_interrupts_number): New global
	variables.
	(initiate_heap): Initiate them.
	(gc): Set up and clear in_gc_p.
	(profile_interrupt): Check that we are in GC.
	
2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_extern.sprut (create_pack_vector): New function prototype
	and member in struct spi.
	(create_pack_vector): New function.

	* DINO/d_run.sprut (compact_heap): Use new_place for looking for
	object in temp refs.
	(create_pack_vector): New function.
	(create_empty_string, create_string): Use create_pack_vector.
	(external_address): Insert an external variable address in
	external_vars only once.
	
	* DINO/d_conv.c (to_vect_string_conversion): Use create_string.

	* DINO/d_eval.c (execute_concat_op): Use create_pack_vector and
	create_unpack_vector.
	(evaluate): Use create_pack_vector.  Set up the correct context
	for func and class.

	* DINO/d_func.c (to_lower_upper): Create the result string first
	before copying into it.
	(regex_node): New global structure.
	(regex_tab, regex_os, regex_vlo): New global variables.
	(regex_node_hash, regex_node_eq, regex_node_eq,
	initiate_regex_tab, finish_regex_tab): New functions.
	(match_call): Use find_regex and create_pack_vector.  Place pmatch
	in temp_vlobj.  Don't call regfree.
	(rcount_call): Use find_regex.  Don't call regfree.
	(generall_sub_call): Use find_regex and create_pack_vector.  Don't
	call regfree.
	(split_call): Ditto.
	(subv_call): Use create_pack_vector.
	(getgroups_call, readdir_call): Ditto.
	(mode_finish): Create the string before set mode of ctop.
	(initiate_funcs): Call initiate_regex_tab.
	(finish_funcs): New function.

	* DINO/dino.tst.in: Correct test results for the 66th test.

	* DINO/dino.sgml.in: Fix typo in regex syntax.

	* DINO/{dino-8.html, dino.dvi, dino.info*, dino.ps, dino.txt}:
	Update.
	
2001-07-06  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (heap_object_size): Add processing hideblock.

2001-06-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * AMMUNITION/IEEE.h (MAX_SINGLE_2_STRING_LENGTH,
	MAX_DOUBLE_2_STRING_LENGTH, MAX_QUAD_2_STRING_LENGTH,
	MAX_SINGLE_4_STRING_LENGTH, MAX_DOUBLE_4_STRING_LENGTH,
	MAX_QUAD_4_STRING_LENGTH, MAX_SINGLE_8_STRING_LENGTH,
	MAX_DOUBLE_8_STRING_LENGTH, MAX_QUAD_8_STRING_LENGTH,
	MAX_SINGLE_10_STRING_LENGTH, MAX_DOUBLE_10_STRING_LENGTH,
	MAX_QUAD_10_STRING_LENGTH, MAX_SINGLE_16_STRING_LENGTH,
	MAX_DOUBLE_16_STRING_LENGTH, MAX_QUAD_16_STRING_LENGTH): New
	macros.
	(IEEE_single_to_binary_string, IEEE_double_to_binary_string,
	IEEE_quad_to_binary_string, IEEE_single_from_binary_string,
	IEEE_double_from_binary_string, IEEE_quad_from_binary_string): New
	function prototypes.
	(to_binary_string, from_binary_string): New C++ functions.
	
        * AMMUNITION/IEEE.c (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single_to_binary_string,
	IEEE_double_to_binary_string, IEEE_quad_to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single_from_binary_string, IEEE_double_from_binary_string,
	IEEE_quad_from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.
	
        * AMMUNITION/IEEE.cpp (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single::to_binary_string,
	IEEE_double::to_binary_string, IEEE_quad::to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single::from_binary_string, IEEE_double::from_binary_string,
	IEEE_quad::from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.

	* AMMUNITION/IEEE.tst.in: Add the new macros and test the new
	external functions.

	* AMMUNITION/IEEE++.tst.in: Ditto.
	
	* AMMUNITION/ammunition.sgml.in: Add description of the new macros
	and the external functions.

	* AMMUNITION/ammunition++.sgml.in: Ditto.

	* AMMUNITION/{ammunition.info*, ammunition.txt, ammunition.ps,
	ammunition.dvi, ammunition-11.html}: Update.

	* AMMUNITION/{ammunition++.info*, ammunition++.txt,
	ammunition++.ps, ammunition++.dvi, ammunition++-11.html}: Ditto.

	* AMMUNITION/ammunition++.info-4: New file.

	* DINO/ieee.d (opvalue): New exception class.
	(ignore_excepts): New variable.
	(process_except): Use it.
	(to_binary_string, from_binary_string):  New functions.

	* DINO/ieee_int.c (ieee_single_to_binary_string,
	ieee_double_to_binary_string, ieee_quad_to_binary_string,
	ieee_single_from_binary_string, ieee_double_from_binary_string,
	ieee_quad_from_binary_string): New functions.
	(ieee_address): Add their addresses.

	* DINO/ieee.tst.in (453): Test new functions and ignoring the
	excepts.

2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SHILKA/yacc.y (make_lower_case_string): New function.  Use it
	for creation of keywords when -case.

	* SHILKA/shilka.tst.in: Add Novikov's test.
	
2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/arithm.h (unsigned_integer_from_based_string): Fix
	typo.

	* DINO/mpi.d (mpi_ignore_overflow): New variable.
	(check_overflow): Make it private.  Do not generate excpetion if
	mpi_ignore_overflow is set up.
	(unsigned_add, unsigned_subtract, unsigned_multiply,
	unsigned_divide, unsigned_remainder, unsigned_shift_right,
	unsigned_shift_left, unsigned_or, unsigned_and, unsigned_not,
	unsigned_eq, unsigned_ne, unsigned_gt, unsigned_lt, unsigned_ge,
	unsigned_le, unsigned_change_size, unsigned_to_based_string,
	unsigned_to_string, unsigned_from_based_string,
	unsigned_from_string): New functions.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder,
	mpi_unsigned_shift_right, mpi_unsigned_shift_left,
	mpi_unsigned_or, mpi_unsigned_and, mpi_unsigned_not,
	mpi_unsigned_eq, mpi_unsigned_ne, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le,
	mpi_unsigned_change_size, mpi_unsigned_to_based_string,
	mpi_unsigned_from_based_string): New external functions.

	* DINO/mpi.c (arithm_op): New function.
	(mpi_add, mpi_subtract, mpi_multiply, mpi_divide, mpi_remainder):
	Use it.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder): New functions.
	(mpi_par_op): Set up size of the result mpi.
	(shift): New function.
	(mpi_shift_right, mpi_shift_left): Use it.
	(mpi_unsigned_shift_right, mpi_unsigned_shift_left): New
	functions.
	(logical): New function.
	(mpi_or, mpi_and): Use it.
	(mpi_unsigned_or, mpi_unsigned_and): New functions.
	(not): New function.
	(mpi_not): Use it.
	(mpi_unsigned_not): New function.
	(cmp): New function.
	(mpi_eq, mpi_new, mpi_gt, mpi_lt, mpi_ge, mpi_le): Use it.
	(mpi_unsigned_eq, mpi_unsigned_new, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le): New functions.
	(change_size): New function.
	(mpi_change_size): Use it.
	(mpi_unsigned_change_size): New function.
	(to_based_string): New function.
	(mpi_to_based_string): Use it.
	(mpi_unsigned_to_based_string): New function.
	(from_based_string): New function.
	(mpi_from_based_string): Use it.
	(mpi_unsigned_from_based_string): New function.
	(mpi_address): Add new exported functions.

	* DINO/dino.tst.in: Expand test for mpi.
	
	* DINO/dino.sgml.in: Add comment for match.

	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.ps, DINO/dino.txt: Update.
	
2001-06-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (rcount_call): New prototype.

	* d_eval.c (evaluate): Create objects before setting mode.

	* d_func.c (rcount_call): New function.

	* d_run.sprut (create_string): Call create_empty_string with
	bigger min_length.

	* d_ir.sprut (rcount): Add new function (macros, table entry
	etc.).

	* dino.tst.in: Add tests for rcount.

	* dino.sgml.in: Add documentation of rcount.

	* dino.html, dino-4.html, dino-8.html, dino.dvi, dino.info*,
	dino.ps, dino.txt: Update.

2001-06-21  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* mpi.c (mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.  Use
	integer_to_based_string and integer_from_based_string.

	* mpi.d (mpi_except): Add mpi_base.
	(mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.
	(to_based_string, from_based_string): New functions.
	(to_string, from_string): Use them.
	
2001-06-20  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* arithm.c, arithm.cpp, arithm.h: Add new functions
	unsigned_integer_to_based_string, integer_to_based_string,
	unsigned_integer_from_base_string, integer_from_based_string,
	to_based_string, from_based_string, to_based_str, from_based_str.
	(integer_from_string, unsigned_integer_from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	integer_to_string, unsigned_integer_to_string): Modify them.
	(signed_integer::from_string, unsigned_integer::from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	signed_integer::to_string, unsigned_integer::to_string): Modify
	them.
	
        * ammunition.sgml.in, ammunition.sgml.in: The new functions
	documentation.

	* ammunition.txt, ammunition.ps, ammunition.info*, ammunition.dvi,
	ammunition-10.html, ammunition++.txt, ammunition++.ps,
	ammunition++.info*, ammunition++.dvi, ammunition++-10.html:
	Update.
	
2001-06-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* sgml-txt: Fix bug with itemize inside enum.

	* dino.sgml.in: Fix indentation for itemize.

	* dino-{468}.html, dino.dvi, dino-info*, dino.ps, dino.txt:
	Update.

2001-06-05  Dave Bodenstab  <imdave@mcs.net>

	* DINO/compare.tst: Permit to use compiled code for TCL tests.

2001-05-31  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdino): Fix different build directory problem.

	* yacc.exe: New file.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/Makefile.in DINO/Makefile.in MSTA/Makefile.in
	NONA/Makefile.in OKA/Makefile.in SHILKA/Makefile.in
	SPRUT/Makefile.in: Change generated documenation if it is only
	obsolete.

	* Makefile.in AMMUNITION/Makefile.in DINO/Makefile.in
	MSTA/Makefile.in NONA/Makefile.in OKA/Makefile.in
	SHILKA/Makefile.in SPRUT/Makefile.in: Generation doc files from
	any build directory.

	* REGEX/Makefile.in REGEX/doc/Makefile.in REGEX/test/Makefile.in:
	Removing some unnecessary entries.
	
2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.html cocom.dvi cocom.txt cocom.ps cocom.info
	AMMUNITION/ammunition*.html AMMUNITION/ammunition.info*
	AMMUNITION/ammunition.txt AMMUNITION/ammunition.dvi
	AMMUNITION/ammunition.ps AMMUNITIONammunition++*.html
	AMMUNITIONammunition++.info* AMMUNITIONammunition++.txt
	AMMUNITIONammunition++.dvi AMMUNITIONammunition++.ps
	DINO/dino*.html DINO/dino.info* DINO/dino.txt DINO/dino.dvi
	DINO/dino.ps MSTA/msta*.html MSTA/msta.info* MSTA/msta.txt
	MSTA/msta.dvi MSTA/msta.ps NONA/nona*.html NONA/nona.info*
	NONA/nona.txt NONA/nona.dvi NONA/nona.ps OKA/oka*.html
	OKA/oka.info* OKA/oka.txt OKA/oka.dvi OKA/oka.ps
	SHILKA/shilka*.html SHILKA/shilka.info* SHILKA/shilka.txt
	SHILKA/shilka.dvi SHILKA/dino.ps SPRUT/sprut*.html
	SPRUT/sprut.info* SPRUT/sprut.txt SPRUT/sprut.dvi SPRUT/sprut.ps:
	Add generated documentation files.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Initial revision of cocom and dino.
