2012-12-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in (all): Use macro MAKE.  Build all REGEX.
	* configure.in: Comment code for no_shlib and
	AC_CONFIG_SUBDIRS(REGEX).  Add macros from REGEX/configure.in.
	Add REGEX/Makefile REGEX/doc/Makefile REGEX/test/Makefile to
	output files.  Use CC for MAKELIB.  Add prefix d_ for libraries in
	DINO_ADDITIONAL_LIBS.
	* configure: Update.
	* AMMUNITION/cocom-config.h: Update.
	* DINO/d_eval.c (FIND_CONTEXT_BY_SCOPE): Remove.
	(find_context_by_scope): Use only one variant.  Insert code from
	FIND_CONTEXT_BY_SCOPE.
	(EXECUTE_AR_OP, EXECUTE_INT_OP): Remove.
	(i1, i2, f1, f2, ar_convert, int_convert): New.
	(evaluate_code): Move assign case first.  Use new functions and variables.
	* REGEX/Makefile.in (config.h): New entry.
	(all): Add to all.
	* REGEX/doc/Makefile.in (regex.texi): fix paths with srcdir.

2012-11-28  Vladimir Makarov  <vmakarov@users.sf.net>

	* CHANGES: Add changes in DINO (swap, faster interpriter).
	* gmp.c, mpi.c, ieee_int.c, ipcerr_int.c, socket_int.c: Rename to
	d_gmp.c, d_mpi.c, d_ieee.c, d_ipcerr.c, d_socket.c.
	* DINO/Makefile.in (gmp.c, gmp.so, mpi.c, mpi.so): Rename to
	d_gmp.c, d_gmp.so, d_mpi.c, d_mpi.so.
	(ieee_int.c, ieee.so, ipcerr_int.c, ipcerr.so): Rename to
	d_ieee.c, d_ieee.so, d_ipcerr.c, and d_ipcerr.so
	(socket_int.c, socket.so): Rename to d_socket.c and d_socket.so.
	* DINO/compare.tst: Remove refactor.  Add tests for Python3, Lua,
	and Ruby.  Improve Dino code for sieve.
	* DINO/d_ir.sprut (logical_end): New abstract node.
	(logical_or_end, logical_and_end): Inherit logical end.
	* DINO/dino.tst.in: Use new names for .so files.

2012-11-22  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (dino.txt, dino.html, dino.info, dino.pdf):
	Make dependence on dino.sgml.tmp only.
	(dino.info): Remove sgml-info and sgml-postinfo.
	(dino.sgml.tmp): Remove escape sequences.
	* DINO/d_context.c (first_block_passing, second_block_passing)
	(third_block_passing, dump_code):  Remove swap.
	(evaluate_code): Ditto.  Move code for string and nil.
	* DINO/d_ir.sprut (swap): Remove.
	* DINO/d_yacc.y: Ditto.
	* DINO/dino.1: Fix typo.  Remove dlls.
	* DINO/dino.sgml.in: Remove swap.
	* DINO/dino.txt, DINO/dino*.html,
	DINO/dino.dvi, DINO/dino.info, DINO/dino.pdf, DINO/dino.ps:
	Update.
	* DINO/dino.tst.in: Changes swaps.

2012-11-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/Makefile.in: Make entry for each test file run.
	* AMMUNITION/*.tst.in: Generate uniq files.

2012-11-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_heap.c (expand_vector): Rewrite.  Don't expand when disp
	makes expansion possible.

2012-11-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Setup compiler flags for non-empty cocom_debug.
	Don't change -O2 to -Ofast for non-empty cocom_debug.
	* configure: Update.
	* DINO/d_run.sput (ER_CTOP, SET_TOP): Remove.
	(TOP_UP, TOP_DOWN): Simplify.
	* DINO/d_heap.c: Remove SET_TOP.  Change ER_CTOP by ctop.
	* DINO/d_func.c: Ditto.
	* DINO/d_eval.c: Ditto.
	(evaluate_code): Remove INTERRUPT_CHECK for return nodes.
	* DINO/d_conv.c (implicit_conversion_for_binary_arithmetic_op):
	Rename flags.  Update float flags.
	* DINO/d_context.c (dump_code): Print block node.
	* DINO/gmp.c (_z_clear): Fix typo.
	(_z_set_str): Remove var and code dealing with that.
	* DINO/dino.tst.in: Fix output for test 584.

2012-11-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_run.sprut (temp_ref, heap_temp_refs, TEMP_REFS_LENGTH):
	Remove.
	(CREATE_TEMP_REF, FINISH_TEMP_REF, EMPTY_TEMP_REF): Ditto.
	(PUSH_TEMP_REF, POP_TEMP_REF, GET_TEMP_REF, TEMP_REFS_LENGTH):
	Ditto.
	* DINO/d_heap.c (temp_ref, in_heap_temp_refs): Remove.
	(initiate_heap, mark_used_heap_objects, define_new_heap_object):
	Do not use temp refs.
	(change_refs, destroy_instances, move_object, heap_push): Ditto.
	(expand_vector, unpack_vector, copy_vector, expand_tab, copy_tab): Ditto.
	(table_to_vector_conversion, vector_to_table_conversion): Ditto.
	* DINO/d_func.c (keys_call, match_call, general_sub_call): Ditto.
	(split_call, subv_call, general_ins_call): Ditto.
	(array_sort_compare_function, sort_call): Ditto.  Use stack for
	context.
	(scanel, readdir_call, create_instance, process_func_class_call):
	Do not use temp refs.
	* DINO/d_eval.c (find_catch_pc, execute_concat_op, evaluate_code)
	(initiate_vars, eval_error): Ditto.

2012-11-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/earley.c (make_parse): Check stack on emptiness.
	* DINO/d_dino.c: New flags -d and -dd.
	(dino_main): Set up dump_flag.
	* DINO/d_extern.sprut (ER_type_t, node_mode_2_type): Remove.
	(INDEXED_VAL): Rename to IVAL.
	(DECR_CTOP): Define only optimized version.
	(type): Use ER_node_mode_t instead of ER_type_t.
	(thread): New node.
	* DINO/d_func.h (internal_inside_call): Change signature.
	* DINO/d_func.c: Use IVAL instead of INDEXED_VAL.  Add parameter
	to to_vect_string_conversion, implicit_int_conversion, and
	implicit_arithmetic_conversion calls.  Don't use node_mode_2_type.
	(below_ctop): Define.
	(context_call): Process thread node.
	(internal_inside_call): Ditto.  Add 2 parameters.
	(inside_call): Add parameters to call of internal_inside_call.
	(array_sort_compare_function): Remove TOP_UP.
	(sort_call, general_get_ln_file_call, call_external_func): Do not
	set up no_gc_flag.
	(print_val): Process thread node.  Use node_mode instead of type.
	(process_func_class_call): Process thread node.  Remove
	non-optimized code.  Change code dealing with stack top.
	(init_syntax_token, tree_to_heap): Change code dealing with stack
	top.
	(int_earley_parse): Do not set up no_gc_flag.
	* DINO/d_conv.c: Use IVAL instead of INDEXED_VAL.  Don't setup
	no_gc_flag.
	(to_vect_string_conversion): Change signature.
	(implicit_arithmetic_conversion): Ditto.
	(implicit_conversion_for_binary_arithmetic_op): Ditto.
	(implicit_int_conversion, implicit_conversion_for_binary_int_op): Ditto.
	(implicit_eq_conversion, implicit_conversion_for_eq_op): Ditto.
	* DINO/d_conv.h (to_vect_string_conversion): Change signature.
	(implicit_arithmetic_conversion): Ditto.
	(implicit_conversion_for_binary_arithmetic_op): Ditto.
	(implicit_int_conversion, implicit_conversion_for_binary_int_op): Ditto.
	(implicit_conversion_for_eq_op): Ditto.
	* DINO/d_eval.c: Rewrite code for operand based IR.
	* DINO/d_context.c: Rewrite for new IR.  Add code dump.
	* DINO/d_heap.c (cvars): New.
	(initiate_int_tables): Process thread node.
	(node_mode_2_type, no_gc_flag): Remove.
	(GC_executed_stmts_count): New.
	(initiate_heap): Reset it.
	(tvar_num1, tvar_num2, set_tvars): New.
	(final_call_destroy_functions): Set cvars.  Call set_tvars.
	Remove non-optimized code.
	(heap_allocate): Don't call gc.  Setup GC_executed_stmts_count.
	(traverse_used_var, change_val, change_var, change_obj_refs):
	Process thread node.
	(destroy_instances): Remove no_gc_flag code.
	(gc): Rename to GC.  Set cvars.  Call set_tvars.
	Reset GC_executed_stmts_count.
	(heap_push, heap_pop, activate_given_process): Set cvars.  Call
	set_tvars.  Remove non-optimized code.
	(hash_val, hash_key, eq_key): Process thread node.
	(find_tab_entry): Don't use stack.
	(initiate_processes): Decrease process_quantum.
	(interrupt): New.
	* DINO/d_ir.sprut (IR_POINTER): Rename to IR_PTR.
	(parse): Make more temps.
	(generic_pos): New traverse_flag.
	(logical_binary_operation): Inherit from unary_operation.
	(cond): Inherit from expr.  New cond_expr, true_expr, false_expr.
	Remove cond and false_path_pc.
	(format_vectorof): Inherit from binary_operation.
	(index_designator, vec_index_designator, key_index_designator):
	New nodes.
	(index): Inherit from vec_index_designator.
	(key_index): Inherit from key_index_designator.
	(procedure_call): Rename to proc_call.
	(component_designator, index_designator): Add new members for op
	and result nums.
	(int, float, char, string, type, nil): Add new members for result
	num.
	(no_testing_period): Remove.
	(operation): Add new members for result num.
	(binary_operation, unary_operation): Add new members for op nums.
	(lvalue_index, lvalue_index_and_val): Inherit from
	vec_index_designator.
	(lvalue_key_index, lvalue_key_index_and_val): Inherit from
	key_index_designator.
	(lvalue_period, lvalue_period_and_val): Inherit from
	period_designator.
	(logical_or_end, logical_and_end): New nodes.
	(cond):
	(par_assign_test): Ditto.
	(vector_table, class_func_thread_call, assign_stmt, swap): Add new
	members for op nums.
	(proc_call, if_stmt, for_stmt, foreach_stmt, return_with_result):
	Ditto.
	(throw, wait_stmt, block, exception, occurrence): Ditto.
	(local_var_occurrence): New.
	(local_lvalue_var_occurrence): Remove.
	(local_lvalue_var_occurrence_and_val, pop_func_call): Remove.
	* DINO/d_run.sprut (cvars, tvar_num1, tvar_num2): New.
	(below_ctop, no_gc_flag): Remove.
	(GC_executed_stmts_count, interrupt): New.
	(gc): Rename to GC.
	(QUANTUM_SWITCH_PROCESS): Rename to INTERRUPT_CHECK and rewrite it
	using interrupt.
	* DINO/d_runtab.c (block_decl_idents_tables): Rename to
	block_decl_tables.
	* DINO/d_runtab.h (block_decl_idents_tables): Ditto.
	(struct block_decl_idents_tables): Rename block_decls to
	block_ident_decls.
	* DINO/d_yacc.y: Use new member names of IR nodes.
	* DINO/dino.tst.in (test 62): Change func to thread in expected
	output.
	(test 584, test 585): New tests for dump.
	* DINO/gmp.c: Use IVAL instead of INDEXED_VAL.
	* DINO/ieee_int.c: Ditto.
	* DINO/mpi.c: Ditto.
	* DINO/socket_int.c: Ditto.

2012-09-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_ir.sprut (access_ident): Rename ident into
	ident_in_clause.
	(exception): Rename catch_list_pc into next_catch_list_pc.
	* DINO/d_yacc.y (access_list): Use ident_in_clause instead of
	ident.
	* DINO/d_eval.c (evaluate): Use next_catch_list_pc for exception.
	* DINO/d_context.c (second_block_passing):  Use ident_in_clause
	for access_ident.
	(third_block_passing, fourth_block_passing, dump_code): Use
	next_catch_list_pc for exception.

2012-09-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* d_yacc.y (designator): Use designator and component instead of
	left_operand and right_operand.

	* d_heap.c (REAL_BLOCK_VARS_NUMBER): Remove.  Use
	real_block_vars_number instead.

	* d_ir.sprut: Remove multiple inheritance.
	(real_block_vars_number): New function.
	(ir_node): Make it abstract.  Move next_pc to ...
	(generic_pos): ... here.
	(expr): Make it inherited from generic_pos.
	(designator, char, int, float, string, operation, nil): Make it
	inherited from expr.
	(ident): Make it inherited from designator.
	(member_access): Remove.
	(component_designator): New.
	(index, key_index): Make it inherited from component_designator.
	(period_designator): New.
	(period, no_testing_period): Make it inherited from period_designator.
	(type, vector_table, class_func_thread_call): Make it inherited
	from expr.
	(swap): Remove %abstract.
	(stmt): Add const_flag.
	(may_be_const_decl): Remove.
	(external_decl): New.
	(var):  Make it inherited from decl.
	(external_var, external_func):  Make it inherited from
	external_decl.
	(lvalue_index, lvalue_index_and_val, lvalue_key_index): Make it
	inherited from component_designator.
	(lvalue_key_index_and_val): Ditto.
	(lvalue_period, lvalue_period_and_val, lvalue_no_testing_period):
	Make it inherited from period_designator.
	(lvalue_no_testing_period_and_val): Ditto.
	(decl_in_block): Remove.
	(decl): Add decl_number_in_block.
	(occurrence): Make it inherited from designator.
	(var_occurrence, local_lvalue_var_occurrence): Make it inherited from occurence.
	(local_lvalue_var_occurrence_and_val, lvalue_var_occurrence): Ditto.
	(lvalue_var_occurrence_and_val, external_func_occurrence): Ditto.
	(func_occurrence, class_occurrence): Ditto.
	(external): Remove.
	(external_decl): New.
	(external_var, external_func): Make it inherited from
	external_decl.

	* DINO/d_context.c (current_scope): Rename to curr_scope.
	(current_pc): Rename to curr_pc.
	(first_expr_processing): Remove parameter and its processing.  Use
	designator and component instead of left_operand and right_operand
	for component designators.
	(process_extension_block): Remove code temporary_vars_number.
	(first_block_passing): Ditto.  Remove second argument for
	first_expr_processing calls.
	(curr_real_scope): New.
	(START_TEMP_VARS_NUMBER): Rename to ADD_TEMP_VARS_NUMBER.
	(second_expr_processing): New.
	(second_block_passing): Call second_expr_processing.  Set up
	curr_real_scope.
	(third_expr_processing, fourth_expr_processing, dump_code): Use
	designator and component instead of left_operand and right_operand
	for component designators.
	(current_node_num): Rename to curr_node_num.
	(test_context): Initiate curr_real_scope.

2012-09-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_eval.c (DIRECT_THREADED, USE_SWITCHES): Remove.
	(evaluate_code): Remove code for DIRECT_THREADED and USE_SWITCHES.
	Remove macros CASE and BREAK.

2012-09-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Check -flto.
	* configure: Update.
	* DINO/d_main.c (main): Remove code inside #if 0.
	* DINO/d_ir.sprut (if_stmt): New field common_part_pc.
	* DINO/d_extern.sprut (func, class): Move field definitions
	func_no and class_no upper.
	* DINO/d_common.h (dump_flag): New external.
	* DINO/d_dino.c (dump_flag): New.
	(COMMAND_LINE_DESCRIPTION): Add description for -d.
	(dino_main): Set up dump_flag.  Evaluate program if ! dump_flag.
	* DINO/d_context.c (third_block_passing): Set up common_part_pc.
	(go_through): Process block.
	(fourth_block_passing): Process common_part_pc.
	(print_indent, node_info_hash, node_info_eq, find_node_info): New
	functions.
	(initiate_node_tab, finish_node_tab, dump_code): Ditto.
	(struct node_info): New.
	(node_info, node_info_tab, node_info_os, current_node_num): New
	static vars.
	(last_goto_flag, curr_line_number): Ditto.
	(test_context): Dump the IR code if dump_flag.

2012-08-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Check -Ofast.
	* configure, cocom-config.h.in: Update.

2010-04-09  Vladimir Makarov  <vmakarov@users.sf.net>

	* cocom.spec: Remove removed doc files.
	* dino.spec: Change doc files path.

2010-04-09  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in: use INSTALL, INSTALLDATA, prefix, docdir.  Add
	dino-copyright, cocom-copyright.  Install document files for cocom
	and dino.  New entries rpm, deb, dinorpm, dinodeb.
	* dino-copyright, cocom-copyright, dino.dsc, cocom.dsc: New files.
	* cocom.info: rebuild.
	* cocom.spec: Change doc files.
	* AMMUNITION/Makefile.in: Use docdir.  Install document files.
	* DINO/Makefile.in: Ditto.
	* MSTA/Makefile.in: Ditto.
	* NONA/Makefile.in: Ditto.
	* OKA/Makefile.in: Ditto.
	* SHILKA/Makefile.in: Ditto.
	* SPRUT/Makefile.in: Ditto.
	* AMMUNITION/ammunition++.info, AMMUNITION/ammunition.info:
	Rebuild.
	* AMMUNITION/errors.c (default_output_error_function): Use fputs.
	* AMMUNITION/errors.cpp (errors::output_error_function): Ditto.
	* DINO/d_func.c (chdir_call): Check chdir return status.
	(getgroups_call): Check getgroups return status.
	* DINO/dino.info: rebuild.
	* DINO/dino.tst.in (test 496): Change expected output.
	* MSTA/msta.info, OKA/oka.info, SHILKA/shilka.info,
	NONA/nona-{1-5}.html, NONA/nona.html, NONA/nona.dvi,
	NONA/nona.info, NONA/nona.pdf, NONA/nona.ps, NONA/nona.txt,
	SPRUT/sprut-{1-5}.html, SPRUT/sprut.html, SPRUT/sprut.dvi,
	SPRUT/sprut.info, SPRUT/sprut.pdf, SPRUT/sprut.ps,
	SPRUT/sprut.txt: Rebuild.
	* NONA/nona.1, SPRUT/sprut.1: Minor changes to remove warnings.
	* AMMUNITION/ammunition++.info-{1-4},
	AMMUNITION/ammunition.info-{1-3}: Remove.
	* cocom/cocom.info, cocom/sgml-info, cocom/sgml-postinfo: Remove.

2010-02-13  Vladimir Makarov  <vmakarov@users.sf.net>

	* dino.spec, cocom.spec: Use /usr/share/man instead of /usr/man.

2009-03-01  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Use AC_CHECK_TYPES instead of AC_CHECK_TYPE.  Add
	comments for AC_DEFINE.  Change -O2 to -O3 for CFLAGS and
	CXXFLAGS.  Remove -finline-limit.
	* acconfig.h: Remove.
	* configure: Update.
	* AMMUNITION/cocom-config.h.in: Update.
	* AMMUNITION/sgramm.y (yyerror): Add const to parameter type.
	* DINO/socket_int.c: Use HAVE_INET_ATON instead of HAVE_inet_aton.
	* MSTA/fcalc.y: Include <string.h>.
	* SPRUT/A_base.sprut (comment): Add const to argument type.
	* SPRUT/gen.c (generate_spi): Remove usage standard macro
	offsetof.
	(output_node_names): Add const to the type.

2008-12-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Fix a typ in fgrep user.

2008-12-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in: Remove duplication in OperatorOrDelimeter.
	Change rand description.

	* DINO/dino.txt, DINO/dino-3.html, DINO/dino-8.html,
	DINO/dino.dvi, DINO/dino.info, DINO/dino.pdf, DINO/dino.ps:
	Update.

2008-12-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Fix CPU speed scaling and printing only user time for spell test.

2008-12-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add scaling code code to CPU speed.  Add code
	refactoring for Python 3.x.  Print only user time.

2007-08-15  Vladimir Makarov  <vmakarov@users.sf.net>

        * CHANGES, DINO-CHANGES: Added -t option.
	* DINO/d_common.h (trace_flag): New external.
	* DINO/d_dino.c (dino_finish). Call print_trace_stack.
	(COMMAND_LINE_DESCRIPTION): Add option -t.
	(trace_flag): New variable.
	(dino_main): Initiate trace_flag.  Process -t.
	* DINO/d_errors.c (ERR_decl_is_absent_in_a_block,
	ERR_invalid_type_of_arrow_left_operand,
	DERR_decl_is_absent_in_given_class_or_block): Fix typo.
	* DINO/d_eval.c (find_catch_pc): Collect stack trace.
	(evaluate_code): Add local_var_occurrence and wait_finish for the
	label table.  Use goto instead of continue for DIRECT_THREADED.
	Add USE_SWITCHES and the corresponding implementation.
	* DINO/d_func.c (trace_stack): New variable.
	(print_trace_stack): New function.
	(exit_call): Collect stack trace.
	(process_func_class_call): Use ER_call_pc instead of
	ER_return_pc.
	(initiate_funcs): Create trace_stack.
	(finish_funcs): Delete trace_stack.
	* DINO/d_func.h (print_trace_stack): New external.
	* DINO/d_heap.c (final_call_destroy_functions, heap_push,
	heap_pop): Use ER_call_pc instead of ER_return_pc.
	* DINO/d_run.sprut (struct trace_stack_elem): New.
	(trace_stack): New external.
	* DINO/dino.tst.in (214, 402, 403): Fix typo in message.
	(580-583): New tests for tracing.
	* DINO/dino.1: Add -t.
	* DINO/{dino.html, dino-[1-9].html, dino-10.html}, DINO/dino.dvi,
	DINO/dino.info, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.
	* DINO/O/FE/lex.d: Add newline at the end of file.

2007-05-23  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/msta.tst.in (test 11): Change conflicts number.
	* MSTA/contexts.c (context_concat): Use temporary context.

2007-05-15  Vladimir Makarov  <vmakarov@users.sf.net>

	* contexts.c (get_new_token_string): Change assert.
	(token_string_length): Check pointer after length.
	(output_token_string): Output empty.
	(context_concat): Zero context if 2nd one is empty.
	* descript.c (output_first_sets): New function.
	* descript.h (output_first_sets): New prototype.
	* gen.c (generate): Output first sets.
	* lr.c (shorten_LR_situation_context_token_string): Don't output
	token_string to stderr.
	* relation.c (set_nonterm_relation_FIRST): Initiate the first set
	from current iteration.  Rewrite with using <e>.
	(set_FIRST_of_rule_tail): Add <e> for rule end.
	(FIRST_of_tail): Use concat only.

2007-05-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/relation.c (set_nonterm_relation_FIRST): Add parameter
	init_p and use it.
	(evaluate_nonterminals_relation_FIRST): Use the new parameter.
	* MSTA/msta.tst.in: Add a new test.  Change # conflicts for 11
	test.

2007-05-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/ird.sprut (single_nonterm_definition): Add new field
	next_iter_relation_FIRST.
	* MSTA/relation.c (evaluate_minimal_derived_string_length,
	evaluate_nonterminals_relation_FIRST): Use prev iteration values
	of FIRST.
	* MSTA/msta.tst.in: Add a new test.

2007-05-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/msta.tst.in: Add a new test.

2007-05-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in (tests 131, 351, 352, 363, 403): Fix error
	position.

2007-05-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/relation.c (minimal_derived_string_length_pass_number,
	relation_FIRST_pass_number): Remove.
	(dfs_nonterm_definitions, something_changed_p): New static
	variables.
	(nonterm_DFS): New function.
	(set_nonterm_minimal_derived_string_length,
	set_nonterm_relation_FIRST): Change result type.  Rewrite.
	(evaluate_nonterminals_relation_FIRST,
	evaluate_minimal_derived_string_length): Use iterative algorithm.

2007-04-13  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in (strtime): %% -> %.
	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.

2007-04-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_context.c (third_expr_processing): Set up position for
	ident.

2007-04-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/ammunition++.sgml.in, AMMUNITION/ammunition.sgml.in:
	Add xor.
	* AMMUNITION/ammunition++-10.html, AMMUNITION/ammunition++.dvi,
	AMMUNITION/ammunition++.info, AMMUNITION/ammunition++.info-1,
	AMMUNITION/ammunition++.info-2, AMMUNITION/ammunition++.info-3,
	AMMUNITION/ammunition++.info-4, AMMUNITION/ammunition++.pdf,
	AMMUNITION/ammunition++.ps, AMMUNITION/ammunition++.txt,
	AMMUNITION/ammunition-10.html, AMMUNITION/ammunition.dvi,
	AMMUNITION/ammunition.info, AMMUNITION/ammunition.info-1,
	AMMUNITION/ammunition.info-2, AMMUNITION/ammunition.info-3,
	AMMUNITION/ammunition.pdf, AMMUNITION/ammunition.ps,
	AMMUNITION/ammunition.txt: Update.
	* AMMUNITION/arithm++.tst.in, AMMUNITION/arithm.tst.in: Add tests
	for xor.
	* AMMUNITION/arithm.c (integer_xor, unsigned_integer_xor): New
	functions.
	* AMMUNITION/arithm.cpp (signed_integer::_xor_,
	unsigned_integer::_xor_): New functions.
	* AMMUNITION/arithm.h (integer_xor, unsigned_integer_xor): New
	externals.
	(_xor_): New static class functions.
	(^): New class operators.
	* DINO/d_errors.c (DERR_func_in_left_arrow_side,
	DERR_class_in_left_arrow_side, DERR_there_is_not_such_decl,
	DERR_decl_name_is_not_string): Remove.
	* DINO/d_errors.h (): Ditto.
	* DINO/mpi.c (mpi_xor, mpi_unsigned_xor): New functions.
	* DINO/mpi.d (mpi_xor, mpi_unsigned_xor): New functions.

2007-02-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.test.in: simplify two tests for fp exceptions.

2007-02-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.html, DINO/dino-1.html, DINO/dino-2.html
	DINO/dino-3.html, DINO/dino-4.html, DINO/dino-5.html
	DINO/dino-6.html, DINO/dino-7.html, DINO/dino-9.html
	DINO/dino-10.html: Change modification date.

2007-02-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* cocom.spec (BuildRequires, Requires): New.
	(Version, dino_version): Increase.
	(/usr/bin/dino-%{dino_version},
	/usr/lib/dino-%{dino_version}/gmp.d,
	/usr/lib/dino-%{dino_version}/gmp.so): New.
	* dino.spec (BuildRequires, Requires): New.
	(/usr/bin/dino-%{version}, /usr/lib/dino-%{version}/gmp.d,
	/usr/lib/dino-%{version}/gmp.so): New.
	* MSTA/compare.tst.in: Don't fgrep with is.
	* OKA/Makefile.in: Remove dsp and dsw files.

2007-02-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Don't run AWK for spell checker and reversing
	a file.
	* DINO/dino.tst.in: Remove format 'F'.  Smaller 'too big width'.
	* DINO/d_func.c (general_putf_call): Remove 'F'.
	* DINO/dino.sgml.in: Remove format 'F'.
	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.

2007-02-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (dinolibdir, dinoincludedir): Rename from
	libdir and includedir.  Define through libdir and includedir.
	(libdir, includedir): New.
	(uninstall): Remove directories libdir and includedir. 

2007-02-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO-README, README: Tested platforms.
	* DINO-CHANGES, CHANGES: GMP package.
	* Makefile.in (additional_files): Remove yacc.exe

2007-02-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/errors++.tst.in, AMMUNITION/errors.tst.in: New
	possible output for error 0.
	* DINO/dino.tst.in: Ignore when gmp is not present.

2007-02-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Put parentheses around time in if.
	Switch off ackermann for AWK.
	* DINO/d_func.c (general_putf_call): Remove a and A formats.
	* DINO/d_main.c (gmp_address): New external definition.
	(get_library_search_function): Call gmp_address.
	* DINO/dino.tst.in: Use SCMP instead of CMP for stdin.  Remove
	tests for format a and A.  Add alternative output for format f and
	F.
	* DINO/dino.sgml.in: Remove format a and A.
	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.
	* DINO/gmp.c (mpz_address): Rename to gmp_address.

2007-02-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in, AMMUNITION/allocate.c, AMMUNITION/allocate.cpp,
	AMMUNITION/allocate.h, AMMUNITION/allocate.tst.in,
	AMMUNITION/allocate++.tst.in, AMMUNITION/arithm.c,
	AMMUNITION/arithm.cpp, AMMUNITION/arithm.h,
	AMMUNITION/arithm.tst.in, AMMUNITION/arithm++.tst.in,
	AMMUNITION/bits.c, AMMUNITION/bits.cpp, AMMUNITION/bits.h,
	AMMUNITION/bits.tst.in, AMMUNITION/bits++.tst.in,
	AMMUNITION/commline.c, AMMUNITION/commline.cpp,
	AMMUNITION/commline.h, AMMUNITION/commline.tst.in,
	AMMUNITION/commline++.tst.in, AMMUNITION/earley.c,
	AMMUNITION/earley.cpp, AMMUNITION/earley.h,
	AMMUNITION/earley.tst.in, AMMUNITION/earley++.tst.in,
	AMMUNITION/errors.c, AMMUNITION/errors.cpp, AMMUNITION/errors.h,
	AMMUNITION/errors.tst.in, AMMUNITION/errors++.tst.in,
	AMMUNITION/hashtab.c, AMMUNITION/hashtab.cpp,
	AMMUNITION/hashtab.h, AMMUNITION/hashtab.tst.in,
	AMMUNITION/hashtab++.tst.in, AMMUNITION/IEEE.c,
	AMMUNITION/IEEE.cpp, AMMUNITION/IEEE.h, AMMUNITION/IEEE.tst.in,
	AMMUNITION/IEEE++.tst.in, AMMUNITION/Makefile.in,
	AMMUNITION/objstack.c, AMMUNITION/objstack.cpp,
	AMMUNITION/objstack.h, AMMUNITION/objstack.tst.in,
	AMMUNITION/objstack++.tst.in, AMMUNITION/position.c,
	AMMUNITION/position.cpp, AMMUNITION/position.h,
	AMMUNITION/position.tst.in, AMMUNITION/position++.tst.in,
	AMMUNITION/sgramm.y, AMMUNITION/ticker.c, AMMUNITION/ticker.cpp,
	AMMUNITION/ticker.h, AMMUNITION/ticker.tst.in,
	AMMUNITION/ticker++.tst.in, AMMUNITION/vlobject.c,
	AMMUNITION/vlobject.cpp, AMMUNITION/vlobject.h,
	AMMUNITION/vlobject.tst.in, AMMUNITION/vlobject++.tst.in,
	DINO/compare.tst, DINO/d_built.h, DINO/d_common.h,
	DINO/d_context.c, DINO/d_context.h, DINO/d_conv.c, DINO/d_conv.h,
	DINO/d_dino.c, DINO/d_dino.h, DINO/d_errors.c, DINO/d_errors.h,
	DINO/d_eval.c, DINO/d_eval.h, DINO/d_extern.sprut, DINO/d_func.c,
	DINO/d_func.h, DINO/d_heap.c, DINO/dino.tst.in, DINO/d_ir.sprut,
	DINO/d_kw.shilka, DINO/d_main.c, DINO/d_run.sprut,
	DINO/d_runtab.c, DINO/d_runtab.h, DINO/d_types.h, DINO/d_yacc.h,
	DINO/d_yacc.y, DINO/gmp.c, DINO/ieee.d, DINO/ieee_int.c,
	DINO/ipcerr.d, DINO/ipcerr_int.c, DINO/Makefile.in, DINO/mpi.c,
	DINO/mpi.d, DINO/socket.d, DINO/socket_int.c, MSTA/anal.c,
	MSTA/anal.h, MSTA/common.c, MSTA/common.h, MSTA/compare.tst.in,
	MSTA/contexts.c, MSTA/contexts.h, MSTA/descript.c,
	MSTA/descript.h, MSTA/gen.c, MSTA/gen-comm.c, MSTA/gen-comm.h,
	MSTA/gen.h, MSTA/ird.sprut, MSTA/la-trie.c, MSTA/la-trie.h,
	MSTA/lr.c, MSTA/lr.h, MSTA/lr-sets.c, MSTA/lr-sets.h, MSTA/main.c,
	MSTA/Makefile.in, MSTA/oberon2-kw.shilka, MSTA/output.c,
	MSTA/output.h, MSTA/parser.c, MSTA/parser.h, MSTA/p-yacc.y,
	MSTA/quality.tst.in, MSTA/regular.c, MSTA/regular.h,
	MSTA/relation.c, MSTA/relation.h, MSTA/tab.c, MSTA/tab.h,
	MSTA/yacc.h, MSTA/yacc.y, NONA/a29k.nona, NONA/anal.c,
	NONA/anal.h, NONA/common.c, NONA/common.h, NONA/gen.c, NONA/gen.h,
	NONA/ird.sprut, NONA/main.c, NONA/Makefile.in, NONA/tab.c,
	NONA/tab.h, NONA/yacc.h, NONA/yacc.y, OKA/alpha-ev4.oka,
	OKA/alpha-ev5.oka, OKA/anal.c, OKA/anal.h, OKA/common.c,
	OKA/common.h, OKA/gen.c, OKA/gen.h, OKA/ird.sprut, OKA/main.c,
	OKA/Makefile.in, OKA/oka.tst, OKA/tab.c, OKA/tab.h, OKA/yacc.h,
	OKA/yacc.y, SHILKA/ada.shilka, SHILKA/ada-standards.shilka,
	SHILKA/anal.c, SHILKA/anal.h, SHILKA/b.shilka, SHILKA/common.c,
	SHILKA/common.h, SHILKA/cpp.shilka, SHILKA/c.shilka,
	SHILKA/d.shilka, SHILKA/gcc.shilka, SHILKA/gen.c, SHILKA/gen.h,
	SHILKA/gpc.shilka, SHILKA/ird.sprut, SHILKA/java.shilka,
	SHILKA/main.c, SHILKA/Makefile.in, SHILKA/modula2.shilka,
	SHILKA/modula3.shilka, SHILKA/pascal.shilka, SHILKA/shilka.tst.in,
	SHILKA/tab.c, SHILKA/tab.h, SHILKA/yacc.h, SHILKA/yacc.y,
	SPRUT/A_base.sprut, SPRUT/anal.c, SPRUT/anal.h,
	SPRUT/A_syntax.sprut, SPRUT/A_test.sprut, SPRUT/A_value.sprut,
	SPRUT/common.c, SPRUT/common.h, SPRUT/gen.c, SPRUT/gen.h,
	SPRUT/ird.sprut, SPRUT/main.c, SPRUT/Makefile.in,
	SPRUT/sprut-ird.c, SPRUT/sprut-ird.h, SPRUT/sprut.tst,
	SPRUT/std_bmem.sprut, SPRUT/std_mem.sprut, SPRUT/std_pos.sprut,
	SPRUT/std_str.sprut, SPRUT/std_type.sprut, SPRUT/tab.c,
	SPRUT/tab.h, SPRUT/yacc.h, SPRUT/yacc.y, DINO/Examples/extern.d,
	DINO/Examples/fact.d, DINO/Examples/fibonacci.d,
	DINO/Examples/idcount.d, DINO/Examples/mult.d,
	DINO/Examples/prodcons.d, DINO/Examples/sieve.d,
	DINO/Examples/tak.d, DINO/Examples/tmult.d,
	OKA/SCHEDULE/schedtst.c, OKA/SCHEDULE/schedtst.cpp,
	OKA/SCHEDULE/schedule.c, OKA/SCHEDULE/schedule.cpp,
	OKA/SCHEDULE/schedule.h, OKA/SCHEDULE/schedule.tst.in,
	OKA/SCHEDULE/schedule++.tst.in, OKA/SCHEDULE/test.oka: Change
	copyright year.

2007-02-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in: New test for gmp.
	* DINO/gmp.c: Add stdlib.h
	(mpz_binary_op): Rename to mpz_three_op.
	(mpz_two_op_ui, mpz_two_op, mpz_one_op_ui, return_float,
	arithm_unary_op, op_ui, int_op_ui, _z_sub, _z_neg, _z_abs,
	_z_tdiv_r, _z_pow_ui, _z_root, int_res_op, _z_cmp, _z_ior, _z_xor,
	_z_and, _z_com, _z_set, _z_set_str, _z_get_d, _z_get_str,
	_z_set_bit, _z_clr_bit, _z_tst_bit, _z_urandomm): New functions.
	(mpz_address): Add the new _z functions.
	* DINO/gmp.d (_z_sub, _z_neg, _z_abs, _z_tdiv_r, _z_pow_ui,
	_z_root, _z_cmp, _z_ior, _z_xor, _z_and, _z_com, _z_set,
	_z_set_str, _z_get_d, _z_get_str, _z_set_bit, _z_clr_bit,
	_z_tst_bit, _z_urandomm): New external declarations.
	(check_ui, set, set_str, get_f, get_str, set_bit, clr_bit,
	tst_bit, sub, neg, abs, mul, mod, pow_ui, root, cmp, ior, xor,
	and, com, rand): New functions.
	(tdiv_q): Rename to div.

2007-01-24  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in, AMMUNITION/Makefile.in, MSTA/Makefile.in,
	NONA/Makefile.in, OKA/Makefile.in, SHILKA/Makefile.in,
	SPRUT/Makefile.in: Remove .dsp and .dsw files.

2007-01-24  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/gmp.c, DINO/gmp.d: New files.

2007-01-24  Vladimir Makarov  <vmakarov@users.sf.net>

	* CHANGES: WIN32 support is removed.
	* DINO-README: Ditto.
	* README: Ditto.
	* Makefile.in: Remove WIN32-INSTALL.txt and
	DINO-WIN32-INSTALL.txt.
	* configure.in: (LIBGMP): Check.
	(AC_CHECK_HEADERS): Check gmp.h.
	(DINO_ADDITIONAL_LIBS): Add header gmp.h.
	* configure: Update.
	* cocom.dvi, cocom.info, cocom.ps, DINO/dino-10.html,
	DINO/dino-3.html, DINO/dino-4.html, DINO/dino-5.html,
	DINO/dino-6.html, DINO/dino-8.html, DINO/dino-9.html,
	DINO/dino.html, DINO/dino.dvi, DINO/dino.ps, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, , DINO/dino.ps: Update.
	* AMMUNITION/IEEE.h: Remove WIN32.  Fix template functions with
	class result.
	* AMMUNITION/IEEE.tst.in: Add stdlib.h.
	* AMMUNITION/arithm.h: Remove WIN32.
	* AMMUNITION/cocom-config.h.in: Update.
	* AMMUNITION/earley++.tst.in:  Use prepared C file.  Add header
	stddef.h.  Change expected distance statistics.
	(test_read_token, test_syntax_error): Use ptrdiff_t.
	* AMMUNITION/earley.c (SYMB_CODE_TRANS_VECT): New macro.
	(struct symbs): New members symb_code_trans_vect and
	symb_code_trans_vect_start.
	(symb_init): Initiate symb_code_trans_vect.
	(symb_find_by_code): Add attrribute inline.  Use
	symb_code_trans_vect.
	(SYMB_CODE_TRANS_VECT_SIZE): New macro.
	(symb_finish_adding_terms): New function.
	(symb_empty, symb_fin): Use symb_code_trans_vect.
	(set_insert): Add code when dist hash table is not used.
	(earley_read_grammar): Call symb_finish_adding_terms.
	* AMMUNITION/earley.tst.in (TEST41): Use prepared C file.  Add
	sttdef.h.  Change expected distance statistics.
	(yylval): Remove.
	(get_lex): Use ptrdiff_t.  Don't set up yylval.
	(test_read_token): Use ptrdiff_t.
	* AMMUNITION/objstack.h (_OS_expand_memory): Do it public.  Add
	stddef.h.
	* DINO/Makefile.in (gmp_lib): New definition.
	(DINO_EXTERN_LIBS, DINO_EXTERN_LIBS_PATH): Add gmp_lib.
	(source): Add gmp.c and gmp.d.
	(additional_files): Remove dino.dsw and dino.dsp.
	(gmp_lib): New entry.
	(install, uninstall): Add gamp_lib and gmp.d.
	(clean): Add gmp_lib.
	(create-distdir): Remov mpi, ieee, ipcerr, socket.
	(dist-copy, rcslabel): Remove .dsp and .dsw files.
	Update dependcies.
	* DINO/compare.tst: New syntax for wait.
	* DINO/d_built.h (eltype_call): New definition.
	* DINO/d_common.h (get_ch_repr): New definition.  Remove WIN32.
	* DINO/d_context.c (first_expr_processing): Remove arrow and
	deref.
	(first_block_passing): Add swap.  Process wait-stmt.
	(second_block_passing): Ditto.
	(value_type,): Add local_var_occurrence.  Remove arrow and deref.
	(third_expr_processing): Skip simple blocks.  Remove arrow and
	deref.
	(make_designator_lvalue): New nodes IR_NM_lvalue_period_and_val,
	IR_NM_lvalue_index_and_val, IR_NM_lvalue_key_index_and_val,
	IR_NM_lvalue_var_occurrence_and_val,
	IR_NM_local_lvalue_var_occurrence_and_val,
	IR_NM_lvalue_external_var_occurrence_and_val,
	IR_NM_lvalue_no_testing_period_and_val.
	(third_block_passing): Process _and_val nodes too. Call
	make_designator_lvalue with additional parameter.  Process swap.
	Process wait-stmt.  Set simple_class_flag.  Use catch_block
	instead of block.  Remove arrow and deref.
	(fourth_block_passing): Process wait-stmt.  Use catch_block
	instead of block.
	* DINO/d_conv.c (implicit_conversion_for_binary_arithmetic_op):
	Speedup.
	* DINO/d_dino.c: Remove WIN32.
	(get_ch_repr): New function.
	(DINO/d_dino.h): Remove WIN32.
	* DINO/d_errors.c (ERR_non_variable_in_swap, ERR_const_swap,
	DERR_wait_in_sync_stmt, DERR_thread_call_in_sync_stmt): New
	variables.
	* DINO/d_errors.h (ERR_non_variable_in_swap, ERR_const_swap,
	DERR_wait_in_sync_stmt, DERR_thread_call_in_sync_stmt): New
	external variable definitions..
	* DINO/d_eval.c: Remove WIN32 code.
	(USE_SWITCH): New mcaro.
	(push_var_ref): Set stack or instance instead of var_ref.
	(push_var_ref_and_val): New function.
	(push_var_val): Remove container cache.
	(push_external_var, execute_a_period_operation): Add parameter.
	(load_vector_element_by_index): Rename from load_vector_element.
	(store_vector_element, store_table_element,
	store_designator_value): Don't use below_ctop.
	(load_table_element_by_key): Rename from load_table_element.
	(load_given_designator_value): New function.
	(load_designator_value): Use the previous function.
	(find_catch_pc): Use temp_ref.
	(temp_ident): Remove.
	(prepare_op_assign): Remove.
	(evaluate_code): Define goto table.  Remove arrow and deref.  Add
	code for swap.  Process new wait.
	(evaluate_program): Initialize sync_flag.
	* DINO/d_extern.sprut: Remove WIN32.
	(var_ref, vect_el_ref, tab_el_ref): Remove.
	(heap_tab). New filed last_key_index.
	* DINO/d_func.c: Remove WIN32.
	(NEW_VECTOR): New macro.
	(to_lower_upper): Add code without generating new vector.
	(trans_call): New function.
	(process_regcomp_errors): Use reg_erange_decl.
	(find_regex. match_call, gmatch_call, generall_sub_call,
	split_call): Add code when USE_POSIX_REGEXEC_FUNCTION is not
	defined.
	(rev_call). Code when NEW_VECTOR is defined.
	(print_ch): Use get_ch_repr.
	(process_func_class_call): Speed up.
	* DINO/d_heap.c: Remove WIN32.  Remove code with FEW_REGISTERS.
	(sync_flag, temp_ref): New global variable.
	(in_heap_temp_refs): Use temp_ref.
	(initiate_heap): Initialize temp_ref.
	(traverse_used_var): Remove var_ref, vect_el_ref, and tab_el_ref.
	(traverse_used_heap_object): Initialize last_key_index.
	(mark_used_heap_objects): Traverse temp_ref.
	(change_val): Remove var_ref, vect_el_ref, and tab_el_ref.
	(change_refs): Process temp_ref.  Set up state.
	(heap_push, heap_pop, expand_vector, unpack_vector, copy_vector):
	Use temp_ref.
	(eq_vector): Redirect v2.
	(hash_key): Better hashing.
	(START_TABLE_SIZE): Use bigger value.
	(create_tab): Set up last_key_index.
	(find_tab_entry): Use last_key_index.
	(expand_tab): Use temp_ref.  Set up last_key_index.
	(remove_tab_el): Use last_key_index.
	(table_to_vector_conversion, vector_to_table_conversion): Use
	temp_ref.
	(block_cprocess): Use sync_flag.
	(delete_cprocess, delete_cprocess_during_exception): Set up
	first_process_not_started.
	* DINO/d_ir.sprut (create_occurrence_node): Additional parameter.
	(syncthreadcall, syncwait): New classes.
	(dereftype, arrowtype): Remove.
	(trans): New function.
	(arrow, lvalue_arrow, deref, lvalue_deref): Remove.
	(member_access, swap): New nodes.
	(wait_stmt): New field wait_stmt.
	(exception): Rename block to catch_block.
	(local_var_occurrence, lvalue_period_and_val,
	lvalue_index_and_val, lvalue_key_index_and_val,
	lvalue_no_testing_period_and_val): New nodes.
	(class): New member simple_class_flag.
	(wait_finish, lvalue_external_var_occurrence_and_val,
	local_lvalue_var_occurrence_and_val,
	lvalue_var_occurrence_and_val): New nodes.
	(block): New field block_saved_sync_flag.
	(var): Remove fields var_cached_address,
	var_cached_container_tick.
	(syncthreadcall, reg_erange, syncwait): New table elements.
	(erange, dereftype, arrowtype): Remove table elements.
	* DINO/d_main.c: Remove WIN32 code.
	* DINO/d_run.sprut (sync_flag): New external definition.
	(FEW_REGISTERS): Remove.
	(heap_push): Additional parameter.
	(eval_error): Add attribute noreturn.
	* DINO/d_yacc.y: Remove WIN32.
	(swap): Add.
	(arrow, deref): Remove.
	(wait): New syntax.
	* DINO/dino.1 (DINO_EXTERN_LIBS): Description.
	* DINO/dino.sgml.in (trans, swap): New function and operation.
	(arrow, deref): Remove.
	(wait): New syntax.
	* DINO/dino.tst.in: New synatx for wait.
	No testing for arrow and deref.
	New tests from language shootout.
	* DINO/ipcerr_int.c: Remove WIN32.
	* DINO/mpi.c: Ditto.
	* DINO/ieee_int.c: Remove WIN32.  Add string.h.
	* DINO/socket_int.c: Ditto.
	* MSTA/compare.tst.in: Use prepared source file. Print used
	memory.  Add earley parser.
	* MSTA/main.c: Remove WIN32.
	* NONA/main.c: Ditto.
	* OKA/main.c: Ditto.
	* SHILKA/main.c: Ditto.
	* SHILKA/shilka.tst.in: Add stdlib.h.
	* SPRUT/main.c: Remove WIN32.
	* SPRUT/yacc.y: Ditto.
	* SPRUT/gen.c (generate_spi): Add stddlib.h.
	(output_rest_double_link_functions_definitions): Always call
	output_rest_double_link_functions_definitions.
	* DINO-WIN32-INSTALL.txt: Remove.
	* WIN32-INSTALL.txt: Ditto.
	* AMMUNITION/clibcocom/clibcocom.{dsp,dsw}: Ditto.
	* AMMUNITION/cpplibcocom/cpplibcocom.{dsp,dsw}: Ditto.
	* DINO/dino.{dsp,dsw}: Ditto.
	* DINO/ieee/ieee.{dsp,dsw}: Ditto.
	* DINO/mpi/mpi.{dsp,dsw}: Ditto.
	* MSTA/msta.{dsp,dsw}: Ditto.
	* NONA/nona.{dsp,dsw}: Ditto.
	* OKA/oka.{dsp,dsw}: Ditto.
	* OKA/SCHEDULE/cppschedule/cppschedule.{dsp,dsw}: Ditto.
	* OKA/SCHEDULE/cschedule/cschedule.{dsp,dsw}: Ditto.
	* OKA/SCHEDULE/schedule.cpp (resource_history, list): Forward
	declarations.
	* SHILKA/shilka.{dsp,dsw}:  Remove.
	* SPRUT/sprut.{dsp,dsw}: Ditto.
	* cocom/cocom.{c,dsp,dsw}: Ditto.
	* dinolang/dinolang.{c,dsp,dsw}: Ditto.
	
2005-01-17  Vladimir Makarov  <vmakarov@users.sf.net>

	* CHANGES: Major changes since the last release.

2005-01-15  Vladimir N. Makarov  <vmakarov@users.sf.net>

	* MSTA/compare.tst.in: Missed file for commiting.

	* SPRUT/std_pos.sprut, SPRUT/sprut-ird.c, SHILKA/gpc.shilka,
	NONA/tab.h:  Change the last year.

	* SPRUT/yacc.y, SPRUT/yacc.h, SPRUT/tab.h, SPRUT/tab.c,
	SPRUT/std_type.sprut, SPRUT/std_str.sprut, SPRUT/std_str.sprut,
	SPRUT/std_mem.sprut, SPRUT/std_bmem.sprut, SPRUT/sprut.tst,
	SPRUT/sprut-ird.h, SPRUT/sprut-ird.h, SPRUT/main.c,
	SPRUT/ird.sprut, SPRUT/gen.h, SPRUT/gen.c, SPRUT/common.h,
	SPRUT/common.c, SPRUT/anal.h, SPRUT/anal.c, SPRUT/Makefile.in,
	SPRUT/A_value.sprut, SPRUT/A_test.sprut, SPRUT/A_syntax.sprut,
	SPRUT/A_base.sprut, SHILKA/yacc.y, SHILKA/yacc.h, SHILKA/tab.h,
	SHILKA/tab.c, SHILKA/shilka.tst.in, SHILKA/pascal.shilka,
	SHILKA/modula3.shilka, SHILKA/modula2.shilka, SHILKA/main.c,
	SHILKA/java.shilka, SHILKA/ird.sprut, SHILKA/ird.sprut,
	SHILKA/gen.h, SHILKA/gen.c, SHILKA/gcc.shilka, SHILKA/d.shilka,
	SHILKA/cpp.shilka, SHILKA/common.h, SHILKA/common.c,
	SHILKA/c.shilka, SHILKA/b.shilka, SHILKA/anal.h, SHILKA/anal.c,
	SHILKA/ada.shilka, SHILKA/ada-standards.shilka,
	SHILKA/Makefile.in, OKA/SCHEDULE/test.oka,
	OKA/SCHEDULE/schedule.tst.in, OKA/SCHEDULE/schedule.h,
	OKA/SCHEDULE/schedule.cpp, OKA/SCHEDULE/schedule.c,
	OKA/SCHEDULE/schedule++.tst.in, OKA/SCHEDULE/schedtst.cpp,
	OKA/SCHEDULE/schedtst.c, OKA/yacc.y, OKA/yacc.h, OKA/tab.h,
	OKA/tab.c, OKA/oka.tst, OKA/main.c, OKA/ird.sprut, OKA/gen.h,
	OKA/gen.c, OKA/common.h, OKA/common.c, OKA/anal.h, OKA/anal.c,
	OKA/alpha-ev5.oka, OKA/alpha-ev4.oka, OKA/Makefile.in,
	NONA/yacc.y, NONA/yacc.h, NONA/yacc.h, NONA/tab.c, NONA/main.c,
	NONA/ird.sprut, NONA/gen.h, NONA/gen.c, NONA/common.h,
	NONA/common.c, NONA/anal.h, NONA/anal.c, NONA/a29k.nona,
	NONA/Makefile.in, MSTA/yacc.y, MSTA/yacc.h, MSTA/tab.h,
	MSTA/tab.c, MSTA/relation.h, MSTA/relation.c, MSTA/regular.h,
	MSTA/regular.c, MSTA/quality.tst.in, MSTA/parser.h, MSTA/parser.c,
	MSTA/p-yacc.y, MSTA/output.h, MSTA/output.c,
	MSTA/oberon2-kw.shilka, MSTA/main.c, MSTA/lr.h, MSTA/lr.c,
	MSTA/lr-sets.h, MSTA/lr-sets.c, MSTA/la-trie.h, MSTA/la-trie.c,
	MSTA/ird.sprut, MSTA/gen.h, MSTA/gen.c, MSTA/gen-comm.h,
	MSTA/gen-comm.c, MSTA/descript.h, MSTA/descript.c,
	MSTA/contexts.h, MSTA/contexts.c, MSTA/common.h, MSTA/common.c,
	MSTA/anal.h, MSTA/anal.c, MSTA/Makefile.in, DINO/Examples/tmult.d,
	DINO/Examples/tak.d, DINO/Examples/sieve.d,
	DINO/Examples/prodcons.d, DINO/Examples/mult.d,
	DINO/Examples/idcount.d, DINO/Examples/fibonacci.d,
	DINO/Examples/fact.d, DINO/Examples/extern.d, DINO/socket_int.c,
	DINO/socket.d, DINO/mpi.d, DINO/mpi.c, DINO/ipcerr_int.c,
	DINO/ipcerr.d, DINO/ieee_int.c, DINO/ieee.d, DINO/dino.tst.in,
	DINO/dino.ps, DINO/d_yacc.y, DINO/d_yacc.h, DINO/d_types.h,
	DINO/d_runtab.h, DINO/d_runtab.c, DINO/d_run.sprut, DINO/d_main.c,
	DINO/d_kw.shilka, DINO/d_ir.sprut, DINO/d_heap.c, DINO/d_func.h,
	DINO/d_func.c, DINO/d_extern.sprut, DINO/d_eval.h, DINO/d_eval.c,
	DINO/d_errors.h, DINO/d_errors.c, DINO/d_dino.h, DINO/d_dino.c,
	DINO/d_conv.h, DINO/d_conv.c, DINO/d_context.h, DINO/d_context.c,
	DINO/d_common.h, DINO/d_built.h, DINO/compare.tst,
	DINO/Makefile.in, AMMUNITION/vlobject.tst.in,
	AMMUNITION/vlobject.h, AMMUNITION/vlobject.cpp,
	AMMUNITION/vlobject.c, AMMUNITION/vlobject++.tst.in,
	AMMUNITION/ticker.tst.in, AMMUNITION/ticker.h,
	AMMUNITION/ticker.cpp, AMMUNITION/ticker.c,
	AMMUNITION/ticker++.tst.in, AMMUNITION/sgramm.y,
	AMMUNITION/position.tst.in, AMMUNITION/position.h,
	AMMUNITION/position.cpp, AMMUNITION/position.c,
	AMMUNITION/position++.tst.in, AMMUNITION/objstack.tst.in,
	AMMUNITION/objstack.h, AMMUNITION/objstack.cpp,
	AMMUNITION/objstack.c, AMMUNITION/objstack++.tst.in,
	AMMUNITION/hashtab.tst.in, AMMUNITION/hashtab.h,
	AMMUNITION/hashtab.cpp, AMMUNITION/hashtab.c,
	AMMUNITION/hashtab++.tst.in, AMMUNITION/errors.tst.in,
	AMMUNITION/errors.h, AMMUNITION/errors.cpp, AMMUNITION/errors.c,
	AMMUNITION/errors++.tst.in, AMMUNITION/earley.tst.in,
	AMMUNITION/earley.h, AMMUNITION/earley.cpp, AMMUNITION/earley.c,
	AMMUNITION/earley++.tst.in, AMMUNITION/commline.tst.in,
	AMMUNITION/commline.h, AMMUNITION/commline.cpp,
	AMMUNITION/commline.c, AMMUNITION/commline++.tst.in,
	AMMUNITION/bits.tst.in, AMMUNITION/bits.h, AMMUNITION/bits.cpp,
	AMMUNITION/bits.c, AMMUNITION/bits++.tst.in,
	AMMUNITION/arithm.tst.in, AMMUNITION/arithm.h,
	AMMUNITION/arithm.cpp, AMMUNITION/arithm.c,
	AMMUNITION/arithm++.tst.in, AMMUNITION/allocate.tst.in,
	AMMUNITION/allocate.h, AMMUNITION/allocate.cpp,
	AMMUNITION/allocate.c, AMMUNITION/allocate++.tst.in,
	AMMUNITION/Makefile.in, AMMUNITION/IEEE.tst.in, AMMUNITION/IEEE.h,
	AMMUNITION/IEEE.cpp, AMMUNITION/IEEE.c, AMMUNITION/IEEE++.tst.in,
	Makefile.in: Change the last year. Change the last year.

	* SPRUT/main.c, SHILKA/main.c, SHILKA/compare.tst.in, OKA/main.c,
	NONA/main.c, MSTA/main.c, DINO/d_main.c: Change return type of
	main.

	* SPRUT/gen.c (generate_spi): Use 16 instead of 0.

	* REGEX/regex.h (__restrict_arr): Define it only it is undefined.

	* MSTA/compare.tst.in, AMMUNITION/earley.tst.in,
	AMMUNITION/earley++.tst.in: Remove duplicated lex patterns.

	* DINO/dino.ps, DINO/dino.pdf, DINO/dino.info, DINO/dino.dvi:
	Update.

	* dino.spec, INSTALL, DINO-INSTALL: Change version.

2004-09-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* cocom.sgml.in: Add pdf.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.pdf,
	cocom.txt: Update.

	* DINO/dino.sgml.in: Remove url.

	* DINO/dino.pdf: New file.

	* DINO/dino.dvi, DINO/dino*.html, DINO/dino.info, DINO/dino.ps,
	DINO/dino.txt: Update.

2004-09-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

        * armoury.html, msta.jpg, nona.jpg, oka.jpg, shilka.jpg,
	sprut.jpg: Remove files.

	* Makefile.in: Remove references to the files.  Add pdf file
	generation.  Recursive calls for doc.  Use linuxdoc.

	* AMMUNITION/Makefile.in:   Add pdf file
	generation.  Use linuxdoc.

	* DINO/Makefile.in: Ditto.

	* MSTA/Makefile.in: Ditto.

	* NONA/Makefile.in: Ditto.

	* OKA/Makefile.in: Ditto.

	* SHILKA/Makefile.in: Ditto.

	* SPUT/Makefile.in: Ditto.

	* cocom.pdf, AMMUNITION/ammunition++.pdf,
	AMMUNITION/ammunition.pdf, MSTA/msta.pdf, NONA/nona.pdf,
	OKA/oka.pdf, SHILKA/shilka.pdf, SPRUT/sprut.pdf: New files.

	* cocom.spec: Remove garbage at the end of file.

	* cocom.sgml.in: Remove russian armoury and reference to
	armoury.html.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

	* AMMUNITION/ammunition++.dvi, AMMUNITION/ammunition++*.html,
	AMMUNITION/ammunition++.info, AMMUNITION/ammunition++.ps,
	AMMUNITION/ammunition.dvi, AMMUNITION/ammunition*.html,
	AMMUNITION/ammunition.info, AMMUNITION/ammunition.ps: Update.

	* DINO/dino.dvi, DINO/dino*.html, DINO/dino.info, DINO/dino.ps: Ditto.

	* MSTA/msta.dvi, MSTA/msta*.html, MSTA/msta.info, MSTA/msta.ps,
	MSTA/msta.txt: Ditto.

	* NONA/nona.dvi, NONA/nona*.html, NONA/nona.info, NONA/nona.ps,
	NONA/nona.txt: Ditto.

	* OKA/oka.dvi, OKA/oka*.html, OKA/oka.info, OKA/oka.ps,
	OKA/oka.txt: Ditto.

	* SHILKA/shilka.dvi, SHILKA/shilka*.html, SHILKA/shilka.info,
	SHILKA/shilka.ps, SHILKA/shilka.txt: Ditto.

	* SPRUT/sprut.dvi, SPRUT/sprut*.html, SPRUT/sprut.info,
	SPRUT/sprut.ps, SPRUT/sprut.txt: Ditto.

2004-08-24  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (evaluate_code): Add code to use labels instead of
	switch-stmt.

	* DINO/O/DEBUG/Exp.ob: Add newline at the end of file.
	* DINO/O/DEBUG/Imp.ob: Add imported record.

	* DINO/O/FE/check.d: (find_qualid) Add checking for private
	identifier.
	(check_tdef_qualid): Change default value for parameter.
	(check_std_call): Add code for checking more standard procedures.
	(check_call): Assign type for function call.
	(check_des): Check private field.
	(func check_des): Add parameter value for call of find_qualid.

	* DINO/O/FE/table.d: Add more standard procedure declarations.

	* DINO/O/MACH/i386/machine.d: Change integer and long integer
	sizes.

	* MSTA/c5.y (main): Change return type.

	* MSTA/compare.tst.in (main): Use #if instead of #ifdef.

	* MSTA/lex.y (main): Change return type.

	* MSTA/quality.tst.in: Define CXX and use it for C++ tests.

	* MSTA/fcalc1.y: New file.

	* OKA/SCHEDULE/schedtst.c (main): Change return type.

	* OKA/SCHEDULE/schedtst.cpp (main): Ditto.

2004-05-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{arithm.c, arithm.cpp}
	(multiply_unsigned_integer_by_digit_without_overflow_reaction,
	multiply_unsigned_integer_without_overflow_reaction,
	add_digit_to_unsigned_integer_without_overflow_reaction): Use
	unsigned long.

2004-01-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (putf_call, fputf_call, sputf_call): New external
	declarations.

	* DINO/d_errors.c (DERR_invalid_format): New global variable.

	* DINO/d_errors.h (DERR_invalid_format): New external variable
	declaration.

	* DINO/d_func.c (general_putf_call, putf_call, fputf_call,
	sputf_call): New functions.

	* DINO/d_ir.sprut (ENVIRONMENT): Add invfmt, putf, fputf, sputf.
	(INVFMT_NAME, PUTF_NAME, FPUTF_NAME, SPUTF_NAME): New macros.
	(invfmt_decl, putf_decl, fputf_decl, sputf_decl): New external
	declarations and definitions.
	(decls_table): Add entries for invfmt, putf, fputf, sputf.

	* DINO/dino.tst.in (228, 230): Ignore error about different
	directories -- just report about it.
	(265, 284): Change line in <environment>.
	(495): Skip test for datagram socket.
	(511-533): New tests for format output.

	* DINO/d_types.h: Remove test on 32 long and shorts.

        * DINO/dino.sgml.in: Add documenation for invfmt, putf, fputf,
	sputf.

	* DINO/{dino.html, dino-4.html, dino-8.html, dino.dvi, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt}: Update.

2003-12-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/O/FE/tree.d: Remove it.
	* DINO/O/DEBUG/Report.ob: Add.
	* DINO/O/DEBUG/com-check, DINO/O/DEBUG/com-tree: Process
	Report.ob.
	* DINO/O/DEBUG/et2atest.d (pr_tree): Check on exit-stmt.
	* DINO/O/FE/atree.d: Add scope to tdefs.proc.
	* DINO/O/FE/check.d (str_char): Use lexs instead of exprs.
	(is_of_char): New func.
	(type_extended): Check only t1 on ptr.
	(eq_type): Check only tp for proc return type.
	(not_assign_compatible): Fix cases for proc type and array of
	char.
	(case_tp): New variable.
	(case_lab_cmp): New function.
	(check_stmt): Use ranges for comparison.
	(check_op2): Fix nested declarations of opn.
	* DINO/O/FE/ctree.d (case_lab): New class.
	(case): New filed case_labs.
	* DINO/O/FE/et2at.d (tr_set_in): Rename it on tr_in.
	(tr_des_and_par): Use find instead of get.
	(tr_repeat): Fix typo in parameters.
	(tr_fps): Add new parameter.
	(tr_vfps): New function.
	(proc_p): New variable.
	(tr_formals): Change scope for proc type.
	(tr_proc): Use proc_p.
	* DINO/O/FE/o.y: Use new node vfps.
	* DINO/O/FE/scanner.d (p_char): Fix regexp.
	(scanner): Copy tok when it is changed.  Process exception for
	opening file.
	* DINO/O/LIB/error.d (simple_fatal): New function.
	(warn): Add prefix to message.

2003-12-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/O/DEBUG: New directory.
	* DINO/O/DEBUG/{chtest.d, et2atest.d, outest.d, parstest.d, scandeb.d,
	scantest.d}: New files.
	* DINO/O/DEBUG/{com-check, com-error, com-out, com-parse,
	com-scan, com-tree}: New files.
	* DINO/O/DEBUG/{Exp.ob, Export.ob, Imp.ob, List.ob, Sieve.ob}: New
	files.

2003-12-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/O: New directory.
	* DINO/O/FE: New directory.
	* DINO/O/FE{atree.d, check.d, ctree.d, et2at.d, lex.d, outsym.d,
	o.y, parser.d, scanner.d, table.d, tree.d}: New files.
	* DINO/O/MACH: New directory.
	* DINO/O/MACH/i386: New directory.
	* DINO/O/MACH/i386/machine.d: New file.
	* DINO/O/LIB: New directory.
	* DINO/O/LIB{comm.d, error.d}: New files.

2003-12-15  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (store_table_element, initiate_vars): Make the table
	key immutable.

	* DINO/dino.tst.in: New test #510 for checking that key became
	immutable.

	* DINO/dino.1: Remove apostrophes.

	* DINO/dino.sgml.in: Making immutable table key in assignment.

	* DINO/dino.txt, DINO/dino.ps, DINO/dino.info*, DINO/dino.dvi,
	DINO/dino*.html: Update.

2003-10-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_context.c (third_block_passing): Check return inside
	class/ext/function if it is in a scope.

	* DINO/dino.tst.in: New test 509 for return on the top level.

2003-09-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * configure.in: Check size of char *.

	* configure: Update.

	* AMMUNITION/cocom-config.h.in: Add undef for SIZEOF_CHAR_P.

	* AMMUNITION/earley.c (make_parse):  Add state to the stack even
	if the situation position is zero.

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Add test for empty
	rule with anode.

	* DINO/d_blocktab.{ch}: Rename them into d_runtab.{ch}.
	(initiate_blocks_table): Rename it onto initiate_run_tables.
	(set_func_class_no): New function.
	(finish_blocks_table): rename it onto finish_run_tables.

	* DINO/Makefile.in: Rename blocktab on runtab.

	* DINO/dino.dsp: Rename blocktab on runtab.

	* DINO/d_common.h: Define SIZEOF_CHAR_P for WIN32.

	* DINO/d_extern.sprut (func): Change field func onto func_no.
	(class): Change field class onto class_no.

	* DINO/d_func.c: Add include d_runtab.h.
	(internal_inside_call, array_sort_compare_function, sort_call,
	place_file_instance, print_val, create_instance,
	process_func_class_call, init_syntax_token, tree_to_heap,
	int_earley_parse): Use field func_{class_}no instead of
	func{class}.

	* DINO/d_heap.c: Rename blocktab on runtab.
	(node_mode_2_type, destroy_instances, hash_val, eq_key):

	* DINO/d_ir.sprut: (func_or_class, external_func): New field no.

	* DINO/d_context.c: Rename blocktab on runtab.
	(second_block_passing): Set up func_class_no.

	* DINO/d_dino.c: Rename blocktab on runtab.
	(dino_start): Rename finish_blocks_table on finish_run_tables.
	(dino_finish): Rename initiate_blocks_table on
	initiate_run_tables.

	* DINO/d_eval.c: Rename blocktab on runtab.
	(execute_a_period_operation): Use field func_{class_}no instead of
	func{class}.
	(evaluate_code): Ditto.

2003-05-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.tst.in (test 41): Print used memory for linux.

2003-04-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * d_ir_sprut (ir_node): New type.  Make it as a root.
	(logical_binary_operation): New abstract type.
	(logical_or, logical_and, cond): Inherit logical_binary_operation.
	(vector_table): New abstract type.
	(vector, table): Inherit vector_table.
	(elist): Rename field elist into next_elist.
	(class_func_thread_call): Rename field elist into actuals.
	(access_ident): Rename field public_flag onto
	access_ident_public_flag.
	(procedure_call): Rename field elist into proc_actuals.
	(for_break_continue): New abstract node.
	(break_stmt, continue_stmt): Inherit for_break_continue.
	(wait_stmt): Rename field scope into block_scope.
	(for_stmt): Rename field body_pc into for_body_pc.
	(foreach_stmt): Rename field body_pc into foreach_body_pc.
	(external_var_occurrence, var_occurrence,
	lvalue_external_var_occurrence, lvalue_var_occurrence): Make
	occurrence as the first supertype for them.
	(block_finish): Rename field simple_block_flag into
	simple_block_finish_flag.
	(char, int, float, string): Add new field whose value is value
	from the corresponding unique nodes.
	(find_decl): Use block_scope.

	* d_run.sprut (executed_stmts_count, process_quantum): Make them
	signed.
	(QUANTUM_SWITCH_PROCESS): Simplify it.

	* d_yacc.y: Use new field names actuals, proc_actuals, next_elist,
	block_scope, access_ident_public_flag.

        * d_extern.sprut (heap_obj): Add field immutable.
	(immutable_obj, context): Remove them.
	(heap_vect_tab, heap_hideblock): Inherit heap_obj.
	(context_heap_obj): New abstract type.
	(heap_instance, heap_stack, heap_process): Inherit context_heap_obj.

	* d_func.c (internal_inside_call): Use new field name block_scope.
	(get_file, get_stat, create_instance, init_read_token,
	int_earley_parse): Use new field name instance_class.

	* d_heap.c (heap_object_size, traverse_used_heap_object): Use new
	field name instance_class.
	(change_obj_refs): Use _ER_M_context_heap_obj instead of
	_ER_M_context.
	(profile_interrupt): Use new field name block_scope.
	(eq_instance): Use new field name instance_class.
	(hash_key): Use new field name block_scope, instance_class.
	(activate_process): Initialize as -process_quantum.
	(block_cprocess): Set up status as PS_STARTED if at least one
	statement has been executed.
	(process_quantum, executed_stmts_count): Make them signed.

	* d_context.c (first_expr_processing): Use new field names actuals
	and next_elist.
	(process_extension_block): Use new field name block_scope.
	(first_block_passing): Use new field names proc_actuals,
	next_elist, and block_scope.
	(second_block_passing): Use new field name
	access_ident_public_flag.
	(surrounding_class): Use new field name block_scope.
	(third_expr_processing): Set up new fields ch_val, i_val, f_val,
	str_val.  Use new field names actuals and next_elist.
	(find_covered_func_class_ext): Use new field name block_scope.
	(third_block_passing): Use new field names proc_actuals,
	next_elist, for_body_pc, foreach_body_pc,
	simple_block_finish_flag.
	(go_through): Use new field name simple_block_finish_flag.
	(fourth_expr_processing): Use new field names actuals,
	proc_actuals, next_elist, for_body_pc, foreach_body_pc.

	* d_eval.c (execute_a_period_operation): Use new field name
	block_scope.
	(find_catch_pc): Ditto plus instance_class.
	(evaluate_code): Use new field name simple_block_finish_flag.
	(fourth_expr_processing): Use new field names instance_class,
	next_elist, for_body_pc, foreach_body_pc and new fields ch_val,
	i_val, f_val, str_val.
	(eval_error): use new field name instance_class.

2003-03-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_types.h (__infinity): Add missed ;

2003-03-07  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* configure.in: Set up -finline-limit for x86 gcc.

	* configure: Update.

2003-03-07  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* configure.in: Use -fomit-frame-pointer for x86 gcc.

	* configure: Update.

	* DINO/d_run.sprut (FEW_REGISTERS): Define for x86.
	(below_ctop): define as macros if FEW_REGISTERS is defined.
	(SET_TOP, TOP_UP, TOP_DOWN): Make variants for FEW_REGISTERS.

	* DINO/d_heap.c (below_ctop): undefine if FEW_REGISTERS is defined.

2003-01-09  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (test #14): Output results and check them.

2002-12-09  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (eq_instance): Check context too.

	* DINO/dino.tst.in: Add a new test for the change.

	* DINO/dino.sgml.in: Document the change.

	* DINO/dino.txt, DINO/dino.ps, DINO/dino.info*, DINO/dino.dvi,
	DINO/dino.html, DINO/dino-5.html, DINO/dino-10.html: Update.

2002-07-31  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (remove_tab_el): Decrease number of elements too.

	* DINO/dino.tst.in (507th test): New test for checking the bug.

2002-05-21  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdir, distdinodir): Set up the new versions.

	* DINO/Makefile.in (DINO_VERSION):  Set up new version 0.55.

	* AMMUNITION/Makefile.in (distdir): Set up new version 0.996.

	* MSTA/Makefile.in (distdir): Ditto.

	* NONA/Makefile.in (distdir): Ditto.

	* OKA/Makefile.in (distdir): Ditto.

	* SHILKA/Makefile.in (distdir): Ditto.

	* SPRUT/Makefile.in (distdir): Ditto.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* CHANGES, DINO-CHANGES: Update them.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/socket_int.c (h_errno): Check cywgin too.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* OKA/gen.c (unit_on_all_alternatives,
	form_the_same_automaton_unit_lists_from_expression): Process
	nothing.

	* DINO/compare.tst (test 4): Remove wait.

	* DINO/dino.tst.in (78, 79, 81): Process ia64 output.

	* DINO/socket.d (stream_server): Remove debuging output.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* OKA/oka.sgml.in: Add comments about checking automata of units
	in exclusion and on reservation alternatives.

	* OKA/{oka-2.html, oka.dvi, oka.info, oka.ps, oka.txt}: Update.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* OKA/oka.tst: New file.

	* OKA/Makefile.in (additional_files): Add oka.tst
	(test-oka test-sched): New entries.
	(test): Use them.
	(gen.c): Update dependencies.

	* OKA/alpha-ev5.oka (multiply): Remove the automaton.

	* OKA/anal.c (add_exclusion_list): Check automata of the units and
	report if they are not the same.

	* OKA/gen.c (position.h, errors.h): Add teh included files.
	(the_same_automaton_lists): New variable.
	(unit_on_all_alternatives,
	form_the_same_automaton_unit_lists_from_expression,
	form_the_same_automaton_unit_lists,
	check_unit_distributions_to_automata): New functions.
	(generate): Call check_unit_distributions_to_automata.  Check
	number_of_errors after that.

	* OKA/ird.sprut (single_unit_declaration): Add new fields
	the_same_automaton_unit, the_same_automaton_message_reported_p.

2002-05-15  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (sit_number): Add the sit_number.
	(sit_create): Initiate it.
	(sit_print): Print it.
	(set_insert): Use it in sorting.
	(error_recovery): Add debug print about building the new set.

2002-05-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SPRUT/{A_base.sprut, A_syntax.sprut, A_test.sprut,
	A_value.sprut, Makefile.in, anal.c, anal.h, common.c, common.h,
	gen.c, gen.h, ird.sprut, main.c, sprut-ird.c, sprut-ird.h,
	sprut.tst, std_bmem.sprut, std_mem.sprut, std_pos.sprut,
	std_str.sprut, std_type.sprut, tab.c, tab.h, yacc.h, yacc.y}:
	Copyright in the file headers.

	* SHILKA/{Makefile.in, ada-standards.shilka, ada.shilka, anal.c,
	anal.h, b.shilka, c.shilka, common.c, common.h, cpp.shilka,
	d.shilka, gcc.shilka, gen.c, gen.h, gpc.shilka, ird.sprut,
	java.shilka, main.c, modula2.shilka, modula3.shilka,
	pascal.shilka, shilka.tst.in, tab.c, tab.h, yacc.h, yacc.y}:
	Ditto.

	* NONA/{Makefile.in, a29k.nona, anal.c, anal.h, common.c,
	common.h, gen.c, gen.h, ird.sprut, main.c, tab.c, tab.h, yacc.h,
	yacc.y}: Ditto.

	* OKA/{Makefile.in, alpha-ev4.oka, alpha-ev5.oka, anal.c, anal.h,
	common.c, common.h, gen.c, gen.h, ird.sprut, main.c, tab.c, tab.h,
	yacc.h, yacc.y}: Ditto.

	* OKA/SCHEDULE/{schedtst.c, schedtst.cpp, schedule++.tst.in,
	schedule.c, schedule.cpp, schedule.h, schedule.tst.in, test.oka}:
	Ditto.

	* MSTA/{Makefile.in, anal.c, anal.h, common.c, common.h,
	compare.tst.in, contexts.c, contexts.h, descript.c, descript.h,
	gen-comm.c, gen-comm.h, gen.c, gen.h, ird.sprut, la-trie.c,
	la-trie.h, lr-sets.c, lr-sets.h, lr.c, lr.h, main.c,
	oberon2-kw.shilka, output.c, output.h, p-yacc.y, parser.c,
	parser.h, quality.tst.in, regular.c, regular.h, relation.c,
	relation.h, tab.c, tab.h, yacc.h, yacc.y}: Ditto.

	* DINO/{Makefile.in, compare.tst, d_blocktab.c, d_blocktab.h,
	d_built.h, d_common.h, d_context.c, d_context.h, d_conv.c,
	d_conv.h, d_dino.c, d_dino.h, d_errors.c, d_errors.h, d_eval.c,
	d_eval.h, d_extern.sprut, d_func.c, d_func.h, d_heap.c,
	d_ir.sprut, d_kw.shilka, d_main.c, d_run.sprut, d_types.h,
	d_yacc.h, d_yacc.y, dino.tst.in, ieee.d, ieee_int.c, ipcerr.d,
	ipcerr_int.c, mpi.c, mpi.d, socket.d, socket_int.c}: Ditto.

	* DINO/Examples/{extern.d, fact.d, fibonacci.d, idcount.d, mult.d,
	prodcons.d, sieve.d, tak.d, tmult.d}: Ditto.

	* AMMUNITION/{IEEE++.tst.in, IEEE.c, IEEE.cpp, IEEE.h,
	IEEE.tst.in, Makefile.in, allocate++.tst.in, allocate.c,
	allocate.cpp, allocate.h, allocate.tst.in, arithm++.tst.in,
	arithm.c, arithm.cpp, arithm.h, arithm.tst.in, bits++.tst.in,
	bits.c, bits.cpp, bits.h, bits.tst.in, commline++.tst.in,
	commline.c, commline.cpp, commline.h, commline.tst.in,
	earley++.tst.in, earley.c, earley.cpp, earley.h, earley.tst.in,
	errors++.tst.in, errors.c, errors.cpp, errors.h, errors.tst.in,
	hashtab++.tst.in, hashtab.c, hashtab.cpp, hashtab.h,
	hashtab.tst.in, objstack++.tst.in, objstack.c, objstack.cpp,
	objstack.h, objstack.tst.in, position++.tst.in, position.c,
	position.cpp, position.h, position.tst.in, sgramm.y,
	ticker++.tst.in, ticker.c, ticker.cpp, ticker.h, ticker.tst.in,
	vlobject++.tst.in, vlobject.c, vlobject.cpp, vlobject.h,
	vlobject.tst.in}: Ditto.

	* Makefile.in: Ditto.

2002-05-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (PATH_MAX): Define it for WIN32.

	* DINO/d_yacc.y (PATH_MAX): Ditto.

	* DINO/dino.tst.in (506): Indentation.

2002-05-12  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (506): Add Serhei's interpriter.

2002-05-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (set_core_hash, parse_state_hash,
	trans_visit_node_hash, reserv_mem_hash): Use size_t.

2002-05-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (expand_vector): Fix bug with disp.

	* DINO/d_func.c (tree_heap_node_hash): Use size_t.

	* DINO/socket_int.c (h_errno): Check on macro.

2002-05-10  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (357): Fix missed changing stderr onto ftemp.

2002-05-10  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/la-trie.c: Include gen-comm.h.

	* MSTA/Makefile.in: Update dependencies.

	* DINO/socket_int.c (_recvfrom, _accept): Use always int for
	length under HPUX.

	* DINO/dino.tst.in (357): Use env instead of set.

	* DINO/d_yacc.y (canonical_path_name): Use PATH_MAX instead of
	FILENAME_MAX.

	* DINO/d_func.c (getcwd_call): Ditto.
	Include unistd.h.

	* DINO/compare.tst: Use /dev/null as AWK input for startup test.

	* cocom/cocom.dsw: Add projects ipcerr and socket.

2002-05-09  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/IEEE++.tst.in: Extend arrays for results.

	* DINO/Makefile.in (test-dino, compare-dino): New entries.

	* DINO/dino.tst.in: Add processing zero division tests for
	ppc-linux.
	(357): Remove LS_COLORS.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/IEEE.tst.in: Extend arrays for results.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (357): Try a few environement variables.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (499): Try absent service too for non CYGWIN.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SHILKA/Makefile.in (test): Don't compare if there is no gperf.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* configure.in (DINO_ADDITIONAL_LIBS): Add socket and ipcerr.

	* configure: Update.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_context.c (fourth_expr_processing): Make the result type
	void.
	(fourth_block_passing): Remove variables temp and elist.

	* DINO/d_eval.c (find_catch_pc): Don't pop the uppest stack.
	(evaluate_code): Don't check cpc in the cycle.  Fix typo in
	setting up the heap instance mode.  Make return on `return' and
	`block_finish' when cpc == NULL.  Don't pop up the uppest stack.
	(call_func_class): Check cpc before evaluate_code.

	* DINO/d_extern.sprut (spi): Add missed parameter for
	create_pack_vector.
	(create_pack_vector): Add and use the missed parameter.

	* DINO/d_func.c (match_call): Remove variable vect.
	(gmatch_call): Ditto.  Remove els_number.
	(seek_call): Remove res.
	(initiate_io, finish_io): Make the function result void.
	(gc_call): Remove result.
	(exit_call): Remove val and vect.
	(process_func_class_call): Remove class.
	(int_earley_parse): Remove i and save_pos_ptr.
	(int_earley_create_grammar): Remove code.

	* DINO/d_heap.c (final_call_destroy_functions): Add assert to
	check that uppest stack was not popped up.  Check cstack not NULL.
	Set up ctop and cpc when cstack is the uppest stack.
	(hash_key): Remove j and el_type.
	(spi): Add miised create_pack_vector.

	* DINO/d_yacc.y (canonical_path_name): Expand name on 2 bytes on
	WIN32.
	(full_file_name): Remove buf.

	* DINO/dino.tst.in: Add parameter that the interpreter built by
	the Visual C.
	(CMP): Remove CR from the second file too.
	(SCMP): New shell variable.
	(228): Use the new parameter.
	(230): Remove Dos drive and change \ onto /.
	(357): Remove some shell varaibles from the environemnt.
	(437, 438): Try also concatenated stdout and stderr in another
	order.
	(453): Use suffix .dll for CYGWIN.
	(457 - 461): Use SCMP.
	(487): Try additional digit in the exponent.
	(495): Increase datagram message buffer.
	(497): Use suffix .dll and canonized path in the error message.
	(499): Try absent service too for CYGWIN.

	* DINO/ipcerr_int.c (_ipc_err_init): Fix typo with eltype of
	vector _eos_specific_nos.  Return nil.
	(ipcerr_address): Return addresses of external objects.

	* DINO/mpi.c (mpi_unary_op): Fix typo with setting up var.
	(from_based_string): Fix typo in assert.

	* DINO/socket.d: Add functions destroy.

	* DINO/socket_int.c: Remove winsock2.h.
	(socklen_t): Define it for WIN32.
	(get_ip_address): Fix typo in WSAGetLastError.
	(_gethostinfo): Remove addr_p and str.  Fix typo in
	WSAGetLastError.
	(form_servent): Don't setup errno for WSANO_DATA.  Fix typo in
	WSAGetLastError.
	(_sread, _swrite): Fix typo in WSAGetLastError.
	(_recvfrom, _sendto, _accept, _stream_client): Ditto.
	(_dgram_client): Ditto.  Remove addr, port, saddr, sin_addr_ptr.
	(_stream_server): Remove addr, sin_addr_ptr.
	(_dgram_server): Remove addr, queue_len, sin_addr_ptr.  Fix typo
	in WSAGetLastError.
	(socket_address): Return addresses of external objects.

	* dinolang/dinolang.dsw: Add socket project.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (earley_create_grammar): Initialize cost_p.

2002-04-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_dino.c (dino_finish): Call final_call_destroy_functions.
	Process negative code.
	(error_func_for_allocate): Use the negative code.

	* DINO/d_heap.c (final_call_destroy_functions): New function.
	(mark_instances_need_destroying): Add new parameter.
	(mark_used_heap_objects): Call mark_instances_need_destroying with
	the parameter.

	* DINO/d_run.sprut (final_call_destroy_functions): New prototype.

	* DINO/dino.tst.in: Add new tests for final destroying.

	* DINO/socket.d (_socket_fin, _close_socket): New declarations.
	(destroy): New functions in __socket_package, stream_client,
	dgram_client, stream_server, dgram_server.

	* DINO/socket_int.c (_close_socket, _socket_fin): New functions.
	(socket_initialized_p): New static variable.
	(_socket_init): Set up socket_initialized_p.
	(socket_address): Add references for _close_socket, _socket_fin.

	* DINO/dino.sgml.in: Calling destroy by finishing the program.

	* DINO/{dino.dvi, dino.info*, dino.ps, dino.txt, dino.html,
	dino-4.html}: Update.

2002-04-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: New tests for getservbyname, getservbyport.

	* DINO/ipcerr.d: Add _eos_specific_nos and _eos_specific_msgs.

	* DINO/ipcerr_int.c: Ditto.
	(set_ipc_os_error): New function.
	(_ipc_err_init): Add windows errors.

	* DINO/socket.d (_setservent, _getservent, _endservent): Remove
	them.
	(_getservbyport, _getservbyname): New externals.
	(getservices): Remove it.
	(getservbyport, getservbyname): Use _getservbyport and
	_getservbyname.

	* DINO/socket_int.c: Add code for windows.
	(_setservent, _getservent, _endservent): Remove them.
	(_getservbyport, _getservbyname, form_servent): New functions.

2002-04-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (find_context_by_scope): Remove checking cached
	value by NULL.
	(push_var_val): Add code for cached variable address value.
	(evaluate_code): Set up unique number for copied instance.

	* DINO/d_heap.c (heap_push, heap_pop): Always increase the tick.
	(copy_vector): Set up unique number for copied vector.

	* DINO/d_ir.sprut (block): Change comment for the cached address.
	(var): New fields `var_cached_address' and
	`var_cached_container_tick'.

	* DINO/dino.tst.in: Add test for the cashes in complicated cases.

2002-04-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_ir.sprut (ENVIRONMENT): Rename i into __i.

	* DINO/d_func.c (init_syntax_token): Add processing attributes
	equal to NULL.

	* DINO/dino.sgml.in: Add comments about possible nil values for
	attributes in function syntax_error.

	* dino.info, dino.info-1, dino.info-2, dino.info-3, dino.info-4,
	dino.ps, dino.dvi, dino.txt, dino-8.html, dino-10.html: Update.

2002-03-31  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

        * DINO/dino.sgml.in: Edit it.

	* DINO/dino.1: Ditto.

	* DINO/dino.html, DINO/dino-1.html, DINO/dino-2.html,
	DINO/dino-3.html, DINO/dino-4.html, DINO/dino-5.html,
	DINO/dino-6.html, DINO/dino-7.html, DINO/dino-8.html,
	DINO/dino-10.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.dvi, DINO/dino.txt: Update.

2002-03-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.spec, dino.spec: Use %attr for %doc.

	* DINO/d_dino.h (STANDARD_DINO_EXTERN_LIBS): Add ipcerr and
	socket.

	* DINO/d_func.c (process_errno_call): Remove assert.

	* DINO/dino.1: Add ipcerr and socket.

	* DINO/dino.dvi, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

	* DINO/dino.tst.in: Add tests for socket.

2002-03-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.spec: New file.

	* dino.spec: New file.

	* Makefile.in, AMMUNITION/Makefile.in, DINO/Makefile.in,
	MSTA/Makefile.in, NONA/Makefile.in, OKA/Makefile.in,
	SHILKA/Makefile.in, SPRUT/Makefile.in: Add DESTDIR needed for RPM.

2002-03-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in: Check only_cocom_source_files on empty.

	* acconfig.h (socklen_t, HAVE_INET_ATON): New undefs.

	* configure.in: Check type scoklen_t, function inet_aton, and
	libaray -lxnet.

	* configure: Update.

	* AMMUNITION/cocom-config.h.in: Update.

	* DINO/Makefile.in (ipcerr_lib): New macro.
	(DINO_EXTERN_LIBS, DINO_EXTERN_LIBS_PATH, source): Add files for
	ipcerr.
	(ipcerr_lib): New rule for building.
	(install, uninstall, create-distdir, depend): Add files for
	ipcerr.
	Update dependencies.

	* DINO/compare.tst: Add test numbers.

	* DINO/d_main.c (get_library_search_function): Add code for ipcerr
	and socket.
	(ipcerr_address, socket_address): Add externals.

	* DINO/d_built.h (process_errno_call): New prototype.

	* DINO/d_func.c (process_system_errors): Use strerror for
	default message.
	(process_errno_call): New function.

	* DINO/d_ir.sprut (ENVIROMENT): New function __process_errno__.
	(PROCESS_ERRNO_NAME): New macro.
	(process_errno_decl): New global variable.
	(decls_table): Add entry for __process_errno__.

	* DINO/socket.d (ipcerr): Include it.
	(socket_error): Extend error.
	(invalid_address, host_not_found, no_address, no_recovery): New
	classes in socket_error.
	(socket_errors): New variable.
	(socket_excepts): remove it from __scoket_package.
	(_socket_invalid_address, _socket_host_not_found,
	_socket_no_address, _socket_no_recovery, _socket_try_again): New
	private external vars.
	(generate_socket_exception): Change it.  Remove parameter.

	* DINO/socket_int.c: Include d_config.h.
	(_socket_invalid_address, _socket_host_not_found,
	_socket_no_address, _socket_no_recovery, _socket_try_again): New
	global vars.
	(get_ip_address, _gethostinfo, _getservent, _sread, _swrite,
	_recvfrom, _sendto, _accept, _stream_client, _dgram_client,
	_stream_server, _dgram_server): Process errors.
	(_socket_init): Set up _socket_invalid_address,
	_socket_host_not_found, _socket_no_address, _socket_no_recovery,
	_socket_try_again.
	(socket_address): New function.

	* MSTA/Makefile.in: Update dependencies.

	* NONA/Makefile.in: Ditto.

	* OKA/Makefile.in: Ditto.

	* SHILKA/Makefile.in: Ditto.

	* SPRUT/Makefile.in: Ditto.

	* AMMUNITION/Makefile.in: Ditto.

	* DINO/ipcerr.d: New file.

	* DINO/ipcerr_int.c: New file.

2002-03-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (earley_set_lookahead_level): Check the
	parameter level and change it if it is not in the range.

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Add tests with
	lookahead level not in the range.

	* AMMUNITION/{ammunition.sgml.in, ammunition++.sgml.in}: Comments
	about the lookahead value not in ther range.

        * AMMUNITION/{ammunition++-13.html, ammunition++.dvi,
	ammunition++.info, ammunition++.info-1, ammunition++.info-2,
	ammunition++.info-3, ammunition++.info-4, ammunition++.ps,
	ammunition++.txt, ammunition-13.html, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps, ammunition.txt}: Update.

	* DINO/d_ir.sprut (int_earley_set_lookahead_level, set_lookahead):
	New functions in the environment.
	(INT_EARLEY_SET_LOOKAHEAD_LEVEL_NAME): New macro.
	(int_earley_set_lookahead_level_decl): New global variable.
	(decls_table): Add entry for int_earley_set_lookahead_level.

	* DINO/d_built.h (int_earley_set_lookahead_level): New extrenal
	definition.

	* DINO/d_func.c (int_earley_set_lookahead_level): New function.

	* DINO/dino.tst.in: New tests for set_lookahead.

	* DINO/dino.sgml.in (set_lookahead): Describe it.

	* DINO/{dino-10.html, dino-8.html, dino.dvi, dino.html, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt): Update.

2002-03-15  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (int_earley_parse): Process case root==NULL.

	* DINO/dino.tst.in: Add test for parse returning nil.

	* DINO/dino.sgml.in: Add comments about returning nil by function
	parse.

	* DINO/{dino.html, dino-8.html, dino-10.html, dino.dvi, dino.dvi,
	dino.info, dino.info-1, dino.info-2, dino.info-3, dino.info-4,
	dino.ps, dino.txt}: Update.

	* AMMUNITION/{ammunition.sgml.in, ammunition++.sgml.in}: Fix typo.

	* AMMUNITION/{ammunition++-13.html, ammunition++.dvi,
	ammunition++.info, ammunition++.info-1, ammunition++.info-2,
	ammunition++.info-3, ammunition++.info-4, ammunition++.ps,
	ammunition++.txt, ammunition-13.html, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps, ammunition.txt}: Update.

2002-03-14  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (make_parse): Check found reduce situation
	always.

	* AMMUNITION/earley.tst.in: Add test for right recursion.

	* AMMUNITION/earley++.tst.in: Ditto.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_heap.c (eq_vector): Fix typo in the 2nd argument of eq_val in
	comparison of unpacked vectors.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_heap.c (eq_key): Process nil too.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/socket.d: New file.

	* DINO/socket_int.c: New file.

	* DINO/Makefile.in: Add building sockets module.

	* DINO/d_heap.c (move_object): Check that the tailored size is less
	than the original one.
	(compact_heap): Take moved stacks into account of checking the
	last heap chunk.

2002-03-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{ammunition++.dvi, ammunition++.info,
	ammunition++.info-1, ammunition++.info-2, ammunition++.info-3,
	ammunition++.info-4, ammunition++.ps, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps): Update.

2002-03-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (unpack_vector): Set up mode after moving the
	value.

	* DINO/compare.tst: Add Dino test for sockets.

2002-02-27  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: Remove CR for test outputs under Cygwin.

2002-02-11  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_conflict_flag, error_single_definition):
	Add it.

	* MSTA/common.c (error_conflict_flag, error_single_definition):
	Add it.

	* MSTA/anal.c (process_definition_list): Use
	errro_single_definition instead of single_definition.

	* MSTA/gen-comm.h (error_single_definition): Remove it.

	* MSTA/gen-comm.c (error_single_definition): Ditto.

	* MSTA/gen.c (find_error_single_definition): Remove it.
	(generate): Don't call it.

	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Don't make default for LR-set containing `... error .' too.

	* MSTA/lr.c (contains_error): New function.
	(add_context_conflicts): Use error_conflict_flag and the function.

	* MSTA/main.c: Add options -(no-)error-conflict.
	(main): Add error_conflict_flag.

	* MSTA/msta.tst.in: Add tests for options -(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_conflict_flag): Remove it.

	* MSTA/common.c (error_conflict_flag): Remove it.

	* MSTA/lr.c (contains_error): Remove.
	(add_context_conflicts): Remove error_conflict_flag.

	* MSTA/main.c: Remove options -(no-)error-conflict.
	(main): Remove error_conflict_flag.

	* MSTA/msta.tst.in: Remove test for options -(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdir, distdinodir): Change it.

	* MSTA/Makefile.in (distdir): Change it.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in: Use -local-error-recovery.

	* DINO/dino.dsp: Ditto.

2002-02-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_reduce_flag, error_conflict_flag): New
	external definition.

	* MSTA/common.c (error_reduce_flag, error_conflict_flag): New
	variables.

	* MSTA/lr.c (contains_error): New function.
	(add_context_conflicts): Don't add conflict on error if not
	error_conflict_flag.

	* MSTA/main.c: Add options -(no-)error-reduce,
	-(no-)error-conflict.
	(main): Set up error_reduce_flag and error_conflict_flag.

	* MSTA/gen.c (set_up_LR_set_some_field_standard_values): Set up
	field it_is_errored_LR_set.

	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Don't set up default reduce if not error_reduce_flag.

	* MSTA/parser.c (YYRESTORE_AND_TRY_NEXT_ERROR_LABEL_NAME): New
	macro.
	(output_switch): Use `goto yyrestore_and_try_next_error' instead
	of YYABORT.
	(output_code_before_switch): Use yyrestore_and_try_next_error.
	Clear yychar after end of one error recovery try.
	(output_parser_itself): Set up yychar and yylval at the end of
	error recovery.

	* MSTA/msta.tst.in: New tests for options -(no-)error-reduce,
	-(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-reduce,
	-(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/parser.c (YYERROR_MESSAGE_MACRO_NAME): New macro.
	(output_definitions_outside_yyparse): Output the new macro
	definition.
	(output_shift_pop_actions): Output setting up yyprev_char for all
	regimes.
	(output_switch): Use YYERROR_MESSAGE.  Output setting up
	yyprev_char for all regimes.
	(output_definition_inside_yyparse): Output definition of
	yyprev_char for all regimes.
	(output_parser_itself): Output clearing yychar and setting up
	yyprev_char at the end of minimal cost error recovery.

	* MSTA/msta.sgml.in (YYERROR_MESSAGE): Describe the new macro.

	* MSTA/msta-3.html, MSTA/msta.dvi, MSTA/msta.ps, MSTA/msta.txt,
	MSTA/msta.info*: Update.

2002-01-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (additional_files): Add fcalc1.y.

	* MSTA/common.h (YACC_ERROR_RECOVERY, LOCAL_ERROR_RECOVERY,
	MINIMAL_ERROR_RECOVERY): New macros.
	(yacc_error_recovery_flag): Rename it into msta_error_recovery.

	* MSTA/common.c (yacc_error_recovery_flag): Rename it into
	msta_error_recovery.

	* MSTA/main.c (COMMAND_LINE_DESCRIPTION_PART3, main): Rename
	-no-yacc-error-recovery into -local-error-recovery.  Add new
	option -minimal-error-recovery.  Make -yacc-error-recovery by
	default.

	* MSTA/ird.sprut (LR_set): Add field it_is_errored_LR_set.

	* MSTA/regular.c (mark_semantic_pushed_LR_sets): Setup flag
	it_is_errored_LR_set.

	* MSTA/parser.c (ERRORED_STATE_FLAGS_VECTOR_NAME,
	YYUNDEFINED_RECOVERY_COST_MACRO_NAME,
	YYEXPAND_SAVED_STATES_BUFFER_FUNCTION_NAME,
	YYEXPAND_SAVED_ATTRIBUTES_BUFFER_FUNCTION_NAME,
	YYINCREASE_TOKENS_BUFFER_FUNCTION_NAME): New macros.
	(output_errored_states_table): New function.
	(output_parser_tables): Call the new function.
	(output_include_directives): Add include file limits.h.
	(YYSTATE_TOKEN_NUMS_VARIABLE_NAME,
	YYSAVED_STATE_TOKEN_NUMS_VARIABLE_NAME,
	YYSAVED_STATES_VARIABLE_NAME, YYSAVED_ATTRIBUTES_VARIABLE_NAME):
	New macros.
	(output_inside_outside_definitions): Add code for minimal error
	recovery.
	(output_saved_state_or_attribute_buffer_expansion_function_title,
	output_token_buffer_increase_function_title): New functions.
	(output_class_start, output_class_start): Add code for minimal
	error recovery.
	(YYNEXT_ERROR_LABEL_NAME, YYERR_RECOVERY_TRY_END_LABEL_NAME,
	YYRECOVERY_FINISH_LABEL_NAME, YYSAVED_STATES_END_VARIABLE_NAME,
	YYSAVED_ATTRIBUTES_END_VARIABLE_NAME,
	YYLOOK_AHEAD_CHAR_END_VARIABLE_NAME, YYCHAR_PTR_VARIABLE_NAME,
	YYERROR_STATE_VARIABLE_NAME, YYBEST_ERROR_STATE_VARIABLE_NAME,
	YYERROR_ATTRIBUTE_VARIABLE_NAME,
	YYBEST_ERROR_ATTRIBUTE_VARIABLE_NAME,
	YYRECOVERY_COST_VARIABLE_NAME, YYBEST_RECOVERY_COST_VARIABLE_NAME,
	YYERROR_STATE_NUM_VARIABLE_NAME,
	YYBEST_ERROR_STATE_NUM_VARIABLE_NAME,
	YYERROR_ATTRIBUTE_NUM_VARIABLE_NAME,
	YYBEST_ERROR_ATTRIBUTE_NUM_VARIABLE_NAME,
	YYTOKEN_IGNORED_NUM_VARIABLE_NAME,
	YYBEST_TOKEN_IGNORED_NUM_VARIABLE_NAME,
	YYCURR_TOKEN_NUM_VARIABLE_NAME, YYERROR_TOKEN_NUM_VARIABLE_NAME,
	YYLOOK_AHEAD_CHAR_END_VARIABLE_NAME): New macros.
	(output_look_ahead_arrays_length,
	output_definitions_outside_yyparse,
	output_state_or_attribute_stack_expansion,
	output_states_stack_check, output_states_stack_check,
	output_states_stack_check, output_shift_pop_actions,
	output_shift_pop_actions, output_debug_print_about_saving_token,
	output_check_yyfirst_char_ptr): Add code for minimal error
	recovery.
	(output_saving_token, output_increase_tokens_buffer,
	output_restoring_minimal_recovery_state): New functions.
	(output_switch, output_definition_inside_yyparse,
	output_code_before_switch, output_initiation_code,
	output_scanner_array_variables_allocatio,
	output_parser_array_variables_allocation, output_free_arrays,
	output_parser_itself): Add code for minimal error recovery.

	* MSTA/quality.tst.in: New tests 46 and 47 for minimal error
	recovery.  Use option -local-error-recovery.

	* MSTA/msta.1: Rename -no-yacc-error-recovery into
	-local-error-recovery.  Add new option -minimal-error-recovery.
	Make -yacc-error-recovery by default.

	* cocom.sgml.in: Add information about the new error recovery
	method.

	* MSTA/msta.sgml.in: Add information about the new (minimal) error
	recovery method.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

        * MSTA/msta-1.html, MSTA/msta-3.html, MSTA/msta-5.html,
	MSTA/msta.1, MSTA/msta.dvi, MSTA/msta.info, MSTA/msta.info-1,
	MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.sgml.in, MSTA/msta.txt:
	Update.

2001-12-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (int_earley_set_cost_flag): New prototype.

	* d_ir.sprut (ENVIRONMENT): New Dino variables nil_anode and
	error_anode, new functions int_earley_set_cost_flag and set_cost.
	(nil_anode_decl, error_anode_decl, int_earley_set_cost_flag_decl):
	New variables.
	(NIL_ANODE_NAME, ERROR_ANODE_NAME, INT_EARLEY_SET_COST_FLAG_NAME):
	New macros.
	(decls_table): New entries for nil_anode, error_anode,
	int_earley_set_cost_flag.

	* d_func.c (int_earley_set_cost_flag): New function.
	(tree_to_heap): Use nil_anode_decl and error_anode_decl.
	(init_parse_alloc): Rename it into int_parse_alloc.
	(int_earley_parse): Add new parameter for earley_parse.

	* dino.tst.in (265, 284): New expected positions for argv and env.

	* dino.sgml.in (nil_anode, error_anode): New environment
	variables.
	(set_cost): New parser function.

	* dino.html, dino-4.html, dino-8.html,, dino.dvi, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt: Update.

2001-12-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * earley.h (EARLEY_NIL_TRANSLATION_NUMBER, EARLEY_NEGATIVE COST):
	new macros.
	(earley_anode): New member cost.
	(earley_set_cost_flag, set_cost_flag): New functions.
	(earley_parse, parse): New parameter parse_free.
	(read_rule): New parameter anode_cost.

	* earley.c (grammar): New member cost_p.
	(parse_free): New global variable.
	(rule): New member anode_cost.
	(rule_new_start): New parameter anode_cost.
	(earley_read_grammar): New parameter anode_cost.
	(earley_set_cost_flag): New function.
	(trans_print_node): Rename it trans_visit_node.
	(trans_print_node_hash): Rename it trans_visit_node_hash.
	(trans_print_node_eq): Rename it trans_visit_node_eq.
	(trans_print_nodes_tab): Rename it trans_visit_nodes_tab.
	(trans_print_nodes_os): Rename it trans_visit_nodes_os.
	(n_trans_print_nodes): Rename it n_trans_visit_nodes.
	(reserv_mem_tab, tnodes_vlo): New global variables.
	(reserv_mem_hash, reserv_mem_eq, prune_to_minimal,
	traverse_pruned_translation, find_minimal_translation): New
	functions.
	(make_parse): Change NULL onto empty node after processing the
	corresponding rule. Change pl_ind even if we don't nee a
	translation (a bug). Add building minimal tree(s).  Setup original
	cost to abstract nodes.
	(earley_parse): New parameter parse_free.
	(read_rule): New parameter anode_cost.  Set up anode_cost.
	(use_functions, use_description): Add the new parameters.

        * earley.cpp (earley::read_grammar): New paarmeter anode_cost.
	(earley::set_cost_flag): New function.
	(earley::parse): New parmeter parse_free.
	(use_functions, use_description): Add the new paremeters.

	* sgramm.y: Add rules for cost and empty nodes.
	(srule): New member anode_cost.
	(anode_cost): New global variable.
	(yylex): New lexema '-'.
	(sread_rule): New parameter anode_cost.

	* earley.tst.in, earley++.tst.in: New shell variable srdcir.  Add
	new parameters for (erley_)parse and read_rule.
	(42-47): New tests for costs and empty nodes.

	* ammunition.sgml.in, ammunition++.sgml.in: Add building minimal
	cost trees.  New grammar syntax for transaltion (cost and `-').
	(macro EARLEY_NIL_TRANSLATION_NUMBER, macro EARLEY_NEGATIVE COST,
	member cost, parameter anode_cost, function earley_set_cost_flag,
	public function set_cost_flag, parameter parse_free): Describe
	them.

	* ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.info-4, ammunition.dvi,
	ammunition.ps, ammunition.txt, ammunition-13.html,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.info-4, ammunition.dvi,
	ammunition.ps, ammunition.txt, ammunition-13.html: Update.

	* cocom.sgml.in: Add building minimal cost trees.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

2001-11-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/compare.tst: Check for failing tests.

2001-11-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (source_position_ptr): Remove it.
	(SET_SOURCE_POSITION_PTR): Ditto.

	* DINO/d_context.c (type_test, third_expr_processing,
	third_block_passing): Use source_position instead of
	source_position_ptr.

	* DINO/d_dino.c (source_position_ptr): Remove it.
	(error_func_for_allocate, exception_action): Use IR_pos (cpc)
	instead of source_position_ptr.

	* DINO/d_errors.c (yyerror): Use source_position instead of
	source_position_ptr.

	* DINO/d_eval.c (FIND_CONTEXT_BY_SCOPE): New macro.
	(find_context_by_scope): Use it.
	(find_context_by_scope): New macro.
	(execute_a_period_operation, check_vector_index,
	store_vector_element, load_table_element, store_table_element):
	Use IR_pos (cpc) instead of source_position_ptr.
	(load_designator_value): Remove parameter and
	SET_SOURCE_POSITION_PTR.
	(store_designator_value):
	(store_designator_value): Remove SET_SOURCE_POSITION_PTR.
	(prepare_op_assign): Call load_designator_value without the
	parameter.  Use IR_pos (cpc) instead of source_position_ptr.
	(execute_div_op, execute_mod_op, execute_concat_op): Use IR_pos
	(cpc) instead of source_position_ptr.
	(evaluate): Move its code into evaluate_code.  Remove it.  Use
	IR_pos (cpc) instead of source_position_ptr.

	* DINO/d_func.c (min_max_call, to_lower_upper, eltype_call,
	keys_call, context_call, inside_call, process_regcomp_errors,
	match_call, gmatch_call, generall_sub_call, split_call, subv_call,
	cmpv_call, del_call, general_ins_call, rev_call,
	array_sort_compare_function, sort_call, two_strings_func_start,
	string_func_start, getcwd_call, get_stat, file_start, open_call,
	flush_call, tell_call, seek_call, file_function_call_start,
	general_put_call, general_get_call, general_get_ln_file_call,
	get_call, getln_call, getf_call, fget_function_call_start,
	fgetf_call, invinput_error, general_scan_call, scan_call,
	scanln_call, function_without_par, getgroups_call,
	float_function_start, float_function_start2, general_rand_call,
	process_system_errors, readdir_call, stat_start, time_call,
	strtime_call, clock_call, system_call, exit_call,
	process_func_class_call, int_earley_parse_grammar,
	int_earley_parse_grammar, int_earley_set_debug_level,
	int_earley_set_one_parse_flag, int_earley_set_error_recovery_flag,
	int_earley_set_recovery_match, init_read_token, int_earley_parse,
	int_earley_create_grammar): Use IR_pos (cpc) instead of
	source_position_ptr.
	(real_func_call_pos_ptr): Rename it into real_func_call_pc.

	* DINO/d_heap.c (activate_process, external_address): Use IR_pos
	(cpc) instead of source_position_ptr.

	* DINO/d_ir.sprut (assign_stmt): New abstract node.
	(assign, mult_assign, div_assign, rem_assign, plus_assign,
	minus_assign, concat_assign, lshift_assign, rshift_assign,
	ashift_assign, and_assign, xor_assign, or_assign, var_assign,
	par_assign): Use it as base.

	* DINO/d_yacc.y: Use source_position instead of
	source_position_ptr.
	(yylex): Ditto.

	* DINO/dino.tst.in (128, 314, 348-350): Change expected error
	position.

	* DINO/dino.sgml.in: New function sput, sputln, sprint, sprintln.

	* DINO/{dino-4.html, dino-8.html, dino.dvi, dino.html, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt: Update.

2001-11-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (sput_call, sputln_call, sprint_call,
	sprintln_call): New function prototypes.

	* DINO/d_func.c (print_ch): Adding to temp_vlobj instead of
	printing.
	(print_context): Ditto.
	(print_val): Ditto.
	(file_param_type): New enumeration.
	(finish_output): New function.
	(general_put_call, general_print_call): Adding to temp_vlobj
	instead of printing.  Call finish_output.
	(put_call, putln_call, fput_call, fputln_call, print_call,
	println_call, fprint_call, fprintln_call): Use the enumeration.
	(sput_call, sputln_call, sprint_call, sprintln_call): New
	functions.

	* DINO/d_ir.sprut (ENVIRONMENT): Add sput, sputln, sprint, sprint.
	(SPUT_NAME, SPUTLN_NAME, SPRINT_NAME, SPRINTLN_NAME): New macros.
	(sput_decl, sputln_decl, sprint_decl, sprintln_decl): New
	definitions.
	(decls_table): Add entries for sput, sputln, sprint, sprint.

	* DINO/dino.tst.in: Add new tests for sput, sputln, sprint,
	sprint.

2001-11-02  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (258, 453): Use srdcir for include under
	Cygnwin.
	(483): Process success for conversion of string representation of
	tiny float into 0 too.

2001-11-01  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in: Add all necessary for new file d_heap.c.

	* DINO/d_ir.sprut (destroy_unique_ident): New global variable.
	(initiate_icode): Initiate the new variable.

	* DINO/d_blocktab.h (process_block_decl_ident): Rename it onto
	process_block_decl_unique_ident.

	* DINO/d_blocktab.c (process_block_decl_ident): Rename it onto
	process_block_decl_unique_ident.

	* DINO/d_context.c (first_expr_processing): Use
	`process_block_decl_unique_ident' instead of
	`process_block_decl_ident'.
	(test_context): Add processing for ident `destroy'.

	* DINO/d_extern.sprut (instance_state_t, instance_state): New type
	and enumeration.
	(heap_obj): Add field `state'.

	* DINO/d_heap.c: New file -- former part of d_run.sprut.  Add code
	for implementing destroy.  Set up field `saved_cstack' for the
	current process whenever cstack is changed.

	* DINO/d_func.c (create_instance): Set up field `state'.
	(process_func_class_call): Set up field `saved_cstack' for the
	current process.

	* DINO/d_run.sprut: Move all functions into d_heap.c.

	* DINO/dino.dsp: Add d_heap.c.

	* DINO/dino.tst.in: New test for destroy.

	* DINO/dino.sgml.in:  Add description of function destroy.

	* DINO/{dino-4.html, dino.html, dino-10.html, dino.dvi,
	dino.info*, dino.ps, dino.txt}: Update.

2001-10-27  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: Add new test for version.

2001-10-27  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (getgn, getegn, getgroups_call, fgn_call): Add
	checking getgrgid on NULL.

	* DINO/d_eval.c (initiate_arguments): Rename it into
	initiate_vars.  Add initializing varaibale version.
	(evaluate_program): Use initiate_vars instead of
	initiate_arguments.

	* DINO/d_ir.sprut (ENVIRONMENT): Add final variable version.
	(VERSION_NAME): New macro.
	(version_decl): New variable.
	(decls_table): Add entry for version.

	* DINO/dino.sgml.in:  Add description of version and new
	parameter for getf, fgetf.

	* DINO/{dino-4.html, dino.html, dino-8.html, dino-10.html,
	dino.dvi, dino.info*, dino.ps, dino.txt}: Update.

2001-10-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (test): Remove function test.

	* DINO/d_func.c (process_func_class_call): Remove function test
	call.

2001-10-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in (DINO_VERSION): New macro.
	(distdir, libdir, includedir, OPTIONS): Use the new macro.
	(install): Copy the executable with version in the name.

	* DINO/compare.tst: New tests.  Print versions of the
	interpreters.  New parameter to run only DINO tests.

	* DINO/d_context.c (fourth_block_passing): Process chain starting
	with next_pc.

	* DINO/d_conv.c (implicit_arithmetic_conversion): Use ctop instead
	of free.
	(implicit_conversion_for_binary_arithmetic,
	implicit_int_conversion): Change depths in
	implicit_arithmetic_conversion calls.
	(implicit_eq_conversion): Use ctop instead of free.
	(implicit_conversion_for_eq_op): Change depths in
	implicit_eq_conversion calls.

	* DINO/d_dino.c (d_main): Use macro DINO_VERSION.

	* DINO/d_eval.c (push_var_ref, store_vector_element,
	store_table_element, store_designator_value, prepare_op_assign):
	Use ctop instead of free.
	(evaluate): Ditto.  Change depths in calls of
	implicit_arithmetic_conversion, implicit_int_conversion.

	* DINO/d_extern.sprut (DECR_FREE): Change it onto DECR_TOP.
	(DECR_CTOP): New macro.
	(heap_stack): Rename field free onto ctop.

	* DINO/d_func.c (min_max_call, to_lower_upper, eltype_call,
	keys_call, context_call, inside_call, match_call, gmatch_call,
	generall_sub_call, generall_sub_call, split_call, subv_call,
	cmpv_call, del_call, general_ins_call, rev_call, sort_call,
	get_file, rename_call, mkdir_call, rmdir_call, getcwd_call,
	chdir_call, general_chmod, isatty_call, open_call, close_call,
	flush_call, popen_call, pclose_call, tell_call, seek_call,
	file_function_call_start, general_put_call, general_print_call,
	getf_call, fgetf_call, scanel, str_function_end, getgroups_call,
	float_function_start, float_function_start2,
	float_function_finish, general_rand_call, readdir_call,
	ftype_call, stat_finish, fun_call, fgn_call, mode_finish,
	time_call, strtime_call, clock_call, gc_call, system_call,
	exit_call, init_call, call_external_func, create_instance,
	int_earley_parse_grammar, int_earley_set_debug_level,
	int_earley_set_one_parse_flag, int_earley_set_error_recovery_flag,
	int_earley_set_recovery_match, int_earley_parse): Use ctop instead
	of free.  Change depths in calls of implicit_arithmetic_conversion
	and implicit_int_conversion.
	(process_func_class_call): Ditto.  Save ctop and set up new one.

	* DINO/d_run.sprut (ER_CTOP): New macro.
	(SET_TOP, TOP_UP, TOP_DOWN): Use ctop instead of free.  New
	variants of macros.
	(traverse_used_heap_object, change_obj_refs): Use ctop instead of
	free.
	(gc): Save and restore ctop.
	(heap_push): Ditto.  Use ctop instead of free.
	(heap_pop, activate_given_process): Save and restore ctop.

	* DINO/dino.tst.in (test 356): Change output because of added
	optimizations.

2001-10-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (del_call): Fix typo in the condition.

	* DINO/d_eval.c (evaluate): Pop stack before blocking process too.

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Use srcdir for the
	tests.

	* DINO/dino.tst.in: Use new diagnostics in tests 466 and 469
	(functions getf and fgetf).

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * DINO/d_ir.sprut (ENVIRONMENT): Add definition of function rev.
	(REV_NAME): New macro.
	(rev_decl): New varaibale and its external declaration.
	(format_vectorof): New node type.
	(decls_table): Add entry for the new function.
        
	* DINO/d_extern.sprut (heap_vect): Add field disp.
	(ER_unpack_els, ER_pack_els): Use the field.

	* DINO/d_run.sprut (OPTIMAL_ELS_SIZE): Make it bigger.
	(_pack_els, _unpack_els):
	(heap_chunk): Add member chunk_stack_top.
	(new_heap_chunk): Initialize the member
	(heap_allocate): Add new parameter saying where in the heap to
	allocate.
	(try_heap_free): Rename it onto try_heap_stack_free.
	(tailored_heap_object_size): Take field disp (for vector) into
	account.
	(define_new_heap_object): New function.
	(define_new_heap_object_places): Use the new function.
	(change_obj_refs): Rename it into change_refs.  Use the next new
	function.
	(change_obj_refs): New function.
	(move_object): New function.
	(compact_heap): Use the previous new function.
	(gc): Use function change_refs.
	(heap_push, heap_pop):  Use allocation for the stacks.
	(create_empty_vector): Use the disp and new parameter for heap
	allocation.
	(create_unpack_vector, expand_vector, unpack_vector): Ditto.
	(create_pack_vector, pack_vector_if_possible): Use the disp.
	(copy_vector): Use the new parameter for heap allocation.
	(hash_val): Use another encoding.
	(hash_key): Ditto.
	(START_TABLE_SIZE): Use the bigger vector.
	(create_tab, create_process): Use the new parameter for heap
	allocation.

	* DINO/d_yacc.y: Add transformation into vector with a format.

	* DINO/d_built.h (rev_call): New function definition.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	format_vectorof.

	* DINO/d_conv.h (to_vect_string_conversion): New format parameter.

	* DINO/d_conv.c (to_vect_string_conversion): Add conversion with
	format.  Fix a GC bug.
	(implicit_var_arithmetic_conversion,
	implicit_conversion_for_eq_op): Add NULL parameter to call of
	to_vect_string_conversion.

	* DINO/d_errors.h (ERR_invalid_conversion_format_type,
	DERR_format_conversion_to_vector_operand_type,
	DERR_vector_conversion_format_type):  External definitions of the
	new error messages.

	* DINO/d_errors.c (ERR_invalid_conversion_format_type,
	DERR_format_conversion_to_vector_operand_type,
	DERR_vector_conversion_format_type): The new error messages.

	* DINO/d_eval.c (execute_concat_op): Add NULL parameter to call of
	to_vect_string_conversion.
	(evaluate): Ditto.  Add new parameter to call of heap_allocate.
	Process format_vectorof.
	(eval_error): Add new parameter to call of heap_allocate.

	* DINO/d_func.c (to_lower_upper, match_call, gmatch_call,
	generall_sub_call, split_call, subv_call, cmpv_call): Add NULL
	parameter to call of to_vect_string_conversion.
	(del_call): Take the first element disp into account.  Return the
	result.
	(general_ins_call): Return the result.
	(rev_call): New function.
	(two_strings_func_start, string_func_start, print_val,
	general_put_call, general_get_call): Add NULL parameter to call of
	to_vect_string_conversion.
	(general_get_ln_file_call): Add new parameter as_lns_p.
	(getf_call): Process the new parameter.
	(fgetln_call): Use the new general_get_ln_file_call parameter.
	(fgetf_call): Ditto.  Process the new parameter.
	(general_scan_call): Use shorter code.
	(readdir_call, strtime_call, system_call): Add NULL parameter to
	call of to_vect_string_conversion.
	(create_instance): Add new parameter to call of heap_allocate.

	* DINO/dino.tst.in: New output for test # 362 because of new
	hashing.

	* DINO/dino.sgml.in: Vector conversion with format.  New function
	rev.  Function del, ins, insv now return the vector.  Function
	getln is with parameter now.

	* DINO/{dino-4.html, dino-5.html, dino-8.html, dino-9.html,
	dino.html, dino.dvi, dino.info, dino.info-1, dino.info-2,
	dino.info-3, dino.info-4, dino.ps, dino.txt}: Update.

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* REGEX/regex.h: Update it.

	* REGEX/regex.c: Update it.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (new_heap_chunk): Increase size according to
	heuristic.
	(compact_heap): Don't delete free heap chunk according to
	heuristic.  Move objects only if it is necessary.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_errors.h (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New external definitions.

	* DINO/d_errors.c (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New messages.
	(DERR_erange): Change the message.

	* DINO/d_yacc.y: Add rules for {char, int, float} (..).
	(get_string_code): Add processing `\a'.

	* DINO/d_ir.sprut (charof, intof, floatof): New nodes.

	* DINO/d_func.c (print_ch, get_char_code): Add processing `\a'.

	* DINO/d_eval.c (evaluate): Add evaluating charof, intof, floatof.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	charof, intof, floatof.

	* DINO/d_run.sprut (try_heap_free): Return TRUE if heap piece has
	been freed.
	(heap_pop): Changed saved_cstack for current processor if the
	stack has been popped.
	(pack_vector_if_possible): Set eltype when els_number == 0.

	* DINO/d_conv.c (to_vect_string_conversion): Switch off GC
	temporally.

	* Dino/Makefile.in: Fix typo.

	* DINO/dino.tst.in: Add tests for {char, int, float} (..).  Modify
	output for system error `result too large'.

	* DINO/dino.sgml.in: Add descriptions of {char, int, float} (..).

	* DINO/dino-5.html, DINO/dino-8.html, DINO/dino-9.html,
	DINO/dino.dvi, DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (rcount_call): Rename it into gmatch.

        * DINO/d_func.c (rcount_call): Rename it into gmatch.  Return
	vector instead of the count.

        * DINO/d_ir.sprut (RCOUNT_NAME, rcount_decl): Rename them into
	GMATCH_NAME, gmatch_decl.

	* DINO/d_run.sprut (temp_vlobj2): New global variable.
	(initiate_heap): Create temp_vlobj2.
	(finish_heap): Delete temp_vlobj2.

	* DINO/dino.tst.in: Test gmatch instead of rcount.

	* DINO/dino.sgml.in: Add description of function gmatch and
	remove rcount.

	* DINO/dino-4.html, DINO/dino-8.html DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (getf_call, fgetf_call): New prototypes.

	* DINO/d_func.c (general_getln_call): rename it onto
	general_get_ln_file_call.  Add new parameters to process [f]getf.
	(getf_call, fgetf_call): New functions.
	(getln_call, fgetln_call): Use general_get_ln_file_call.

	* DINO/d_ir.sprut (GETF_NAME, FGETF_NAME, getf_decl, fgetf_decl):
	New macros and variables.
	(decls_table): Add entries for getf fgtef.

	* DINO/dino.tst.in: Add tests for getf and fgetf.

	* DINO/dino.sgml.in: Add description of functions getf and
	fgetf.

	* DINO/dino-4.html, DINO/dino-8.htmlM DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (HAVE_SETITIMER): Set up the default value.

	* DINO/d_dino.c (exception_action): Use HAVE_SETITIMER value.

	* DINO/d_eval.c (find_context_by_scope): Use
	current_cached_container_tick.
	(evaluate_program): Use HAVE_SETITIMER value.
	(profile_compare_function): Ditto.
	(print_profile): Ditto.  Print gc time when HAVE_SETITIMER==0.

	* DINO/d_ir.sprut (block): New field cached_container_tick.

	* DINO/d_run.sprut (current_cached_container_tick, gc_ticker): New
	global variables.
	(initiate_heap): Initialize the variables.
	(clear_caches): Remove it.
	(gc): Modify current_cached_container_tick instead of calling
	clear_caches.  Switch on/off gc_ticker.
	(heap_push): Modify current_cached_container_tick.
	(activate_given_process): Modify current_cached_container_tick
	instead of calling clear_caches.

2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (print_profile): Print GC time too.

	* DINO/d_run.sprut (in_gc_p, gc_interrupts_number): New global
	variables.
	(initiate_heap): Initiate them.
	(gc): Set up and clear in_gc_p.
	(profile_interrupt): Check that we are in GC.

2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_extern.sprut (create_pack_vector): New function prototype
	and member in struct spi.
	(create_pack_vector): New function.

	* DINO/d_run.sprut (compact_heap): Use new_place for looking for
	object in temp refs.
	(create_pack_vector): New function.
	(create_empty_string, create_string): Use create_pack_vector.
	(external_address): Insert an external variable address in
	external_vars only once.

	* DINO/d_conv.c (to_vect_string_conversion): Use create_string.

	* DINO/d_eval.c (execute_concat_op): Use create_pack_vector and
	create_unpack_vector.
	(evaluate): Use create_pack_vector.  Set up the correct context
	for func and class.

	* DINO/d_func.c (to_lower_upper): Create the result string first
	before copying into it.
	(regex_node): New global structure.
	(regex_tab, regex_os, regex_vlo): New global variables.
	(regex_node_hash, regex_node_eq, regex_node_eq,
	initiate_regex_tab, finish_regex_tab): New functions.
	(match_call): Use find_regex and create_pack_vector.  Place pmatch
	in temp_vlobj.  Don't call regfree.
	(rcount_call): Use find_regex.  Don't call regfree.
	(generall_sub_call): Use find_regex and create_pack_vector.  Don't
	call regfree.
	(split_call): Ditto.
	(subv_call): Use create_pack_vector.
	(getgroups_call, readdir_call): Ditto.
	(mode_finish): Create the string before set mode of ctop.
	(initiate_funcs): Call initiate_regex_tab.
	(finish_funcs): New function.

	* DINO/dino.tst.in: Correct test results for the 66th test.

	* DINO/dino.sgml.in: Fix typo in regex syntax.

	* DINO/{dino-8.html, dino.dvi, dino.info*, dino.ps, dino.txt}:
	Update.

2001-07-06  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (heap_object_size): Add processing hideblock.

2001-06-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * AMMUNITION/IEEE.h (MAX_SINGLE_2_STRING_LENGTH,
	MAX_DOUBLE_2_STRING_LENGTH, MAX_QUAD_2_STRING_LENGTH,
	MAX_SINGLE_4_STRING_LENGTH, MAX_DOUBLE_4_STRING_LENGTH,
	MAX_QUAD_4_STRING_LENGTH, MAX_SINGLE_8_STRING_LENGTH,
	MAX_DOUBLE_8_STRING_LENGTH, MAX_QUAD_8_STRING_LENGTH,
	MAX_SINGLE_10_STRING_LENGTH, MAX_DOUBLE_10_STRING_LENGTH,
	MAX_QUAD_10_STRING_LENGTH, MAX_SINGLE_16_STRING_LENGTH,
	MAX_DOUBLE_16_STRING_LENGTH, MAX_QUAD_16_STRING_LENGTH): New
	macros.
	(IEEE_single_to_binary_string, IEEE_double_to_binary_string,
	IEEE_quad_to_binary_string, IEEE_single_from_binary_string,
	IEEE_double_from_binary_string, IEEE_quad_from_binary_string): New
	function prototypes.
	(to_binary_string, from_binary_string): New C++ functions.

        * AMMUNITION/IEEE.c (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single_to_binary_string,
	IEEE_double_to_binary_string, IEEE_quad_to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single_from_binary_string, IEEE_double_from_binary_string,
	IEEE_quad_from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.

        * AMMUNITION/IEEE.cpp (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single::to_binary_string,
	IEEE_double::to_binary_string, IEEE_quad::to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single::from_binary_string, IEEE_double::from_binary_string,
	IEEE_quad::from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.

	* AMMUNITION/IEEE.tst.in: Add the new macros and test the new
	external functions.

	* AMMUNITION/IEEE++.tst.in: Ditto.

	* AMMUNITION/ammunition.sgml.in: Add description of the new macros
	and the external functions.

	* AMMUNITION/ammunition++.sgml.in: Ditto.

	* AMMUNITION/{ammunition.info*, ammunition.txt, ammunition.ps,
	ammunition.dvi, ammunition-11.html}: Update.

	* AMMUNITION/{ammunition++.info*, ammunition++.txt,
	ammunition++.ps, ammunition++.dvi, ammunition++-11.html}: Ditto.

	* AMMUNITION/ammunition++.info-4: New file.

	* DINO/ieee.d (opvalue): New exception class.
	(ignore_excepts): New variable.
	(process_except): Use it.
	(to_binary_string, from_binary_string):  New functions.

	* DINO/ieee_int.c (ieee_single_to_binary_string,
	ieee_double_to_binary_string, ieee_quad_to_binary_string,
	ieee_single_from_binary_string, ieee_double_from_binary_string,
	ieee_quad_from_binary_string): New functions.
	(ieee_address): Add their addresses.

	* DINO/ieee.tst.in (453): Test new functions and ignoring the
	excepts.

2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SHILKA/yacc.y (make_lower_case_string): New function.  Use it
	for creation of keywords when -case.

	* SHILKA/shilka.tst.in: Add Novikov's test.

2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/arithm.h (unsigned_integer_from_based_string): Fix
	typo.

	* DINO/mpi.d (mpi_ignore_overflow): New variable.
	(check_overflow): Make it private.  Do not generate excpetion if
	mpi_ignore_overflow is set up.
	(unsigned_add, unsigned_subtract, unsigned_multiply,
	unsigned_divide, unsigned_remainder, unsigned_shift_right,
	unsigned_shift_left, unsigned_or, unsigned_and, unsigned_not,
	unsigned_eq, unsigned_ne, unsigned_gt, unsigned_lt, unsigned_ge,
	unsigned_le, unsigned_change_size, unsigned_to_based_string,
	unsigned_to_string, unsigned_from_based_string,
	unsigned_from_string): New functions.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder,
	mpi_unsigned_shift_right, mpi_unsigned_shift_left,
	mpi_unsigned_or, mpi_unsigned_and, mpi_unsigned_not,
	mpi_unsigned_eq, mpi_unsigned_ne, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le,
	mpi_unsigned_change_size, mpi_unsigned_to_based_string,
	mpi_unsigned_from_based_string): New external functions.

	* DINO/mpi.c (arithm_op): New function.
	(mpi_add, mpi_subtract, mpi_multiply, mpi_divide, mpi_remainder):
	Use it.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder): New functions.
	(mpi_par_op): Set up size of the result mpi.
	(shift): New function.
	(mpi_shift_right, mpi_shift_left): Use it.
	(mpi_unsigned_shift_right, mpi_unsigned_shift_left): New
	functions.
	(logical): New function.
	(mpi_or, mpi_and): Use it.
	(mpi_unsigned_or, mpi_unsigned_and): New functions.
	(not): New function.
	(mpi_not): Use it.
	(mpi_unsigned_not): New function.
	(cmp): New function.
	(mpi_eq, mpi_new, mpi_gt, mpi_lt, mpi_ge, mpi_le): Use it.
	(mpi_unsigned_eq, mpi_unsigned_new, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le): New functions.
	(change_size): New function.
	(mpi_change_size): Use it.
	(mpi_unsigned_change_size): New function.
	(to_based_string): New function.
	(mpi_to_based_string): Use it.
	(mpi_unsigned_to_based_string): New function.
	(from_based_string): New function.
	(mpi_from_based_string): Use it.
	(mpi_unsigned_from_based_string): New function.
	(mpi_address): Add new exported functions.

	* DINO/dino.tst.in: Expand test for mpi.

	* DINO/dino.sgml.in: Add comment for match.

	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.ps, DINO/dino.txt: Update.

2001-06-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (rcount_call): New prototype.

	* d_eval.c (evaluate): Create objects before setting mode.

	* d_func.c (rcount_call): New function.

	* d_run.sprut (create_string): Call create_empty_string with
	bigger min_length.

	* d_ir.sprut (rcount): Add new function (macros, table entry
	etc.).

	* dino.tst.in: Add tests for rcount.

	* dino.sgml.in: Add documentation of rcount.

	* dino.html, dino-4.html, dino-8.html, dino.dvi, dino.info*,
	dino.ps, dino.txt: Update.

2001-06-21  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* mpi.c (mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.  Use
	integer_to_based_string and integer_from_based_string.

	* mpi.d (mpi_except): Add mpi_base.
	(mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.
	(to_based_string, from_based_string): New functions.
	(to_string, from_string): Use them.

2001-06-20  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* arithm.c, arithm.cpp, arithm.h: Add new functions
	unsigned_integer_to_based_string, integer_to_based_string,
	unsigned_integer_from_base_string, integer_from_based_string,
	to_based_string, from_based_string, to_based_str, from_based_str.
	(integer_from_string, unsigned_integer_from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	integer_to_string, unsigned_integer_to_string): Modify them.
	(signed_integer::from_string, unsigned_integer::from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	signed_integer::to_string, unsigned_integer::to_string): Modify
	them.

        * ammunition.sgml.in, ammunition.sgml.in: The new functions
	documentation.

	* ammunition.txt, ammunition.ps, ammunition.info*, ammunition.dvi,
	ammunition-10.html, ammunition++.txt, ammunition++.ps,
	ammunition++.info*, ammunition++.dvi, ammunition++-10.html:
	Update.

2001-06-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* sgml-txt: Fix bug with itemize inside enum.

	* dino.sgml.in: Fix indentation for itemize.

	* dino-{468}.html, dino.dvi, dino-info*, dino.ps, dino.txt:
	Update.

2001-06-05  Dave Bodenstab  <imdave@mcs.net>

	* DINO/compare.tst: Permit to use compiled code for TCL tests.

2001-05-31  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdino): Fix different build directory problem.

	* yacc.exe: New file.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/Makefile.in DINO/Makefile.in MSTA/Makefile.in
	NONA/Makefile.in OKA/Makefile.in SHILKA/Makefile.in
	SPRUT/Makefile.in: Change generated documenation if it is only
	obsolete.

	* Makefile.in AMMUNITION/Makefile.in DINO/Makefile.in
	MSTA/Makefile.in NONA/Makefile.in OKA/Makefile.in
	SHILKA/Makefile.in SPRUT/Makefile.in: Generation doc files from
	any build directory.

	* REGEX/Makefile.in REGEX/doc/Makefile.in REGEX/test/Makefile.in:
	Removing some unnecessary entries.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.html cocom.dvi cocom.txt cocom.ps cocom.info
	AMMUNITION/ammunition*.html AMMUNITION/ammunition.info*
	AMMUNITION/ammunition.txt AMMUNITION/ammunition.dvi
	AMMUNITION/ammunition.ps AMMUNITIONammunition++*.html
	AMMUNITIONammunition++.info* AMMUNITIONammunition++.txt
	AMMUNITIONammunition++.dvi AMMUNITIONammunition++.ps
	DINO/dino*.html DINO/dino.info* DINO/dino.txt DINO/dino.dvi
	DINO/dino.ps MSTA/msta*.html MSTA/msta.info* MSTA/msta.txt
	MSTA/msta.dvi MSTA/msta.ps NONA/nona*.html NONA/nona.info*
	NONA/nona.txt NONA/nona.dvi NONA/nona.ps OKA/oka*.html
	OKA/oka.info* OKA/oka.txt OKA/oka.dvi OKA/oka.ps
	SHILKA/shilka*.html SHILKA/shilka.info* SHILKA/shilka.txt
	SHILKA/shilka.dvi SHILKA/dino.ps SPRUT/sprut*.html
	SPRUT/sprut.info* SPRUT/sprut.txt SPRUT/sprut.dvi SPRUT/sprut.ps:
	Add generated documentation files.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Initial revision of cocom and dino.
