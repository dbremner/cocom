%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: /home/vmakarov/cvs/cocom/AMMUNITION/ammunition.dvi
%%Pages: 44
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/vmakarov/cvs/cocom/AMMUNITION/ammunition.ps
%+ /home/vmakarov/cvs/cocom/AMMUNITION/ammunition.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.01.05:1145
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600
(/home/vmakarov/cvs/cocom/AMMUNITION/ammunition.dvi)
@start
%DVIPSBitmapFont: Fa cmsy10 10 1
/Fa 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A> 15
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10 1
/Fb 1 63 df<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01
FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1F
F0EE07FCEE01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7
FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC0
4848CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270323279AD41> 62
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc ectt0900 9 73
/Fc 73 125 df<00101320007C13F838FE01FCAAEAFC00007C13F8A900381370161778AE
27> 34 D<90381C01C090383E03E0A7EB7E07017C13C0A3007FB512FEB7FCA36C14FE39
00F80F80A50001131F01F01300A6007FB512FEB7FCA36C14FE3903E03E00A30007137EEB
C07CA738038038202E7DAD27> I<000F1470486C13F8383FC001EA7FE0140315F038FFF0
0700F914E0A2140F15C0A2141F00FF1480387FE03F1500A26C485A381F807E380F00FEC7
5AA213015CA213035C13075CA2130F5C131F5CA2133F91C7FCA24913F090387E01F89038
FE03FC9038FC07FEA212019038F80FFF0003149F13F0A2120713E0A2000F14FF9038C007
FE121F1380EC03FC000FEB01F86CC712F0203A7DB327> 37 D<131FEB7FC0497E5A80EA
03F1EBE1F8EA07E013C0A513C15C9039C3F1FF80D9E3E113C03803E7E3EBEFC101FF1480
913881F800EC01F0EA01FEEBFC0301F85B00031307D807FC5B120F381FFE0FD83FBE5BEB
3F1FD87E1F90C7FC149F38FC0FBF14FE1307ECFC020103EB0F80EB01F8A238FE03FC387E
07FE397F1FFF9F6CB61200149F6CEB0FFE390FFC03FC3903F000F822307EAE27> I<120F
EA3FC013E0EA7FF0A213F8A2123FA2120F1200A2120113F0A2120313E01207EA0FC0123F
EA7F80EAFF005A12F812700D1973AD27> I<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE
00485A5B1203485A5B485AA2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C
7E7F6C7E12017F6C7EEB7F80EB3FC0EB1FE0130F1303EB01C0133A73B327> I<127012F8
12FE7E6C7E6C7EEA0FE06C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0AC
EB0FC0A4EB1F80A3EB3F00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F8
1270133A7AB327> I<130F497EA60078EB81E000FEEB87F000FF138FEBDFBF6CB512E06C
14C0000F1400000313FCC613F0A2000313FC000F13FF003F14C04814E039FFDFBFF0EB1F
8F00FE13870078EB81E00000EB8000A66DC7FC1C207BA627> I<EB01C0497EAD003FB512
FCB7FCA4390003E000AE6D5A20227DA727> I<120FEA3FC013E0EA7FF0A213F8A2123FA2
120F120113F01203EA07E0121FEA7FC0EAFF8013005A12700D14738927> I<007FB51280
B612C0A36C14801A057A9227> I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927
> I<EB07E0EB3FFC497E90B5FC4814803903FC3FC03907F00FE0390FE007F0EBC003391F
8001F8A248C712FCA2003E147C007E147EA3007C143E00FC143FAC007E147EA46C14FCA2
EB8001001F14F8EBC003000F14F0EBE0073907F00FE03903FC3FC06CB512806C14006D5A
6D5AEB07E020307DAE27> 48 D<130E131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F12
00B3AA003FB512805A15C01580A21A2F79AE27> I<EB3FE03801FFF84813FE000FEBFF80
4814C0393FE07FE0EB800F397F0007F0007EEB03F800FE13015A6C14FC1400A3127CC8FC
A2140115F8A2140315F01407EC0FE0EC1FC0143FEC7F80ECFF00495A495A495A495A495A
495A495A01FEC7FC485AD807F81378484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE
27> I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCAC121EEA7F80A2EAFFC0A4EA7F80
A2EA1E000A20729F27> 58 D<120FEA3FC0A2EA7FE0A4EA3FC0A2EA0F00C7FCAC120FEA
3FC013E0EA7FF0A213F8A2123FA2120F120113F01203EA07E0121FEA7FC0EAFF8013005A
12700D2A739F27> I<153815FC14011407EC0FF8EC3FE0EC7FC0903801FF00495AEB0FF8
495AEB7FC0495AD803FEC7FC485AEA1FF0485AEAFF8090C8FCA27FEA3FE06C7EEA07FC6C
7EC66C7E6D7EEB1FF06D7EEB03FE6D7E9038007FC0EC3FE0EC0FF8EC07FC140114001538
1E267CA927> I<003FB512FCB7FCA4C9FCA8B7FCA4003F14FC20127D9F27> I<127012FC
7E6C7E6C7EEA1FF06C7EEA03FE6C7E38007FC06D7EEB0FF86D7EEB01FF6D1380EC3FE0EC
1FF0EC07FC1403A21407EC1FF0EC3FE0ECFF80491300EB07FC495AEB3FE0495A4848C7FC
485AEA0FF8485AEA7FC0485A48C8FC5A12701E267CA927> I<EB03F0497EA2497EA4143C
EB1F3EA5EB3F3FA3EB3E1FA2017E7FA4496C7EA548486C7EA390B5FCA24880A3EBF003A2
48486C7EA4000F803A7FFC0FFF8000FF15C06D5A497E007F1580222F7EAE27> 65
D<007FB5FCB612C08115F87E3907E003FCEC00FE157E157F81A6157EA25D1403EC0FF890
B55A15C015F081819038E000FE157FED3F80151FA2ED0FC0A6151F1680153FED7F004A5A
007FB55AB65A5D15E06C1480222E7FAD27> I<903803F80E90381FFE1F90383FFFBF90B6
FC5A3803FE0F3807F803497E48487E485A49137FA248C7123FA25A127E151E150012FE5A
AA7E127EA2151E007F143F7EA26C7E157F6D137E6C6C13FE3907F001FCEBF8033903FE0F
F86CB512F06C14E0013F13C06D1300EB03F820307DAE27> I<387FFFFC14FFB612C06C80
813907E00FF81407EC01FC6E7EA2157E157F811680151FA316C0150FABED1F80A3153F16
00A25D15FEA24A5A4A5A140F007FB55A5DB65A6C91C7FC14FC222E7FAD27> I<007FB612
80B712C0A37E3907E0000FA6ED078092C7FCA4EC07804A7EA390B5FCA5EBE00FA36E5A91
C8FCA4ED03C0ED07E0A7007FB6FCB7FCA36C15C0232E7FAD27> I<007FB61280B712C0A3
7E3907E0000FA6ED078092C7FCA4EC07804A7EA390B5FCA5EBE00FA36E5A91C8FCAC387F
FF80B57EA36C5B222E7EAD27> I<903807F03890381FFC7C90387FFFFC90B5FC5A3803FC
1F3807F00F380FE007EBC003001F13011380123F90C7FCA2127EA2157892C7FC5AA8EC1F
FF4A1380A3007E6D1300EC00FCA36C1301A21380121FEBC003120FEBE0073807F00F3803
FC1F6CB5FC7EEB7FFE90381FFC78D907F0C7FC21307DAE27> I<3A7FFE07FFE0B54813F0
A36C486C13E03A07E0007E00AF90B512FEA59038E0007EB03A7FFE07FFE0B54813F0A36C
486C13E0242E7FAD27> I<007FB512E0B612F0A36C14E039001F8000B3B2007FB512E0B6
12F0A36C14E01C2E7BAD27> I<387FFFC080B5FC7E5CD803F0C8FCB3AAED0780ED0FC0A7
007FB6FCA2B7FC7E1680222E7FAD27> 76 D<D87FE0EB7FE0486CEBFFF0A26D5A007F15
E0000F150001B813DFEBBC03A3EBBE07019E139FA3EB9F0FA2018F131FA2149FA2EB879E
A4EB839C14FCA3EB81F8A2EB80F01400AAD87FF0EBFFE0486C4813F0A36C486C13E0242E
7FAD27> I<3A7FF003FFE0486C4813F0A213FC007F6D13E000079038003E0013DEA313CF
A3148013C714C0A213C314E0A213C114F0A3EBC0F8A31478147CA2143C143EA2141E141F
140FA3EC07BEA3EC03FEEA7FFCEAFFFE1401A26C486C5A242E7FAD27> I<EBFFFC0007EB
FF80001F14E0A24814F0EBC00F397F8007F8EB0003007E1301A348EB00FCB3A76C130100
7E14F8A3007F1303EB8007393FE01FF090B5FC6C14E0A200071480C6EBFC001E307CAE27
> I<007FB5FCB612E081816C803907E003FEEC00FF81ED3F80151F16C0150FA6151F1680
153FED7F005DEC03FE90B55A5D5D5D92C7FC01E0C8FCADEA7FFEB5FCA36C5A222E7FAD27
> I<EBFFFC0007EBFF80001F14E0A24814F0EBE01F397F8007F8EB0003007E1301A300FE
14FC481300B3A4EB07E0A200FE13F1007E14F8EB03F9A2387F01FF1381D83FE013F090B5
FC6C14E0A200071480C6FC9038001FC0A2EC0FE0A2EC07F0A2EC03F8A2EC01F01E397CAE
27> I<387FFFF0B512FE6E7E816C803907E01FF014076E7E1401811400A514015D14034A
5A141F90B55A5D5DA281EBE01F6E7E14076E7EA816F0EDF1F8A4397FFE01FBB5EBFFF080
16E06C48EB7FC0C8EA1F00252F7FAD27> I<90387FC0E03901FFF1F0000713FF5A5AEA3F
E0EB801F387F000F007E130712FE5A1403A3EC01E06C90C7FC127E127FEA3FC013F86CB4
7E6C13F86C13FE6CEBFF80C614C0010F13E0010013F0140FEC07F81403140115FC140012
7812FCA46CEB01F8A26C130390388007F09038F01FE090B5FC15C0150000F85B38701FF8
1E307CAE27> I<007FB61280B712C0A439FC03F00FA60078EC0780000091C7FCB3AB90B5
12C04880A36C5C222E7EAD27> I<3A7FFE01FFF8B54813FCA36C486C13F83A07E0001F80
B3AB6D133F00031500A26D5B0001147E6D13FE6C6C485A90387F87F814FF6D5B010F13C0
6D5BD901FEC7FC262F80AD27> I<3A7FFC03FFE06D5A00FF15F0007F15E0497E3A07E000
7E00A46C6C5BA4EBF80100015CA46C6C485AA490387E07E0A56D485AA4011F5B149FA301
0F90C7FCA5EB07FEA46D5AA26D5A242F7FAD27> I<393FFC1FFE387FFE3F815D383FFC1F
3903F00FE001F85B1201EBFC1F00005CEBFE3F017E90C7FCEB7F7FEB3F7E14FE6D5AA26D
5AA26D5AA21303130780130F80131F80EB3F7E147F497E017E7F141F01FC7F140FD801F8
7F14071203496C7E120701E07F3A7FFC0FFF8000FF15C06D5A497E007F1580222E7EAD27
> 88 D<3A7FFC03FFE06D5A00FF15F0007F15E0497E3A07F000FE0000035CEBF8010001
5CA2EBFC0300005CEBFE07017E5BA26D485AA290381F9F80A3010F90C7FCA2EB07FEA26D
5AA26D5AAF90381FFF80497FA36D5B242E7FAD27> I<003FB512FE4814FFA4007EC712FE
EC01FCA2EC03F8EC07F0A2003CEB0FE0C7EA1FC0A2EC3F80EC7F00A214FE5C1301495A5C
1307495A5C131F495A91C7FC5B13FEA2485A4848131E153F485A485AA2485A485AA248C7
FCB7FCA46C14FE202E7DAD27> I<387FFFF0B512F8A314F000FCC7FCB3B3ACB512F014F8
A36C13F0153A71B327> I<387FFFF0B512F8A37EEA0001B3B3ACEA7FFFB5FCA36C13F015
3A7EB327> 93 D<007FB512F8B612FCA46C14F81E067C7E27> 95
D<137013F812031207EA0FF0EA1FE01380EA3F00123E127E127CA212FC5AA2EAFF8013E0
A213F0A2127FA2EA3FE0121FEA07800D1974B227> I<3801FFE0000713F84813FE486D7E
81EBC07FEC0FE0380F8007D802007FC71203A2EB07FF137F0003B5FC120F5A383FFC03EA
7FE0130012FE5AA46C1307007F130FEBC07F6CB612C06C15E07E000313F83A007FC03FC0
23207D9F27> I<EA7FE0487EA3127F1203A9EC7F809038F1FFE001F713F890B57E81ECC0
FF9138007F8001FCEB1FC049130F16E0491307A216F01503A615076D14E0A2150F6DEB1F
C06D133F6DEB7F809138C1FF00ECFFFE5D01F75B01F313E02601E07FC7FC242E80AD27>
I<EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E0903880008048C8FC
127EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14
E06C14C06C6C1300EB0FF81D207B9F27> I<EC1FF84A7EA3141F1400A9EB0FF0EB7FFC48
B5FC5A5A380FF81F381FE007383FC003EB8001EA7F00007E1300A212FE5AA67E007E1301
A2007F13037EEB8007381FE00F380FF03F6CB612E06C15F06C5B38007FF890391FE07FE0
242E7EAD27> I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003F8EBC0
01D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E
6C7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D9F27>
I<EC1FF0ECFFF84913FC4913FE5BEB0FF014C0011F137CEC8000A6007FB512F0B612F8A3
6C14F039001F8000B3A4003FB512C04814E0A36C14C01F2E7EAD27> I<153F90391FC0FF
80D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA6
6C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E0
15F84814FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C158000
7F143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027>
I<EA7FE0487EA3127F1203A9EC3FC09038F1FFF001F77F90B57E8114E0EC007F497F5B5B
A25BB03A7FFF83FFF8B500C713FCA36C018313F8262E80AD27> I<130F497E497EA46D5A
6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE
27> I<EA7FE07F12FF127FA21201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A
4A5A4A5A02FFC7FCEBF1FEEBF3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF007
6E7E6E7E816E7E157E3A7FFFC1FFF002C313F8B512E36C13C316F0252E80AD27> 107
D<387FFF80B57EA37EEA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD27> I<397F07
C01F3AFF9FF07FC09039FFF9FFE091B57E7E3A0FFC7FF1F89038F03FC001E0138001C013
00A3EB803EB03A7FF0FFC3FF486C01E3138001F913E701F813E36C4801C313002920819F
27> I<397FE03FC039FFF1FFF001F77F90B57E6C80000313E0EC007F497F5B5BA25BB03A
7FFF83FFF8B500C713FCA36C018313F82620809F27> I<EB1FE0EB7FF83801FFFE487F48
1480390FF03FC0391FC00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301
007E14F8A2007F1303393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B3800
7FF8EB1FE01E207C9F27> I<397FE07F8039FFF1FFE001F713F890B57E6C800003EBC0FF
9138007F8001FCEB1FC049130F16E0491307A216F01503A615076D14E0A2150F6DEB1FC0
6D133F6DEB7F809138C1FF00ECFFFE5D01F75B01F313E0D9F07FC7FC91C8FCAC387FFF80
B57EA36C5B2431809F27> I<90380FF03C90383FFE7E90B5FC000314FE5A380FFC1F381F
E007EBC003383F800148C7FC127EA200FE147E5AA67E007E14FEA2007F1301EA3F80EBC0
03381FE007380FF81F6CB5FC7E6C147E38007FFCEB0FF090C7FCAC91381FFFF8A24A13FC
6E13F8A226317E9F27> I<397FFC03FC39FFFE0FFF023F13804A13C0007F90B5FC39007F
FE1F14F89138F00F809138E002004AC7FC5CA291C8FCA2137EAD007FB57EB67EA36C5C22
207E9F27> I<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C90C7FC
EA7F8013FC383FFFF06C13FC000713FF00011480D8000F13C09038003FE014070078EB03
F000FC1301A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C207B9F
27> I<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE6D13FC
1483ECFFF86D13F06D13E0010313C0010013001F297EA827> I<397FE007FE486C487EA3
007F7F0003EB003FB25DA24A5AEBFC076CB612F86C15FCA2013F13BF90390FFC1FF82620
809F27> I<3A7FFC0FFF80486C4813C0A36C486C13803A07C000F800EBE00100035CA2EB
F00300015CA2EBF80700005CA390387C0F80A36D48C7FCA3EB3F3FEB1F3EA214FE6D5AA3
6D5AA26D5A22207E9F27> I<3A7FFE07FFE000FF15F06D5A497E007F15E03A0F80001F00
A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA200011478A301F713F8A2EBFF0F
6C5CA3EBFE0790387C03E024207F9F27> I<393FFC1FFF486C5A168016006C487E3901F8
07E06C6C485A4A5A017E90C7FC6D5AEB1F7E5C6D5A13076D5A5C80497E130F497E143EEB
3E3FEB7E1F90387C0F8001F87F00016D7E3803F0033A7FFE1FFF80A2B54813C06C486C13
80A222207E9F27> I<3A7FFC0FFF80486C4813C0A36C486C13803A07E000F80000031301
5D13F00001130301F85B1200A26D485A137CA290387E0F80133EA2011F90C7FC5CA2130F
149E14BE130714FC1303A25C1301A25CA213035CA213075C1208EA3E0F007F5B131FD87E
7FC8FCEA7FFE6C5A5B6C5AEA07C022317E9F27> I<001FB512FE4814FFA490380001FEEC
03FCEC07F8EC0FF0001EEB1FE0C7EA3FC0EC7F80ECFF00495A495A495AEB1FE0495A495A
49C7FC485A4848131E4848133F485A485A485A485AB7FCA46C14FE20207E9F27> I<1278
12FCB3B3B3A21278063A70B327> 124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd ecbx1000 10 72
/Fd 72 123 df<913A03FF8007FE027F9039F07FFF800103B500FDB512E0010F903A00FF
FE0FF0D93FF8ECF81F90267FE0019038F03FF849485A4816E014804816C00200ED1FF081
F007C06F91C7FCA8B912E0A4000390C701C0C7FCB3ABB5D8FC3FEBFF80A43D3A7EB938>
27 D<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF8049485A
5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390C7FCB3AB
B5D8FC3F13FFA4303A7EB935> I<913903FFC7C0027F13FF0103B6FC010F130090383FF8
0190387FE003EBFFC05A14805A4A7EA281A9B8FCA4000390C7FCB3ABB5D8FC3F13FFA430
3A7EB935> I<EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3127FA2123FEA0F9CEA001C133C
1338A31378137013F0EA01E0A2EA03C0EA0780EA0F005A121C12180E1D79B91B> 39
D<141C143C14F8EB01F0EB03E01307EB0FC0EB1F8014005B137E13FE5B12015B1203A248
5AA2120F5B121FA25B123FA4485AA512FFB1127FA56C7EA4121F7FA2120F7F1207A26C7E
A212017F12007F137E7F7F1480EB0FC0EB07E01303EB01F0EB00F8143C141C165377BD25
> I<12E07E127C7E7E7F6C7E6C7E12037F6C7E7F12007F137E137FA2EB3F80A214C0131F
14E0A2130F14F0A4EB07F8A514FCB114F8A5EB0FF0A414E0131FA214C0133F1480A2EB7F
00A2137E13FE5B12015B485A5B1207485A485A90C7FC123E5A12F05A16537BBD25> I<EB
01F0497EA2497E6D5AA3003CEC0780007EEC0FC000FFEC1FE09038C1F07F01E113FFEBF1
F1267FF9F313C06CB61280000FECFE00000114F0D8003F1380D907FCC7FC90383FFF8048
B512F0000F14FE003FECFF80267FF9F313C026FFF1F113E0EBE1F001C1137F903803F81F
007EEC0FC0003CEC0780000091C7FCA3497E6D5AA26D5A23257ABD30> I<EA0F80EA3FE0
EA7FF0A2EAFFF8A213FCA3127FA2123FEA0F9CEA001C133C1338A31378137013F0EA01E0
A2EA03C0EA0780EA0F005A121C12180E1D798C1B> 44 D<B61280A819087F9620> I<EA
0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B> I<49B4FC011F13
F0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC04848EB1FE0A2001F15F0A248
48EB0FF8A3007F15FCA400FF15FEB3007F15FCA5003F15F86D131FA2001F15F0A26C6CEB
3FE0000715C06C6CEB7F806C6CEBFF003900FF83FE6DB45A011F13F0010190C7FC27377C
B530> 48 D<141E143E14FE1307137FB5FCA3138FEA000FB3B3A5007FB61280A4213679
B530> I<EB0FFE90387FFFC048B512F0000714FC390FE03FFF261F800F1380263F000313
C0D87F8014E0EBE00100FF6D13F07FA2ED7FF8A46C5A6C5A0006C7FCC8FCEDFFF0A216E0
5C16C04A138016004A5A4A5AEC1FF05D4A5A4AC7FC14FE495AD903F01378495A495A495A
49C712F8017C14F05B49130148B6FC5A5A5A5A5A4815E0B7FCA425367BB530> I<EB03FF
011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF86D14F0487E
A66C4814E06C5A6C485AC714C04A138016004A5A4A5AEC3FF090380FFFC05D15F0903800
07FE913801FF806E13C016E0ED7FF016F8ED3FFCA216FEEA1FC0487E487E487EA416FCA2
49137F007F15F801C0EBFFF06C5A6C6C4813E0260FFC0713806CB61200000114FC6C6C13
F0010790C7FC27377CB530> I<ED07C0150FA2151F153F157F15FF5CA25C5C5C5C143E14
3C5C5C1301495A5C495A495A5B133E5B13785B485A1203485A5B48C7FC121E5A127C5AB8
1280A4C70001EBC000AA0103B61280A429367DB530> I<001C15C0D81F80130701F8137F
90B61280A216005D5D15F05D15804AC7FC14F090C9FCA7EB03FE90381FFFE0017F13F890
38FE07FC9038F003FFD9C0011380496C13C090C7FC000E15E0C8127F16F0A216F8A3121F
EA3FC0487E12FF7FA316F05B15FFD87F8014E0007EC713C0003E5B003F4913806C6C4813
00390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25377BB530> I<EC0FF8ECFFFE
0103EBFF8090390FF80FC090393FE003E090397F8001F09038FF000F48EC1FF84848133F
485A120F5B121FA2003FEC1FF0ED0FE0484890C7FCA31408EC7FF039FFF1FFFC01F313FF
D9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA4127FA5123F16FC
A26C7E16F8000F143F6D14F0000715E06C6CEB7FC03A01FF81FF806C90B51200013F13FC
010F13F00101138027377CB530> I<123C123EEA3FE090B71280A41700485D5E5E5E5EA2
007CC7EA0FC000784A5A4BC7FC00F8147E485C5D14014A5AC7485A4A5AA24A5A143F4AC8
FCA214FEA213015C1303A21307A2130F5CA2131FA5133FA96D5A6D5A6D5A29397BB730>
I<49B47E010F13F0013F13FC9038FE01FF3A01F8007F804848EB3FC04848EB1FE0150F48
4814F01507121FA27F7F7F6D130F01FF14E014C09138E01FC06CEBF83F9138FE7F806C90
38FFFE005D6C14F06C14FC6C14FF6D14806D14C090B612E0D803FD14F02607F07F13F848
487E261FC00F13FC383F8003007F010013FE90C7127F151F00FE140715031501A21500A2
16FC7E6C14016D14F86C6C13036DEB07F06C6CEB0FE0D80FFEEB7FC00003B61200C614FC
013F13F00103138027377CB530> I<EB03FF011F13E0017F13F83901FF01FE48486C7E48
48EB7F80484814C0001FEC3FE0485AED1FF0127F16F8A212FF16FCA416FEA5007F143FA3
123F157F6C7E000F14FF6C6C5A3903FE03DF6CB5129F6C6C131FD91FFC13FCEB00201400
A3D80FE0EB3FF8487E486C14F0A216E0157F16C0EDFF80495A6C4848130090388007FE39
0FE01FF86CB55A6C14C0C691C7FCEB1FF027377CB530> I<ED03E04B7EA24B7EA34B7EA2
4B7EA34B7EA292B57EA34A8015F302038015E1A202078015C0020F80ED807FA2021F80ED
003F4A80023E131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC
010F824A147FA2011F8291C8123F4982013E151FA2017E82017C8101FE83B500F80107B6
1280A4413A7DB948> 65 D<B812C017FC17FF18C028007FF000037F04007F717E717E17
1F84A2717EA74D5AA260173F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF8002F0C713
F0EF3FF8717E717E717E19807113C0A319E0A719C0A25F4D138019005FEF7FFE4C485AB9
12F018C095C7FC17F03B397DB844> I<DB3FFCEB01C00203B5EAC003021FECF00791B6EA
FC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B4817
7F4849153F4890C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0
123FA27F001F1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A
5A6DB44A5A010701C0EB0FE06D01FCEBFF80010090B548C7FC021F14F8020314E0912600
3FFEC8FC3A3B7BB945> I<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE71
7E050313807113C0A27113E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC
183FA219F8187F19F0F0FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C0
95C7FC17FC178040397DB849> I<B912F0A426007FF8C7FCEF1FF8170717031701A21700
A21878A3043C137C183CA41800167CA216FC150391B5FCA4ECF8031500167CA2163C180F
A3181EA293C7FCA2183EA2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A3
38397DB83F> I<B912C0A43A007FF800039338007FE0171F170F1707A21703A21701A318
F0EE7800A41800A216F8A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FC
A434397DB83C> I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00
FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9
FC181F485A180F123F5B1807127FA24993C8FC12FFAB043FB61280A2127F7FDC0003EBC0
00123FA27F121FA26C7EA26C7F6C7F6C7F7ED97FF85C6D7E6DB45C010701C05B6D01FCEB
FF3F010090B5EAFE0F021FECF8030203ECE0009126003FFEC9FC413B7BB94B> I<B6D8FC
03B612F0A426007FF8C70001EBE000B3A391B8FCA402F8C71201B3A6B6D8FC03B612F0A4
44397DB84B> I<B612FCA439007FF800B3B3ADB612FCA41E397DB824> I<B600FC0103B5
12C0A426007FF8C8381FE00019804EC7FC18FEEF01F84D5A4D5A4D5AEF3F80057EC8FC5F
4C5A4C5AEE0FE0EE1F804CC9FC167E5EED03F84B7E4B7E4B7E4B7F5D02F9B57EDAFBF77F
DAFFE37F15C103807F4A487F4A6D7E4A133F707E707F8482707F707F8482717E717E8483
717F717F858385B600FC017FEBFFE0A443397DB84B> 75 D<B7FCA426007FF8C9FCB3AC
EF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FCA431397DB839> I<B500F804
03B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA201796D5DA201786D5DA26E6C5DA3
6E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5B
A26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2
705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE070054397DB85B> I<B500FC0203
B512F0A28080C66C6D90390003F0006F6E5A81017B7F13798101787F6E7E6E7E6E7F6E7F
A26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E06F13F06F13F88117FCEE7FFEEE
3FFF7013817013C17013E18218F17013F97013FDEF7FFF8383A28383838383187FA2183F
181F01FC160FB500FC150718031801A244397DB84B> I<EDFFF8020FEBFF80027F14F090
3A01FFC01FFC010790380007FFD91FFC010113C0D93FF06D6C7E49486E7E49486E7E4849
6E7E48834890C86C7EA248486F1380A248486F13C0A2003F18E0A348486F13F0A400FF18
F8AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C
5F6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107D9C01F90C7FC010190B512FC6D6C
14F0020F1480020001F8C8FC3D3B7BB948> I<B8FC17F017FEEFFF8028007FF8000F13C0
040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13
E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA438397DB841> I<EDFFF8020FEB
FF80027F14F0903A01FFE03FFC010790380007FFD91FFC010113C049486D7FD97FE0EC3F
F049486E7E488348496E7E4890C86C7EA248486F1380A2001F18C04981003F18E0A3007F
18F04981A300FF18F8AC007F18F0A36D5D003F18E0A36C6C4B13C0A2000FDA1FC014806C
6C90267FF0071300EDFFF86C903A81F07C0FFE6C903AC3C01E1FFC6CDA800F5BD97FE3EC
BFF0D93FF36DB45AD91FFF5D010701C091C7FC01019038F01FFC6D6CB500F01308020F6E
131C0200EBF9FC92260001FE133C9438FF80FC18FF8219F8A28319F0A27113E0A27113C0
711380711300EF01FC3E4A7BB948> I<B712FCEEFFE017FC17FF28007FF8000F13C00401
7F707F717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0
839139F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0
B600FC011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848> I<D907FF13
0E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F4848130349
1301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C
14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F030F13C01503
818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801F
F800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935> I<003FB91280A4D9
F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200781703A400F818E0
481701A4C892C7FCB3AE010FB7FCA43B387DB742> I<B600FC011FB512C0A426007FF8C8
381FC000725AB3B3181F013F94C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A6D
6DEB07F06D01F0EB1FE0DA7FFEEBFFC0021FB6C8FC02075C020014F0030F1380423A7DB8
49> I<B600F00103B512E0A4C601F0C83807F0006E5E017F5F6E150FA2013F5F6E151F01
1F94C7FC6E5D6D163E6F147E6D167CA26F14FC6D5E6F13016D5E6F13036D5E811707027F
5D6F130F023F5D6F131F021F92C8FC815F6E143EEE807E6E147CEEC0FC6E5C16E016E16E
5C16F36E5C16FF6F5BA36F5BA26F90C9FCA26F5AA36F5AA26F5AA26F5A433A7EB848> I<
007FB5D8F803B512F8A4C66C48C7D80FF0C7FC6D6C5D6D5E6F495A6D6D49C8FC7F6D6D13
7E6F5B6DEBF8016D5D6F485A6E6C485A023F130FDA1FFF5BEE9F806E01FFC9FC805E6E5B
6E5B80826F7E153F826F7F5D4B7F92B57EA2DA01F97FDA03F17F03F07F913807E07FDA0F
C07F021F6D7E4B7E4A486C7F027E8102FE6D7F4A7F49488149486D7F0107804A6E7E4948
8149486E7E013F81017F83B60107B61280A441397DB848> 88 D<B600F049B512E0A4C6
01FCC8380FF000017F705A6E4B5A6D6C4B5A6D7F4EC7FC6D6D147E6D7F606D6D495A6D7F
4D5A6D6D495A6E7E4D5A6E6C495A6E13804DC8FC6EEBC07E6E13E05F6EEBF1F86E13F9EE
FBF06EEBFFE0815F6F5B816F90C9FCB3A2021FB6FCA443397EB848> I<003FB712FEA491
3980007FFC01FCC7EAFFF801F05B01C015F0494913E090C75A4816C0007E4A13805D007C
16004B5A157F00785D4B5A5C5EC7485B5C5E5C4A5B93C7FC5C4A5A5D14FF495B5D5B495B
4B131E5B5D4990C7FC5B5C4948143E13FF5C485B48167E4A147C484914FC5A4A13014890
C7120348150F49143F4848EB01FFB8FCA42F397BB83A> I<007FB9FCBA1280A36C180039
05786A4A> 95 D<136013E0120313C0EA0780EA0F00121EA25A123812781270A312F05A
EAE7C0EAFFF013F8A213FCA3127FA2EA3FF8A2EA1FF0EA07C00E1D7AB91B> I<EB3FFE00
03B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FC
A2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF6D
5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA42E
> I<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013804AEB7FC0
0280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E133F6EEB7F
E06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C00390C7FC2F
3A7EB935> I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF8
121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C
6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A> I<
EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD807
FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B6C
6C4913C02701FF80FD13FE39007FFFF9011F13E1010113012F3A7DB935> I<903803FF80
011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003FEC
0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D14
F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C> I<
EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A2481381A2481301
6E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D> I<161FD907
FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F15CF49
90387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE48B512
F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F86C816C
815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495AD81FF0
EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530> I<13FFB5FCA412
077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05CA25CA2
91C7FCB3A3B5D8FC3F13FFA4303A7DB935> I<EA01F0EA07FC487EA2487EA56C5AA26C5A
EA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B> I<141FEC7FC0ECFFE0A2
4913F0A56D13E0A2EC7FC0EC1F0091C7FCA9EC0FF0EB0FFFA4EB007F143FB3B0121FEA3F
80EA7FC0EAFFE0EC7FE0A215C014FF6C481380903883FE006CB45A000F13F0000113801C
4B86BA1D> I<13FFB5FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7
FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F
82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932> I<13FFB5FCA412077EB3B3AC
B512FCA4163A7DB91B> I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90
B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D97F
FC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451> I<01FEEB7F
C000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E6D4814C05CA2
5CA291C7FCB3A3B5D8FC3F13FFA430257DA435> I<903801FFC0010F13F8017F13FFD9FF
807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9
007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7
FC011F13FC010113C029257DA430> I<9039FF01FF80B5000F13F0023F13FC9138FE07FF
DAF00113800003496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161F
A217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13
E0020390C7FC91C9FCACB512FCA42F357EA435> I<49B4EB0780010FEBE00F013FEBF81F
9039FFC07C3F0003EB803E3A07FE000F7F4848EB07FF121F497F123F497F127FA25B12FF
AA6C7EA36C7E5D6C7E000F5C6C6C5B6C6C133F6CEBC0FD39007FFFF1011F13C101011301
90C7FCAC037F13FEA42F357DA432> I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138
F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257E
A427> I<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC
15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038
007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000
F8140038E01FF81F257DA426> I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA300
0390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357E
B425> I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E
13FF90387FFFFC011F13F00103138030257DA435> I<B539F001FFF8A4000390C7EA1F00
161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07
010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E
5AA22D257EA432> I<B500F1B538803FFFA43D07FE000FF80003E06C6C010715C0820280
15076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF01E7F5B17C0DAF8
3E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF10107EDF9E002
FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E147C023C143C40
257EA445> I<B539F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B6D6C48
5A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E
903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F00016E7E
B590383FFFF8A42D257EA432> I<B539F001FFF8A4000390C7EA1F00161E6E133E6C153C
6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F0107
91C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C14
1E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA
1FFCEA07F02D357EA432> I<003FB612C0A3D9F0031380EB800749481300003E5C003C49
5A007C133F5D0078495A14FF5D495B5BC6485B92C7FC495A131F5C495A017FEB03C0EBFF
F014E04813C05AEC80074813005A49EB0F80485A003F141F4848133F9038F001FFB7FCA3
22257DA42A> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe ecbx1440 14.4 42
/Fe 42 122 df<EE7FFC031FB57E4AB612E0020715F8023F9038C00FFC913AFFFC0001FE
4901F0EB007F010701C0EB03FF4949497F4990C75A5B5C495A4D7F01FF6F5B5CA27190C7
FC715AEF00F895C8FCAA0407B512C0BAFCA5C601F8C7120F83B3B3A6B6D8F807B612C0A5
42547DD349> 28 D<EEFFFE031F9038FFCFC04AB7FC140F023FEBC0079139FFFC000F49
13F0010701C05B495B4990C7FC5B5C495A8313FF4A80B0BAFCA5C601F8C71207B3B3A7B6
D8F807B612C0A542547DD349> I<B712E0AB230B7F9F2C> 45 D<913803FF80023F13F8
49B6FC010715C04901017F903A3FFC007FF8D97FF0EB1FFC49486D7E48496D7E4A7F4817
804890C76C13C0A248486E13E0A2001F17F0A3003F17F8A249157FA2007F17FCA600FF17
FEB3A5007F17FCA6003F17F86D15FFA3001F17F0A3000F17E06D5C6C17C0A26C6D491380
6C17006E5B6C6D495A6D6C495AD93FFCEB7FF8903A0FFF01FFE06D90B55A010192C7FCD9
003F13F802031380374F7BCD42> 48 D<151E153E15FE1403140F147FEB07FF0003B5FC
B6FCA3EBF87FEAFC00C7FCB3B3B3A6007FB712FCA52E4E76CD42> I<EC1FFE49B512F001
0F14FC013FECFF804915E02701FF803F7F2703FC000713FCD807F001017F48486D7FD81F
806E138048C87E7013C0D87FE016E001F8806D16F000FF817F7013F8A56C5AA26C5A6C5A
EA0380C914F05EA218E05E18C05E18804C13005F4C5A4C5A5F4B5B4B5B4B5B94C7FCED0F
FC4B5A4B5AED7FC04B5A4A90C8FCEC03FC4A5A4A4814F84A5A4A5A4AC8FC02FEEC01F049
5A495A495A5CD90F80140349C8FC013E1507017FB7FC90B812E05A5A5A5A5A5A5AB9FC18
C0A4354E7ACD42> I<913807FFC0027F13FC0103B67E010F15E090261FF80313F890267F
C0007F01FEC7EA3FFE48488148486E138013FE486C6C6D13C0804817E080A66C5B18C06C
5B6C90C75AD80038168090C8FC4C1300A24C5A5F4C5A4B5B4B13C0030F5BDB7FFEC7FC91
387FFFF816C016FCEEFF80DA000313E09238007FF8EE3FFE707E70138018C07013E018F0
7013F8A218FC82A218FEA3EA03C0EA0FF0EA3FFC487EA2B5FCA218FCA25E18F8A26C4816
F0495C4916E0D83FE04A13C06C485CD80FF04A1380D807FE91387FFE003B03FFE003FFFC
6C90B65A6C6C15E0010F92C7FC010114FCD9001F1380374F7BCD42> I<17FC1601A21603
1607160FA2161F163F167FA216FF5D5DA25D5D5D167F153E157E15FC15F8EC01F01403EC
07E015C0EC0F80141FEC3F00143E5C14FC495A5C495A1307495A5C49C7FC5B137E137C5B
1201485A5B485A120F485A90C8FC123E127E5ABA1280A5C901FCC7FCAF021FB71280A539
4F7CCE42> I<486C150601F0153E01FEEC01FED9FFF0133F91B65A5F5F5F5F5F94C7FC16
FC5E16E093C8FC15FC01F0138091CAFCAC913807FF80023F13F891B512FE01F36E7E9026
FFFC0113E09139E0007FF891C76C7E496E7E01F86E7E5B7013804916C0C9FC18E08218F0
A418F8A31203EA0FE0EA3FF8487EA212FF7FA218F0A25B5E6C4816E05B01C016C06CC85A
18806C6C4A13007FD80FF04A5A6C6CECFFFCD803FE4913F02701FFE00F5B6C6CB612806D
92C7FC010F14F8010114C09026003FFCC8FC354F7ACD42> I<ED07FE92B512C0020314F0
021F14FC91397FFC01FE9139FFE0007F01030180EB3F804990C7121F4948EC7FC0494814
FF4948010313E0495A49485B5A485BA2485BA2486F13C091C7FC4803001300177E94C7FC
5AA25B127FA2ED3FF04AB5FC020714C000FF4914F091391F807FF891393E001FFE02786D
7E4A6D13807013C06D5A4A6D13E018F05C7013F8A291C813FCA44916FEA3127FA6123FA3
7F6C17FCA36C17F85E7E6E15F06C17E06C6D5B6E15C06C4B13806D6C491300D93FFC495A
6DB4EBFFFC010790B512F06D5D01001580021F01FCC7FC020313C0374F7BCD42> I<121F
7F7FEBFF8091B8FCA45A18FE18FC18F818F0A218E018C018804817000180C8123E007EC9
127E5F007C4B5A4C5A5F16074C5A484B5A4CC7FC167E167CC912FC4B5A4B5AA24B5A150F
4B5AA24B5AA24BC8FC5DA25C5D1403A214075D140FA3141FA2143FA34A5AA414FFA65BAB
6D5B6E5A6E5A6E5A385279D042> I<913803FFC0023F13FC49B67E010715E090260FFC00
13F8D93FE0EB1FFCD97F80EB07FE49C76C7E496E1380484880000317C049157F120718E0
173F120FA27FA27F7F6E147F02E015C08002FC14FF6C01FF15806F481300EDE0036C9138
F807FE6F485A6C9138FF1FF06CEDFFE017806D4AC7FC7F010F6E7E6D81010115F06D8101
0315FE010F81D93FF71580D97FC115C02701FF807F14E048EB001F48486D14F048480103
14F848481300496E13FC003F151F491407007F6F13FE491400177F00FF163F49151F170F
1707A21703A218FCA27F127F6DED07F8A26C6CED0FF07F6C6CED1FE06C6CED3FC06C6CED
FF806C01C0010313006C01FCEB3FFE6C6CB612F8011F15E001071580010002FCC7FC020F
13C0374F7BCD42> I<913807FF80027F13F849B512FE01076E7E90261FFE0113E0903A7F
F8003FF049486D7E48496D7E48496D7E484980486F138091C7FC486F13C05A18E0485A18
F0A27013F812FFA318FCA618FEA35E127FA4003F5DA26C7E5E7E6C6D5B161E6C7F6C6D5B
6C6C6C13F890393FFC03F06DB55A01074A13FC01001400EC1FF891C8FCA218F85EA301FC
16F0487E2607FF8015E05E486D15C0A24C1380A24C13005F4A131F6C4B5A49C7485A494A
5A6C48495B6D01075B2701FF803F90C7FC6C90B512FC013F5C6D14C0010791C8FC903800
7FF0374F7BCD42> I<932603FFF01407047F01FF140F0307B600E0131F033F03F8133F92
B700FE137F02039126C003FF13FF020F01F8C7EA3FC1023F01C0EC0FE391B5C80003B5FC
4901FC814949814901E082011F498249498292CA7E4948834948835A4A83485B4885A248
49187FA2485B1B3FA2485B1B1FA25AA21B0091CDFCA2B5FCAE7EA280A36C1A1FA36C7FA2
1B3F6C7F1B3E6C7F1B7E6C6D187C6C1AFC6E18F86C19016D6CEF03F06D7E6FEE07E06D6D
EE0FC001076DEE1F806D01F8EE3F006D6D16FE6D01FF4B5A023F01C0EC07F8020F01FCEC
3FF00203903AFFC001FFC0020091B6C7FC033F15FC030715F0DB007F1480040301F0C8FC
505479D25F> 67 D<BB12FEA5D8000F01E0C700077FF0007F191F190785858586A2F23F
80A21A1FA31A0FA4DD01F014C01A07A497C7FCA21703A31707170F171F17FF92B6FCA5ED
E000171F170F17071703A317011BF8A3F201F0A394C8FCA21A03A21BE0A21A07A31A0F1B
C01A1F1A3FA21A7F1AFF4F13801907191F197F060FB5FCBCFCA21B00A34D527CD156> 69
D<B81280A5D8000701F0C7FCB3B3B3B2B81280A529527DD130> 73
D<B912FCF0FFE019FE737E1AE0D8000F01E0C7003F7F060313FC06007F737E7313807313
C07313E0851BF0A21BF885A21BFCA91BF8A3611BF0A21BE04F13C0614F13804F13004F5A
060713F8063F5B92B812C097C7FC19F8198003E0CBFCB3AEB712FEA54E527CD15A> 80
D<003FBB12FCA59126C0007FEB000301FCC7ED003FD87FF0F00FFE491807491803491801
90C81600A2007E1A7EA3007C1A3EA500FC1A3F481A1FA6C91700B3B3AC49B912C0A55051
7BD05B> 84 D<EC3FFE0107B512E0011F14FC017F14FF2701FFC00F13C02703FE00037F
486C01007F6E6D7E486D80707EA2707EA3707F6C5B6C90C7FC6C5AC9FCA60307B5FC0203
B6FC147F0103B7FC011FEBF00F017F1300EBFFFC000313F04813C0485B4890C7FC5A5B48
5AF081F012FF5BA35EA26D5C127F6D5C003F03F713C36DD901E314E06CD9C00714FF0007
9026F01F8114C06C90B5C61480C602FC6D1300011F01F0EB3FFC01010180EB07F03C387C
B642> 97 D<EB3FF8B5FCA51203C6FCB3A4EE7FF00307B5FC031F14C0037F14F0913AF9
FF007FFCDAFFF8EB1FFF03E001077F03806D7F92C76C7F4A6E7F5C4A6F7E85183F85A385
84A31A80AD1A00A36061A261187F616E15FF616E4A5B6E4A5B6F495BDACFE04990C7FCDA
87F0EB3FFE913A01FE01FFF8496CB65A49013F14C049010749C8FC90C813E041547DD249
> I<913803FFE0023F13FE91B67E010315E0010F9038003FF8D93FFCEB07FC4948497E49
48131F4849497E485B485BA24890C7FC5A5B003F6F5A705A705A007F92C8FC5BA312FFAD
127F7FA3123F7F6CEE0F80A26C6D141F18006C6D5C6C6D143E6C6D147E6C6D5C6D6C495A
6DB4EB07F0010F9038C01FE06D90B5128001014AC7FCD9003F13F80203138031387CB63A
> I<943803FF80040FB5FCA5EE003F170FB3A4913803FF80023F13F849B512FE0107ECFF
8F011F9038C03FEF90273FFE0007B5FCD97FF8130149487F484980484980484980488291
C8FC5A5B123FA2127F5BA312FFAD127FA37F123FA3121F7F6C5E6C6D5C5F6C6D91B5FC6C
6D5B6C6D4914E0D97FFCD90FEFEBFF80D91FFFEB7F8F010790B5120F010114FC6D6C13E0
0207010049C7FC41547CD249> I<913807FF80027F13F849B512FE01076E7E011F010313
E0903A3FFC007FF0D97FF06D7E49486D7E4849130F48496D7E48824890C77E1880485A82
003F17C0A3485A18E082A212FFA290B8FCA401FCCAFCA6127FA37F123FA2EF03E06C7E17
076C17C06C6D140F18806C6D141F6C6DEC3F006C6D147ED97FFC495AD91FFFEB07F86D90
38E03FF0010390B512C001005D023F01FCC7FC020113E033387CB63C> I<ED1FF8913803
FFFE020FEBFF80023F14C09139FFF83FE001039038E0FFF049138049010113F85BEB3FFE
A2EB7FFCA26F13F0495AEE7FE0EE1F8093C7FCAEB712C0A5C601F8C8FCB3B3A7B612FEA5
2D547CD328> I<DA1FFE14FE49B539E007FF80010FDAFC1F13C0013FDAFF7F13E090267F
F807EBFF072701FFE001EBF07F48497E484990387FF83F91C7003F14C048EEFC1F489338
FE070049021F90C7FCA2003F82A9001F5EA26D143F6C5E6C5E6E137F6C6D495A6C6D485B
6CD9F80713804890B6C8FCD803EF14FC01C114E02707C01FFEC9FC49CBFCA2487EA37FA2
7F13FC90B612FE6CEDFFF017FCEFFF806C8318F06C836C837F48B87E1207D80FFCC70003
7F4848EC003F4848150F48486F138083485A83A56D5D007F18006D5D003F5F6C6C4B5A01
FE153FD807FFED7FF06C01C049485AC601FC011F1380013FB648C7FC010F15F8010115C0
D9000F01F8C8FC3B4F7CB542> I<EB3FF8B5FCA51203C6FCB3A4EE1FFC93B57E030314E0
030F14F892391FC07FFC92397E003FFE03F86D7EECF9F04B6D7FECFBC0ECFF8092C76C7F
A25CA25CA45CB3ACB6D8F807B612C0A542537CD249> I<133FEBFFC0487F487FA2487FA6
6C5BA26C5B6C5B013FC7FC90C8FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547CD324
> I<153FEDFFC04A13E04A13F0A24A13F8A66E13F0A26E13E06E13C0ED3F0092C7FCAEED
3FF849B5FCA5EB00031400B3B3B1EA0780EA1FE0487E487E486C14F05CA216E0A24A13C0
D87FF814804A13006C48485A001FEB3FFC6CB512F06C5C000191C7FC38003FF8256C87D3
28> I<EB3FF8B5FCA51203C6FCB3A50407B512F0A59339007FF000EF3FC04D5A4DC7FCEE
01FC4C5AEE0FF04C5A4C5A4CC8FC16FEED03FC4B5A4B5A4B5A4B7E4B7EECF9FF02FB7F91
B57EA28203BF7F031F7F14FE4A6C7FDAF0077F6F7FA26F7F6F7F167F83707F707FA2707F
707F707FA2707F707F84B6D8F00F14FEA53F537DD245> I<EB3FF8B5FCA51203C6FCB3B3
B3B1B612F8A51D537CD224> I<D93FF0D91FF84AB47EB591B56C010F13F8030302E0013F
13FE030F6E90B6FCDB3F809027F803F80F7F922A7E007FFC07E0077F000302F890283FFE
0F80037FC6D9F1F0011F49487EDAF3E0DAFF3E814B153CDAF7805D92C76C496D7F14FF4A
5EA24A5EA34A5EB3ADB6D8F80FB66CB612F8A565367BB56E> I<D93FF0EB1FFCB591B57E
030314E0030F14F892391FC07FFC92397E003FFE000302F86D7EC6EBF1F04B6D7FECF3C0
ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F807B612C0A542367CB549> I<913801FFC0
023F13FE91B67E010315E0010F018013F8903A3FFC001FFED97FF0EB07FF49486D7F4849
6D7F48496D7F91C8127F4883488349153F001F83A2003F8349151FA2007F83A400FF1880
AC007F1800A3003F5F6D153FA2001F5FA26C6C4B5AA26C6D4A5A6C5F6C6D495B6C6D495B
6D6C4990C7FCD93FFCEB1FFE6DB46CB45A010790B512F0010115C0D9003F49C8FC020313
E039387CB642> I<D93FF8EB7FF0B50107B5FC031F14C0037F14F09126F9FF0013FCDAFF
F8EB3FFF000302E0010F7FC602806D7F92C76C7F4A824A804A6E7F85187F85A2183F85A4
721380AD4E1300A44E5AA26118FF616E5C616E4A5B6E4A5B6F495B03E04990C7FC6FEB7F
FE913AF9FE01FFF802F8B65A033F14C0030749C8FC030013E093CAFCB1B612F8A5414D7D
B549> I<90393FF001FCB590380FFF804B13E0037F13F09238FE1FF89138F1F83F000191
38F07FFC6CEBF3E015C0ECF780A2ECFF00EE3FF84AEB1FF0EE0FE093C7FC5CA45CB3ABB6
12FEA52E367DB535> 114 D<903903FFC00E011FEBFC1E90B6127E000315FE3907FE003F
D80FF0130F4848130348481301491300127F90C8127EA248153EA27FA27F01F091C7FC13
FCEBFF806C13FEECFFF06C14FE6F7E6C15E06C816C15FC6C81C681133F010F15801301D9
000F14C0EC003F030713E0150100F880167F6C153FA2161F7EA217C07E6D143F17807F6D
EC7F0001F85C6DEB03FE9039FF801FFC486CB512F0D8F81F14C0D8F00791C7FC39E0007F
F02B387CB634> I<147CA614FCA41301A31303A21307A2130F131F133F137F13FF120300
0F90B512FEB7FCA426007FFCC8FCB3A9EE0F80ABEE1F006D7EA2011F143E806D6D5A6DEB
C1F86DEBFFF001005C023F1380DA03FEC7FC294D7ECB33> I<D93FF8913801FFC0B50207
B5FCA50003ED001FC61607B3AE5FA35FA25F137F5F6D6C14F7DC01E713F06D6CD907C7EB
FFC0903A0FFF801F876D90B51207010114FC6D6C13F0020701C091C7FC42377CB549> I<
B600E090381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E8017016D6C5D1703
6D5E6F13076D5E6F130FA26D6D5C171F6D93C7FC6F5B6D153E6F137E6D157C8117FC027F
5CEDFE01023F5CEDFF036E5C168316876E5C16CF6E5C16FF6E91C8FCA36E5BA26E5BA26F
5AA36F5AA26F5AA26F5AA23E367DB445> I<B600E1B6D8800FB5FCA500019026F0000301
C0C7EA3FE06E6D6DEC0F806CF21F00A26E6D6D5C017F193E6E147F72147E013F197C6E6F
14FC6D6117FF6F6E13016D4A5E03C06E13036D615E03E001E7EB80076D02075E03F001C3
13C06D4E5A160F03F80181EBE01F6D96C7FC6F48C6FC735A027F49153EDBFE3E90387FF8
7E023F177C167EDBFF7C90383FFCFC6E01FC5D4CEB1FFF6E5FA24C7F6E5F4C7F6E5FA24C
7F6E5F4C7FA26E94C8FC93C8FC6F5DA2033E157C58367DB45F> I<B6D8F001B512FCA5C6
6C48C7381FF8006D6CEC0FE06D6D495A606D6D49C7FC6D6D137E6D6D13FE6D6D485A4C5A
6D01FC5B6E6C485A6E6C485A161F6EEBBF806E01FFC8FC6E5B5E6E5B806E7F6F7EA26F7E
834B7F92B5FC83DA01FB7FDA03F17FDA07F07F4A5A4A486C7E4B6C7E4A486C7F147E02FE
6D7F49486D7F49486D7F4A8149487F49486D7F011F6F7ED97FE06E7EB500FE0107B6FCA5
40357EB445> I<B600E090381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E6E
1401013F5E8017036D6D5C17076D5E6F130F6D5E6F131F6D93C7FC815F6D6D133E177E6D
157C6F13FC027F5C811601DA3FFF5B16036E5C16876E5C16CF6E5C16EF16FF6E91C8FCA2
6E5BA26E5BA26F5AA36F5AA26F5AA26F5AA35E151F93C9FC5D153E157ED81FC0137C487E
486C13FC486C5B14015D4A5A14074A5A6C48485A4948CAFC495A383F81FC6CB45A6C5B00
0313C0C648CBFC3E4D7DB445> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecss1000 10 26
/Ff 26 120 df<EB01F0EB03E0EB07C0EB0F80131FEB3F00133E137E5BA2485A12035B12
075BA2120F5B121FA25B123FA390C7FCA25AA5127E12FEB2127E127FA57EA27FA3121F7F
A2120F7F1207A27F12037F12016C7EA2137E133E133FEB1F80130FEB07C0EB03E0EB01F0
145279BD20> 40 D<12F8127C7E7E7F6C7E12077F6C7EA26C7E7F12007F137EA2137F7F
1480A2131F14C0A3130FA214E0A5130714F0B214E0130FA514C0A2131FA31480133FA214
005B137EA213FE5B12015B485AA2485A5B120F485A90C7FC123E5A5A14527CBD20> I<15
38157CB3A5003FB812F0B912FCA4C8007CC8FCB3A6153836367BAF41> 43
D<12FEA70707788617> 46 D<151C153EA3157E157CA215FC15F8A2140115F0A2140315
E0A2140715C0A2140F1580A2141F1500A25C143EA2147E147CA214FC5CA213015CA21303
5CA213075C130F5CA2131F91C7FCA25B133EA2137E137CA213FC5BA212015BA212035BA2
12075BA2120F5BA2121F90C8FCA25A123EA2127E127CA212FC5AA312701F537BBD2A> I<
913803FF80021F13F891B6FC4915C013075B4948C61380D97FF0130FD9FFC013034A1301
4890C9FC485A485A5B120F5B485AA2485AA3485AA448CAFCAC6C7EA46C7EA36C7EA26C7E
7F12077F6C7E6C6C15206C6D14E06E1301D97FF0130FD91FFE137F6DB6FC6D15C0010115
006D5C021F13F0020313802B3E7BBB35> 67 D<B91280A6C7D807F8C8FCB3B3B0313A7D
B938> 84 D<EB1FF0EBFFFC000313FF000F14804814C09038E01FE09038000FF0001C13
070018EB03F81210C7FCEC01FCA7143FEB0FFF90B5FC1203120F381FFE01EA3FE0EA7F80
130012FEA414037E387F800FEBE03F6CB5FC7E6C13F96C13E1D801FEC7FC1E287DA628>
97 D<12FEB3A4EB01FCEB0FFF013F13C090B57EB67E9038F03FF8EBC007496C7EEB0001
486D7EA2157FA3ED3F80AAED7F00A35D5D14016C5CEB80039038C00FF89038F03FF090B5
5A485C6D5BD91FFEC7FC380007F8213D7ABB2B> I<EB03FE90381FFFC0017F13E090B512
F84814FC3803FC033907F8007CD80FE01338484813081500485AA248C8FCA3127E12FEA9
127FA36C7EA26D1302001F14066C6C131E6C6C137E9038FC03FE6CB5FCC614FC6D13F001
1F13C0903807FC001F287DA625> I<ED3F80B3A4EB0FE0EB3FFC90B5FC4814BF4814FF38
07FE07380FF801381FE00049137F003F143F5B127F90C7FCA312FEAA127FA36C7E157F6C
7E6D13FF380FF0033807FE076CB512BF6C143F6C13FEEB7FF8D90FE0C7FC213D7DBB2B>
I<EB07F8EB1FFE90387FFF8048B512C04814E03907FC0FF0390FF003F8EBE001391FC000
FC49137C003F147E90C7123E5A127E151F12FEB7FCA500FCC8FCA27EA2127EA2127F7E7F
6C7E6D13026C6C130E6C6C133E3903FE01FE6CB5FC6C14FC6D13F0011F13C0903803FE00
20287EA625> I<903907E001F890383FFC1F90397FFEFFFC48B6FC5A9039F81FF8003907
F00FE048486C7EEBC003A248486C7EA76C6C485AA2EBE0076C6C485A6C6C485A48B5FC5D
4849C7FCEB3FFC381F07E090C9FCA37F7F6CB512C015F815FE6CECFF8016C04815E05A3A
3F80007FF048C7120F007EEC03F8481401A46C1403007E15F0D87F80130F6C6CEB1FE03A
1FFC01FFC06CB612806C1500000114FC6C6C13F0010790C7FC26387EA52A> 103
D<12FEB3A4EB01FC90380FFF804913C0017F13E090B512F039FFF81FF8EBE007EBC00301
8013FC14011300A35AB3A71E3C7ABB2B> I<12FFA81200AC127FB3B308397BB814> I<12
FEB3A5EC03FE4A5A4A5A4A5A4A5A4A5A4A5A4990C7FC495A5C495A495A495A495A495A49
7EB57EA280EBF7F813E3EBC1FCEB80FE497E487F6E7E81141F6E7E8114076E7E6E7E8114
00157F1680213C7ABB29> 107 D<12FEB3B3B3A6073C7ABB14> I<D901FCEB03F83BFE0F
FF801FFF496D481380017F6DB512C090B500F114E03CFFF81FFBF03FF0D9E007EBC00F90
3AC003FF80070180020013F86E140301005BA3485CB3A735267AA542> I<EB01FC39FE0F
FF804913C0017F13E090B512F039FFF81FF8EBE007EBC003018013FC14011300A35AB3A7
1E267AA52B> I<EB03FE90380FFF80013F13E090B512F848803903FE03FE3907F800FF48
48EB7F8049133F4848EB1FC04848EB0FE0A290C712074815F0A2007E140300FE15F8A900
7FEC07F0A36C6CEB0FE0A26C6CEB1FC06D133F6C6CEB7F806C6CEBFF003903FE03FE6CB5
5A6C5C6D5B011F13C0D903FEC7FC25287EA62A> I<EB01FC38FE0FFF013F13C090B57EB6
7E9038F03FF8EBC00F90388003FC1300486D7E14008181A21680153FA9ED7F00A35D5D14
016C495AEB80076D485A9038F03FF090B55A485C6D5BD91FFEC7FCEB07F890C9FCAF2136
7AA52B> I<14F0EAFC07130F133F137F13FF00FD130013FCEAFFF05B5BA25B90C7FCA35A
B3A414267AA51C> 114 D<EB7FE03801FFFC0007EBFF804814C05A383FC03F9038000780
1401007E90C7FCA4127FA26C7E13F0EBFF806C13F06C13FC6C7F6C7FC61480131F010013
C0143FEC0FE0A21407A3124012600078EB0FC000FE131F39FFC07F8090B5FC6C1400001F
5B000313F838007FC01B287EA620> I<EA01FCAAB6FCA5D801FCC7FCB3A76D1380140139
00FF07C014FFA26D1300EB3FFCEB1FE01A307FAE1E> I<00FEEB01FCB3AA1403A214076C
131F387F807F90B5FC6C13F914F1000F13C1D803FCC7FC1E267AA42B> I<00FED901FEEB
01FC007F17F802031403A2018013DF003FEE07F01407ED9F80D81FC016E0020F140F158F
D80FE002C013C0030F131F141FED07E0D807F01680021E143F143E0003DA03F0130013F8
023C5C0001017C147EED01F813FC027814FE0000D9F8005BA24A13FC017C5D167D137E5C
013EEC3DF0013F143F5C011F5D161F36257FA439> 119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ectt1000 10 45
/Fg 45 123 df<D807801307D81FE0EB0F80151F487E486C133F1600007C5CD8FCFC137E
EAF87C15FE5D14015DA21403D8FCFC5BEA7CF8007F13075D383FF00FD81FE05BA2380780
1FC75B143F92C7FCA25C147E14FE5CA213015CA213035C13075CA2130F5C131FEC800FED
3FC0013FEB7FE0140049EBFFF0017E13F9A2D9FE0113F801FC13F0A2120113F8120313F0
15F90007010013F05B000F14FF49EB7FE0A20007EC3FC06C48EB0F0025417DB92C> 37
D<EA0F80EA1FE0EA3FF0127F13F8A213FCA2123F121F120FEA007CA313FC13F8A2120113
F01203EA07E0A2EA0FC0EA3F80127FEAFF005A12F812700E1D71B22C> 39
D<EB0380497EA60020140800F8143E00FE14FE00FF13C1EBC7C7EBE7CF003FB512F8000F
14E0000314806C140038007FFCA248B5FC481480000F14E0003F14F839FFE7CFFEEBC7C7
EB07C100FE13C000F8143E0020140800001400A66D5A1F247AAA2C> 42
D<007FB512F0B612F8A36C14F01D0579942C> 45 D<121FEA3F80EA7FC0EAFFE0A5EA7F
C0EA3F80EA1F000B0B708A2C> I<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF039
03F803F848486C7EEBE0004848137EA248487FA248C7EA1F80A2003E140F007E15C0A300
7C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE0007
5CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C> 48
D<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB5
12E0B612F0A36C14E01C3477B32C> I<EB0FF890387FFF8048B512E00007804814FC391F
F80FFE393FE001FF903880007F48C7EA3F80007E141F00FE15C0150F6C15E01507A3127E
123CC8FCA2150F16C0151F1680153F16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF8049
48C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03C04848EB07E0EA1FE0485A48
B6FCB7FCA36C15C023347CB32C> I<000FB512FE4880A35D0180C8FCADEB83FE90389FFF
8090B512E015F8819038FE03FE9038F000FF01C07F49EB3F8090C7121F6C15C0C8120FA2
ED07E0A4123C127EB4FC150F16C0A248141F007EEC3F80007FEC7F006C6C5B6D485A391F
F80FFC6CB55A6C5C000114C06C6C90C7FCEB0FF823347CB22C> 53
D<EB07FCEB3FFF90B512C0488048803907FC07F8390FF001FC48486C7ED83F80137E157F
48C77E007EEC1F8012FE5AED0FC0A416E0A37E127E007F141F7E6D133F6C6C137F390FF0
01FF3807FC0F6CB6FC6C14F76C14C7013F130FD90FF813C090C7FCA2151F1680153F1600
000F5C486C137E486C13FE4A5A4A5A14079038801FF0391FE07FE090B55A6C91C7FC6C5B
000113F838007FC023357CB32C> 57 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA
1F00C7FCAE121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C> I<EC7F80
903803FFE0010F7F013F7F497F9038FFC0FE3901FE007FD803F87F4848EB1F809038E00F
CF390FC03FFF48484813C091B5FCEA3F01393E03F87F903907F03FE0007EEBE01F397C0F
C00FEC8007A2EAFC1F00F8EB0003A900FCEB8007D87C0F14C0A2ECC00F3A7E07E01F8000
3EEBF03F903903F87F00393F01FFFED81F805B6E5A6C6C6C5A3907E00FC09039F00007C0
6C6CEB0FE0D801FE131F3900FFC0FF6DB512C06D1480010FEBFE00010313F89038007FC0
23337CB22C> 64 D<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314C390381F
83F0A590383F01F8A490387E00FCA549137E90B512FEA34880A29038F8003FA34848EB1F
80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C> I<007FB512
F8B612FCA36C14F839000FC000B3B3A5007FB512F8B612FCA36C14F81E3379B22C> 73
D<387FFFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6FCB7FCA36C15F025337D
B22C> 76 D<EB7FFF0003B512E0000F14F848804880EBE003EB800048C7127FA2007E80
A300FE158048141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEBF00790B5FC6C5C6C
5C000314E0C66C90C7FC21357BB32C> 79 D<007FB512C0B612F88115FF6C15802603F0
0013C0153FED0FE0ED07F0A2150316F81501A6150316F01507A2ED0FE0ED3FC015FF90B6
1280160015FC5D15C001F0C8FCB0387FFF80B57EA36C5B25337EB22C> I<90381FF80790
B5EA0F804814CF000714FF5A381FF01F383FC003497E48C7FC007E147F00FE143F5A151F
A46CEC0F00007E91C7FC127F7FEA3FE0EA1FFCEBFFC06C13FC0003EBFFC06C14F06C6C7F
01077F9038007FFEEC07FF02001380153FED1FC0A2ED0FE0A20078140712FCA56CEC0FC0
A26CEC1F806D133F01E0EB7F009038FE01FF90B55A5D00F914F0D8F83F13C0D8700790C7
FC23357CB32C> 83 D<387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC
17416FB92C> 91 D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC1741
7DB92C> 93 D<1338137CEA01FC1203EA07F813F0EA0FC0EA1F80A2EA3F00123E127E12
7CA212FC5AA3EAFFC013E013F013F8A2127FA2123F13F0EA1FE0EA07C00E1D72B82C> 96
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
I<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138801F
E091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036D
EB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027337F
B22C> I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E4848
131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE
03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C> I<EC0FFE4A7EA380EC003F
AAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC007E
80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE
6C143FEB3FFC90390FF01FFC27337DB22C> I<EB03FE90381FFFC0017F13F048B57E4880
3907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FC
A416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13
FF000190B512806C1500013F13FC010F13F00101138023247CA32C> I<EC0FF8EC3FFE91
B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26
000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C> I<ED03F8903907F80FFC90391F
FE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0001300
001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7
FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848
C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB
0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C> I<13
07EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB5
12FCB612FEA36C14FC1F3479B32C> 105 D<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091
C7FCA748B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414005CEB01FEEB
FFFC6C5B5C001F5B000790C7FC1A467CB32C> I<EA7FE0487EA3127F1201AA91381FFFF0
4A13F8A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7
FE90B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFF
C0FFFCB500E113FEA36C01C013FC27337EB22C> I<387FFFE0B57EA37EEA0003B3B3A500
7FB61280B712C0A36C158022337BB22C> I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFC
D87FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380
B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C> I<39
7FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F
5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C> I<EB07FCEB1FFF01
7F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F00
7EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C
6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C> I<397FF01F
E039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03
F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801F
E09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27
367FA32C> I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF0191
38FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>
114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F
140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE007814
7F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F814803970
1FFC0020247AA32C> I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED
07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C
> I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF
90B7FC6D15807F6D13CF902603FE07130029247FA32C> I<3A7FFF01FFFCB514FE148314
016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2017E
13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D90C7
FCA26D5A147C27247EA32C> I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB01F0
A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3CFA2
01FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C> I<3A3F
FF03FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83EC87E0
90380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF80903807CF
C0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FFFC1483
B514FE6C15FC140127247EA32C> I<3A7FFF01FFFCB5008113FE148314816C010113FC3A
03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13FC6D5BA2
EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA214
7E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C
5AEA07E027367EA32C> I<003FB612E04815F0A4007EC7EA1FE0ED3FC0ED7F80EDFF004A
5A003C495AC7485A4A5A4A5A4A5A4A5A4AC7FCEB01FC495AEB0FF0495A495A495A49C8FC
4848EB01E04848EB03F0485A485A485A485A485AB7FCA46C15E024247DA32C> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecrm1000 10 85
/Fh 85 123 df<486C1360000314E039070001C0000EEB038048EB070000181306003813
0E0030130C0070131C00601318A200E01338481330A400CEEB338039FF803FE001C013F0
A3007F131FA2393F800FE0390E0003801C1981B91C> 16 D<001C1307007FEB1FC039FF
803FE0A201C013F0A3007F131F001CEB073000001300A400011470491360A2000314E090
C712C048130100061480000E130348EB070048130E485B006013181C1980B91C> I<B812
80A2290280962A> 21 D<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF
0F903B1F8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB8
12F8A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30> 27
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E> I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E> I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45> I<007C137C00FE13FEEAFF01A3EAFE00A7007E13FC007C137C
A8003C137800381338A700181330171E77BA2A> 34 D<030C497EA2031C1303031891C7
FCA303385B03301306A30370130E0360130CA303E0131C4B1318A3020114384B1330A302
03147092C71260A34A14E0007FB91280BA12C0C7270C000180C7FCA2021C1303021891C8
FCA402385B02301306A50270130E0260130CA2BA12C06C1880280001C00038C8FC4A1330
A30103147091C71260A34914E001065CA3010E1301010C5CA3011C1303011891C9FCA301
385B01301306A30170130E0160130CA23A4A7BB945> I<EB0380A3EB0FF0EB7FFE48B512
803903F38FC03907C381E0390F8380F0D81F031338123E003C141C007C140C150E007814
3E00F814FE1481A400FCEB80FC157800FE140012FF127F13C313E3EA3FFF6C7F14F86C13
FE6CEBFF80000114C06C14E0013F13F01303ECBFF8148FEC83FC1481A2EC80FE157E123C
12FF153EA412FE00F8143C00E0147C12600070147815F8003814F0003C1381001EEB83E0
000FEB87C03907E39F803901FFFE006C5BEB1FE0EB0380A41F437BBD2A> I<017C166048
B416F02607C3801401260F81C01403D900E04A5A001E01784A5A003E6D141F003C013FEC
7F80007C90271BE003FFC7FC0218B512BF007891381FFC3E00F8011CC75A020C14FC5F4C
5A16035F4C5A160F5F4CC8FC021C5B00780118133E007C5D16FC003C01385B003E903830
01F0001EEB70036C01E05B903981C007C03907C3800F2601FF005BD8007C49C9FC90C748
EB07C0033EEB1FF04BEB3C3803FCEBF81C4B497E913A01F001E00602030103130703E049
7E912607C0071480020F15011580DA1F00018013C04A010F1300143E5C14FC5C495A1303
5C495A130F4A0107130149C701C013805B013E1603490203140001FC6F5A490201130648
48913800F00E0003705A49ED3C3849ED1FF06C48ED07C03A437BBD45> I<121C127FEAFF
80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A1979B917
> 39 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F
90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7E
A26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20> I<12C07E12707E7E
7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6
EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA248
5A48C7FC120E5A5A5A5A5A13527CBD20> I<EB0380497EA7397803803C00FC147E00FE14
FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8
EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00FC147E0078143C
390007C000A76D5A1F247BBD2A> I<1530B3A8B912FCA2C80030C8FCB3A836367BAF41>
I<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817> I<B512FCA516057F941C> I<121C127FEAFF80A5EA7F00121C090979
8817> I<1506A2150E150CA2151C151815381530A215701560A215E015C0A214011580A2
140315005C1406A2140E140CA2141C1418A214381430A21470146014E05CA213015CA213
0391C7FCA25B1306A2130E130C131C1318A213381330A213701360A213E05BA212015B12
0390C8FCA25A1206A2120E120CA2121C1218A21238123012701260A212E05AA21F537BBD
2A> I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA2
48C77EA2481580A3007EEC0FC0A500FE15E0B3007E15C0A4007F141F6C1580A36C1500A2
6C6C133EA26C6C5B6C6C5BEBF0013900F803E090387E0FC0D91FFFC7FCEB03F823397DB6
2A> I<EB01C013031307131F13FFB5FCA2131F1200B3B3A7497E007FB512F0A31C3779B6
2A> I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0001E6D7E001C6D7E486D7E5A6E7E
126012FE6CEC7F807FA56CC7FC121CC8FCEDFF00A25D14015D14035D4A5A4A5A5D4A5A4A
C7FC147E5C495A14E0495A495A49C8FC011EEB01805B5B49130348481400485A485A90C7
5A48B6FC5A5A485CB6FCA321377CB62A> I<EB07F8EB3FFF90B512C03901F80FF03903C0
07F848486C7E390E0001FEEA0F80391FE000FF7FA56C5A6C5AC7485AA25D14035D4A5A5D
EC0F80027FC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16
E0A2121EEA7F80A2487EA316C0157F491480007EC7FC0070ECFF006C495A121E390F8003
F83907F00FF00001B512C06C6C90C7FCEB0FF823397DB62A> I<1538A2157815F8A21401
14031407A2140F141F141B14331473146314C313011483EB030313071306130C131C1318
13301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F8
00AA4A7E0103B512F8A325387EB72A> I<0006140CD80780133C9038F003F890B5FC5D5D
158092C7FC14FC38067FE090C9FCAAEB07F8EB1FFE9038780F809038E007E03907C003F0
496C7E130000066D7E81C8FC8181A21680A4121C127F5A7FA390C713005D12FC00605C12
704A5A6C5C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE021397C
B62A> I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F8048
48137F485A12075B000FEC3F0049131E001F91C7FC5B123FA3127F90C9FCEB01FC903807
FF8039FF1E07E090383801F0496C7E01607F01E0137E497F16805BED1FC0A390C713E0A5
7EA47F123F16C0A2001FEC3F807F000F15006D5B000714FE6C6C5B6C6C485A3900FE07F0
90387FFFC0011F90C7FCEB03FC23397DB62A> I<12301238123E003FB612E0A316C05A16
8016000070C712060060140E5D5D00E014304814705D5DC712014A5A4AC7FC1406140E5C
A25C1478147014F05C1301A213035C1307A2130FA3131F5CA2133FA5137FA96DC8FC131E
233A7BB72A> I<EB03F8EB1FFF017F13C09038FC07F03901E001F83903C0007C4848133C
90C7123E48141E000E141F001E80A3121FA26D5B6D131E7FD80FF85B6D137C01FF13786C
6D5A6CEBE3E0ECF780C601FFC7FC6D5A6D6C7E010F13E0013F7F01F97F3901E07FFE4848
6C7E380F800F48486C1380001E010113C0487F007C143F0078EC1FE0150F00F814074814
03A21501A36C15C0A200781403007C15806C14076CEC0F006C6C131ED807E0137C3903F8
03F0C6B55A013F1380D907FCC7FC23397DB62A> I<EB03F8EB1FFF017F13C03901FC07E0
48486C7E3907E001F8000F6D7E4848137E5B003F80A248C71380A25AED1FC0A516E0A56C
143FA36C7E157F121F6C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13C0
EB07F090C7FCA2153F1680A216005D120F486C137E486C5BA24A5A4A5A49485A381F000F
001CEB1F80260F807FC7FC3807FFFE000113F838003FC023397DB62A> I<121C127FEAFF
80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317> I<007FB812F8B9
12FCCCFCB0B912FC6C17F836147B9E41> 61 D<1538A3157CA315FEA34A7EA34A6C7EA2
02077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202
C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7E
A3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB
3E> 65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA2
83A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F070
7E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B8
12C094C7FC16F832397DB83B> I<913A01FF800180020FEBE003027F13F8903A01FF807E
07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F120148
48151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED
0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C
5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F00201
1380313D7BBA3C> I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8
707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218
E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816
C036397DB83F> I<B812FEA3000190388000076C90C8FC173F838383A383A31880170116
C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C712
C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397EB838> I<B8
12F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180
A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0
A32F397DB836> I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787D9
0FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A2484815
03A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F
7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903
FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41> I<B648
B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648
B512FEA337397DB83E> I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4C
C8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A
6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2
707E707F8484486D497FB6011FEBFF80A339397DB841> 75 D<B612E0A3000101C0C8FC
6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA3
2D397DB834> I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9
C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E
6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06
A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED
018045397DB84C> I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EB
CFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080
ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE
1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA217
0637397DB83E> I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7E
D93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0
A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F
17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F
4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE00203
90C8FC363D7BBA41> I<B712C016FC16FF0001D9800013C06C90C7EA1FE0707EEE03F883
707EA2707EA21880A71800A24C5AA24C5A5FEE0FF04C5AEEFF8091B548C7FC16F091CAFC
B3A5487FB6FCA331397EB838> I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB
1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA24848157F0007178049153F
000F17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507A200FF17FCAC007F17F8
A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C14804AB4FC3C03F8038380
7F003B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8CEB77F0D91FCCEB3FE0
D907EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91C7001E131C161F183CEF80
7CEFC0F8EE0FFFA318F08218E07013C07013809338007E00364B7BBA41> I<B612FEEDFF
E016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C
5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA216
1F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA
3FFCEF07F0393B7DB83D> I<D90FF813C090383FFE0190B512813903F807E33907E000F7
4848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D
14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB
007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C
15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8
C00190C7FC253D7CBA2E> I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F000
78160000701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0
A335397DB83C> I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3
B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C
49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E> I<B500FC91387FFF
80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506
A26E140E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED
8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC0203
5BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E> I<B5D8FC07B5D8
F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F
6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E
6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4C
C7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151C
DA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407
A2020093C8FC4B80503B7EB855> I<007FB590383FFFFCA3C601F801071380D97FE0D903
FCC7FC013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB801816
3891387FC0306E6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA2
4B7E15DF9138019FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230
804A6D7E14E04A6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C81
01FE822607FF80010713E0B500E0013FEBFF80A339397EB83E> I<B500FE91383FFFE0A3
000301E0913807FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C
5C6D6C141C17186D6C143817306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890
C8FC1606913807FC0E160C913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E02
3FB512C0A33B397FB83E> I<003FB7FCA39039FC0001FE01C0130349495A003EC7FC003C
4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC712074A5AA24A5A
5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180A2495A5C137F495A160348
90C7FC5B1203485AEE0700485A495C001F5D48485C5E4848495A49130FB8FCA329397BB8
33> I<007FB81280B912C0A26C17803204797041> 95 D<EA01801203EA0700120E5A12
181238123012701260A212E05AA412CEEAFF8013C0A3127FA2EA3F80EA0E000A197AB917
> I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C
5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA3
1401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F80
07C026277DA52A> I<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F
809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16
FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E9038
00FFF8C7EA1FC0283B7EB92E> I<EB03FC90381FFF8090387E03E03901F80070484813F8
3907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127F
A26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381F
FF00EB07F81F277DA525> I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F
9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA12
7E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90
381FFE0FD907F813C0283B7DB92E> I<EB07F8EB1FFF90387C0FC03901F803E03903F001
F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5
127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C13709038
7E03E090381FFF80903803FC0020277EA525> I<147E903803FF8090380FC1E0EB1F8790
383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8
A31C3B7FBA19> I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903
E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D
48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815
C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0
003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A
> I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF7
0013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E> I<EA0380EA0FE0
487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717> I<
EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C12
7E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719> I<EA03F0
12FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14
38147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F
811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C> I<EA03F012FFA3120F1203B3B3
AD487EB512C0A3123A7EB917> I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E0
7E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2
495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445> I<3903F00FF000
FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C
497EB500C1B51280A329257EA42E> I<EB03FE90380FFF8090383E03E09038F800F84848
137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9
007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C
13F890387E03F090381FFFC0D903FEC7FC25277EA52A> I<3903F01FE000FFEB7FF89038
F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016
FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F0090
38F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E> I<D903F813C09038
1FFE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A15
0F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39
007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C> I<3807E01F00
FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300
A45BB3A2487EB512F0A31C257EA421> I<EBFF03000313E7380F80FF381E003F487F487F
00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380
EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1
FFF038C03F801A277DA521> I<1318A51338A31378A313F8120112031207001FB5FCB6FC
A2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220
> I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F00
00EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E> I<B538
803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E
017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7
FCA214FF6D5AA2147CA31438A227257EA32C> I<B53A1FFFE03FFEA3260FF8009038000F
F86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E
9038EFC00C15C7171CD93F01EBE01815830281EBF038D91F831430150102C3EBF8709026
0FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100
141E4A130E0260130C37257EA33C> I<B538807FFFA33A03FE003FF00001EC1F80000092
C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F
804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F0178
7F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C> I<B538803FFEA33A0FF8
000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2
ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A214
30A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC0
27357EA32C> I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB
1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FE
A2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F
247EA325> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecss2074 20.74 23
/Fi 23 118 df[<ED01FEED03FCED07F8ED0FF0ED1FE0ED3FC0ED7F8015FF4A13005D4A
5A14074A5A5D141F4A5A5D147F4A5AA24990C7FCA2495A495AA2130F5C131F5CA2495AA2
137F5C13FF5CA25AA291C8FC5AA25B1207A35B120FA35B121FA45B123FA65B127FA9485A
B3AA6C7EA9123F7FA6121F7FA4120F7FA312077FA312037FA27E80A27EA280137F80133F
A26D7EA280130F801307A26D7E6D7EA26D7FA26E7E143F816E7E140F816E7E14036E7E81
6E1380157FED3FC0ED1FE0ED0FF0ED07F8ED03FCED01FE> 39 172
115 256 62 40 D[<B4FC6C7E6C7E6C7E6C7E6C7E6C7E7F6C7E7E6D7E806D7E131F806D
7E1307806D7EA26D7EA26D7F6E7EA281143F81141FA26E7EA2811407811403A281A28016
80A28016C0A3157F16E0A3153F16F0A4151F16F8A6150F16FCA9ED07FEB3AAED0FFCA916
F8151FA616F0153FA416E0157FA316C015FFA316805CA216005CA25DA214075D140F5DA2
4A5AA2143F5D147F5DA24A5A4990C7FCA2495AA2495A5C130F495A5C133F495A5C49C8FC
5A485A5B485A485A485A485A485A48C9FC> 39 172 119 256 62
I<B81280A829087EA835> 45 D<EF7FFCA34D7EA34C7FA34C805F5F040780187FDC0FF8
7FA2183FDC1FF07FA2181F043F8017E0180F047F8017C004FF6D7E1780A24B6E7E1700A2
4B6E7F5EA203076E7F5E030F82197F5E031F82193F5E033F6F7EA25E037F6F7EA25E03FF
6F7EA24A49818593C8FC4A84855D020784855D020F717EA24A48831A3FA24A48831A1F5D
027F841A0F5D02FF841A074990BAFCA34986A34986A202FCCBFC010F861B7F5C011F861B
3F4948851B1FA24948851B0FA24948851B075C4887874890CC148087A248481BC087A248
481BE01C7F5B001F1CF01C3F48481BF8A21C1F48481BFC1C0FA248481BFE1C075B5F757B
F46A> 65 D<94381FFFE04CB67E040F15F8047F15FF4BB812E0030717F8031F17FE5D92
B538F0007F4A91C700035B4A01FCEC007F4A01F0150F4A01C015034A90CAFC4A48173C4A
481718DAFFF094C7FC495B495B495B4990CDFCA2495A495A5C137F5C495AA2485BA2485B
A24890CEFCA25A5BA2485AA3123F5BA4485AA6485AB16C7EA66C7EA47F121FA36C7EA27F
7EA26C7FA26C7FA26C7FA26D7E80133F806D7E6D7EA26D7F6D7F6D6D5F6D6D1707DA7FFC
5F6E6C5F6E6C177F6E01C0923801FF806E01F015076E01FC151F6E01FF92B5FC6E02F001
1F1400033F90B712FC6F17F003075F030117806F6C4BC7FC040F15F004011580DC001F01
F0C8FC517974F666> 67 D<B812F0EFFF8018F818FF19C019F08519FE01C0C8001F7F05
0014C0061F7F06077F06017F726C7E737E737E85737F737F85737FA21A7F871A3FA287A2
1A1FA61A3FA263A21A7F631AFFA24F5B614F5B4F90C7FC614F5A4F5A4E485A06075B061F
5B95B55A051F91C8FC90B95A19F86119C096C9FC18F8188095CAFC01C0C700017F828471
7E173F84171F84717E170784717EA2717F8385727EA2727E181F85727EA2727E18038572
7FA2727F197F86737EA2737E737EA2737EA2737E737FA2737FA2747E747EA2747EA2747E
747EA2747EA27413807413C0527570F467> 82 D<91380FFF8049B512F0010F14FC017F
14FF48B712C0000782001F824882DAE0007F49C7EA3FFE01F8140FD81FC06E7E90C86C13
80121E00186F13C0001081CAFCEF7FE0A318F0173FAD93B5FC157F0207B6FC143F49B7FC
1307011F153F017FEBF80090B512804801F8C7FC4813C04890C8FCEA0FFC485A485A5B48
5A5BA248C9FCA5177FA26D15FFA26C6C5C6D5C6D140F6C6C5C01FF91B5FC6CEBE00791B6
12BF6CEDFE3F16FC6C15F06C15C06CECFE006C6C13F0D91FFCC9FC344C77CA4C> 97
D<EAFFC0B3B3ADED0FFC92B57E020714E0021F80027F14FC91B67E01C38101C7829026CF
FE0080D9DFF0131FD9FFC001037F4A6D7F49C86C7E49153F496F7E170F496F7E5B717E49
81A2711380A2187FA219C0183FA419E0181FAD183F19C0A3187FA2198018FFA24D1300A2
5F6D5E17076D4B5A6D151F4D5A6D4B5A6D15FF6D02035B6E495BD9DFE0013F5B9026CFFC
01B5C7FC01C7B65A01C35D01C15D01C05D023F14C0020F5C020301FCC8FCC8EA3FE03B7C
72FA52> I<ED3FFF4AB512F8020F14FF023F15C04A15F049B712FC4916FF49178049EBE0
004990C7120FD93FFC02011300D97FF06E7E4948151F0280814890C912034894C7FC5B48
5A5B120F5B121F5B123F5BA3485AA548CCFCAD6C7EA47F123FA27F121F7FA26C7EA26C6C
17806D1601000317036C6C160F6E151F6C01E0ED7FC06D6CEC01FFD93FFC14076DB4143F
6DD9E003B512806D90B6EAFE006D5E6D16F06D6C5D6E1580020F02FCC7FC020114E09126
003FFCC8FC3A4C78CA47> I<ED7FE0913803FFFE021F6D7E4A14E091B612F84981010781
498149D9C01F7F90273FFE00037FD97FF8130002E06E7E4948EC1FF04849140F4890C86C
7E5B48486F7E491501120F496F7E121F49167EA24848167F845B127FA290CAFCF01F80A2
BAFCA748CCFCA47EA37EA27FA36C7EA36C7EA26C7E7F12077F6C6C17806D16016C6D1507
6C6D150F6EED3FC0D97FF815FF6D6C14036DB46C131F6DD9F003B512806D90B712006D16
FC01005E6E15E0021F1580020702FCC7FC020114E09126001FFEC8FC3A4C79CA47> 101
D<EE3FFF4BB512F01507151F5D5D4AB6FC5CEEE0034A90C71210DA0FFC14004A5A5D4A5A
5D147F5D14FFA292C9FC5BA45BB3A9B812C0A8D8000390C9FCB3B3B3AB347C7DFB31> I<
DB1FE04AB4FC912601FFFE143F02079026FF8003B5FC4AECC01F023F02F0B6FC4A02FB15
8091BAFC49EBE01F49D9000302FCC7FC49486D01F8C8FC02F89038007F8049486E7E4948
6E7E4A140F013F824A1407A249C86C7EA401FE6F7EAA017F4B5AA46D6C4A5AA26E140F01
1F5E6E141F6D6C4A5A6D6C4A5A02FEEB01FF496C4990C9FC499038E01FFE92B55A495D02
BF5C020F14C0496C5CD97E0149CAFC9138001FE001FE90CCFCA67FA27F8080EB3FF091B6
12FE6DEDFFF818FF6D17C019F0013F17FC498390BA7E48854801E0C71203480180DA001F
7F4848C900037F4848160049EF3FF84848171F49717E127F4917078648481703A76D1707
007F616D170F003F616D171FD81FFCEF7FF06C6C4D5A6D5E6C01C003075B6C01F8033F5B
C601FF4AB448C7FC6D01F0011F5B6D90B75A010F17E00103178001004CC8FC021F15F002
031580DA000F01E0C9FC496D7CC950> I<EAFFE0ABC7FCB3A9EA7FE0B3B3B3B30B6F74EE
25> 105 D<B47EB3B3AE943807FF8094380FFE004D5A4D5A4D5A4D5A4C5B4C5B4C90C7FC
4C5A4C5A4C5A4C5A4C5A4B5B4B5B4B90C8FC4B5A4B5A4B5A4B5A4B5A4A5B4A5B4A90C9FC
4A5A4A5A4A5A147F4A7E01817F138301877F018F80EB9FFCD9BFF87F9039FFF07FE0ECE0
3F02C07F4A6C7EEC000F4980496D7E496D7E5B496D7F496D7F49147F83707E161F83707E
160783707E707F8284717E173F84717E170F84717E1703847113807113C0187F19E0F03F
F03C7B72FA4E> 107 D<EAFFC0B3B3B3B3B3B3AF0A7B73FA25> I<DB1FFC923801FFC026
FFC001B500C0021F13FC020702F0027F13FF021F02FC49B612C04A6E498191B7010F8101
C170488101C37048819027C7FE007F91387FE007D9CFF8010F9027E0FF80007FD9DFE001
03D9F1FEC7EA3FFF4A01004A140FD9FF8091267FF3F88091C8D9FFF01680496F4980495F
7182494D16C0A2496F90C9FCA3495EA4495EB3B3AC624A72C97F> I<ED1FF826FFC001B5
7E020714E0021F14F8027F8091B67E01C18101C316809038C7FE00D9CFF0011F13C0D9DF
E0010713E0D9FF80130191C8FC18F049157F5B173F4916F8A249151FA35BA45BB3B3AC35
4A72C952> I<ED1FFC92B57E020714F0021F14FC027F14FF91B77E010316E0498249D9F0
077F4990C76C7ED93FFCEC1FFED97FF0EC07FF4A8049486E7F48496E7F4890C96C7E4916
3F4848707E49160F000F844916074848707EA34848707EA2491600007F84A490CB7E4819
80AC6D17FF007F1900A36D5EA2003F606D1603A2001F606D1607A26C6C4C5A6D161F0007
606D163F6C6C4C5A6C6D4B5A6E5C6C6D4A5BD97FF8020F90C7FC6D6C4A5A6DB46CEBFFFC
6DD9F0075B6D90B65A6D5E010016806E92C8FC021F14FC020714F0020114C09126001FFC
C9FC414C79CA50> I<ED0FFCD8FFC090B57E020714E0021F80027F14FC91B67E01C38101
C7829026CFFE0080D9DFF0131FD9FFC001077F4A01017F49C87F49157F496F7E171F496F
7E491507717E5B83198083A2187F19C0A2183FA319E0181FAC183FA219C0A3187FA21980
18FFA24D1300A25F6D4B5AA26D4B5A6D151F4D5A6D4B5A6DEC01FF6D4A5B6E010F5BD9DF
E0013F5B9026CFFC01B5C7FC01C7B65A01C35D01C15D01C05D023F14C0020F5C020301FC
C8FC9138003FE092CAFCB3AE3B6B72C952> I<ED01F8B46C131F157FEC01FF1407141F5C
5C9138FFFE00018113F0018313C0018790C7FCEB8FFCEB9FF85CEBBFC0A2EBFF8091C8FC
5BA25B5BA35BA25BA45BB3B3A7254A72C936> 114 D<91380FFFC091B512FE0107ECFFC0
011F15F8017F15FE90B812804817C05A489038F0003F4890C70003138049EC007FD81FF8
151F491507003F16014992C7FCA2485AA77FA26C7E7F7F6CB4FC6C13C014F86CEBFF806C
14FC6CECFFE06C15FC6D14FF6D15C0010F81010315F8010081020F80DA007F7F03071480
DB003F13C0160F040313E01600EF7FF0173FA2EF1FF8A2170FA7EF1FF0A20070163F127C
007FEE7FE001C015FF01F0020313C0B5020F138002F0137F91B712006C5E001F5E000716
F0C65E011F1580010302FCC7FCD9000F13C0354C7CCA3D> I<EB03FFB3A3B812FEA8D800
0390C9FCB3B3AF8117026D15066F131F5F6F13FF6DEBF80F92B61280A26EECFE006E14F8
6E14E06E14806E01FCC7FC02011380315F7DDD3A> I<D8FFC0ED1FF8B3B3B0173FA3177F
A217FFA26D5C5E007F5D6D5C6D143F01FEECFFDF273FFF8007139F91B6121F6C15FC6C15
F86C15E06C15806CECFE006C6C13F0D90FFEC9FC354A72C852> I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Fi 0 208 a(Ammunition) 53 b(\(Reusable) h(pack) l(ages\)) f(-) g
(C) g(interface) p 0 321 3900 24 v Fh 0 435 a(Vladimir) 27
b(Mak) -5 b(aro) n(v,) p Fg 26 w(vmakarov@users.s) o(ou) o(rc) o(efo) o
(rg) o(e.) o(net) p Fh 1446 w(Apr) 28 b(5,) f(2001) p
Ff 0 741 a(This) h(do) r(cument) f(describ) r(es) g(ammunition) f
(\(reusable) h(pack) n(ages) f(written) h(in) h(C/C++\).) p
Fe 0 1079 a(Con) l(ten) l(ts) p Fd 0 1318 a(1) 77 b(In) m(tro) s
(duction) 3201 b(1) 0 1558 y(2) 77 b(P) m(ac) m(k) -5
b(age) 33 b(for) f(allo) s(cating) f(memory) e(with) i(\034xing) h
(some) d(allo) s(cation) i(errors) 1007 b(2) 0 1797 y(3) 77
b(P) m(ac) m(k) -5 b(age) 33 b(for) f(w) m(ork) h(with) e(v) -5
b(ariable) 32 b(length) f(ob) 5 b(jects) 1815 b(4) 0
2037 y(4) 77 b(P) m(ac) m(k) -5 b(age) 33 b(for) f(w) m(ork) h(with) e
(stac) m(ks) i(of) e(ob) 5 b(jects) 2078 b(6) 0 2276
y(5) 77 b(P) m(ac) m(k) -5 b(age) 33 b(for) f(w) m(ork) h(with) e(hash)
h(tables) 2296 b(8) 0 2516 y(6) 77 b(P) m(ac) m(k) -5
b(age) 33 b(for) f(w) m(ork) h(with) e(source) h(co) s(de) f(p) s
(ositions) 1827 b(10) 0 2755 y(7) 77 b(P) m(ac) m(k) -5
b(age) 33 b(for) f(output) g(of) g(compiler) d(messages) 1980
b(12) 0 2995 y(8) 77 b(P) m(ac) m(k) -5 b(age) 33 b(for) f(w) m(ork) h
(with) e(command) f(line) 2131 b(15) 0 3234 y(9) 77 b(P) m(ac) m(k) -5
b(age) 33 b(for) f(w) m(ork) h(with) e(bit) g(strings) 2288
b(17) 0 3474 y(10) 29 b(P) m(ac) m(k) -5 b(age) 33 b(for) f(mac) m
(hine-indep) s(enden) m(t) e(arbitrary) j(precision) e(in) m(teger) h
(arithmetic) 685 b(19) 0 3713 y(11) 29 b(P) m(ac) m(k) -5
b(age) 33 b(for) f(mac) m(hine-indep) s(enden) m(t) e(IEEE) h
(\035oating) g(p) s(oin) m(t) h(arithmetic) 968 b(23) 0
3952 y(12) 29 b(Tic) m(k) m(er) k(pac) m(k) -5 b(age) 3064
b(35) 0 4192 y(13) 29 b(Earley) i(parser) 3121 b(36) p
Fe 0 4530 a(1) 131 b(In) l(tro) t(duction) p Fh 0 4769
a(This) 35 b(do) r(cumen) n(t) f(describ) r(es) g(amm) n(unition) h
(\(reusable) f(pac) n(k) -5 b(ages) 32 b(written) j(in) g(C/C++\).) 57
b(The) 35 b(pac) n(k) -5 b(ages) 32 b(are) i(orien) n(ted) 0
4883 y(to) n(w) n(ards) d(creation) h(of) h(compiler) g(and) g
(cross-compiler.) 51 b(Curren) n(tly) 32 b(there) h(are) f(the) i
(follo) n(wing) e(pac) n(k) -5 b(ages) 31 b(\(their) j(names) 0
4996 y(and) 27 b(tasks\):) p Fd 0 5236 a(allo) s(cate) p
Fh 208 5382 a(allo) r(cating) f(and) h(freeing) g(memory) g(with) h
(\034xing) f(some) g(allo) r(cation) g(errors) p 90 rotate
dyy eop
%%Page: 2 2
2 1 bop 0 -167 3900 5 v Fd 0 -200 a(2.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(allo) s(cating) f(memory) e(with) i(\034xing) h
(some) d(allo) s(cation) i(errors) p Fh 989 w(2) p Fd
0 162 a(vlob) 5 b(ject) p Fh 208 308 a(w) n(ork) 26 b(with) i(v) -5
b(ariable) 26 b(length) i(ob) 5 b(jects) p Fd 0 488 a(ob) g(jstac) m(k)
p Fh 208 635 a(w) n(ork) 26 b(with) i(stac) n(ks) e(of) i(ob) 5
b(jects) p Fd 0 815 a(hash) m(tab) p Fh 208 962 a(w) n(ork) 26
b(with) i(hash) f(tables) p Fd 0 1142 a(p) s(osition) p
Fh 208 1289 a(w) n(ork) f(with) i(source) e(co) r(de) h(p) r(ositions) p
Fd 0 1469 a(errors) p Fh 208 1616 a(output) h(of) f(compiler) g
(messages) p Fd 0 1796 a(commline) p Fh 208 1942 a(w) n(ork) f(with) i
(command) f(line) p Fd 0 2122 a(bits) p Fh 208 2269 a(w) n(ork) f(with)
i(bit) g(strings) p Fd 0 2449 a(arithm) p Fh 208 2596
a(implemen) n(ting) f(host) h(mac) n(hine-indep) r(enden) n(tly) f
(arbitrary) e(precision) i(in) n(teger) f(n) n(um) n(b) r(ers) h
(arithmetic) p Fd 0 2776 a(IEEE) p Fh 208 2923 a(implemen) n(ting) g
(host) h(mac) n(hine-indep) r(enden) n(tly) f(IEEE) i(\035oating) e(p) r
(oin) n(t) g(arithmetic) p Fd 0 3103 a(tic) m(k) m(er) p
Fh 208 3249 a(timer) p Fd 0 3429 a(earley) p Fh 208 3576
a(Earley) f(parser) p Fe 0 3915 a(2) 131 b(P) l(ac) l(k) -7
b(age) 38 b(for) g(allo) t(cating) g(memory) f(with) h(\034xing) h
(some) d(allo) t(cation) j(errors) p Fh 0 4153 a(Dev) n(eloping) i(mo) r
(dern) g(compilers) f(it) i(is) f(necessary) f(to) h(a) n(v) n(oid) f
(arbitrary) f(limits) j(on) g(the) f(length) h(or) e(n) n(um) n(b) r
(er) h(of) h(an) n(y) 0 4267 y(data) 29 b(structure) f(b) n(y) h(allo) r
(cating) f(all) h(data) g(structures) f(dynamically) -7
b(.) 41 b(Here) 28 b(the) i(pac) n(k) -5 b(age) 27 b(`allo) r(cate') i
(whic) n(h) g(implemen) n(ts) 0 4380 y(allo) r(cation) d(and) i
(freeing) f(memory) g(with) h(automatic) f(\034xing) g(allo) r(cation) f
(errors) g(is) h(suggested.) 0 4537 y(The) 35 b(pac) n(k) -5
b(age) 33 b(automatically) g(calls) h(action) g(on) h(situation) f(`no)
h(memory'.) 57 b(The) 35 b(action) f(nev) n(er) g(returns) g(con) n
(trol) f(bac) n(k) 0 4650 y(b) r(ecause) 21 b(after) h(calling) f
(function) i(whic) n(h) f(pro) r(cesses) e(allo) r(cation) h(error) f
(the) i(function) h(`ab) r(ort') e(is) h(alw) n(a) n(ys) e(called.) 34
b(Therefore) 0 4764 y(the) 28 b(function) g(whic) n(h) g(pro) r(cesses)
d(allo) r(cation) i(error) f(should) h(not) g(return) g(con) n(trol) g
(bac) n(k.) 0 4920 y(The) 36 b(in) n(terface) g(part) f(of) h(the) h
(pac) n(k) -5 b(age) 34 b(is) i(\034le) h(`allo) r(cate.h'.) 62
b(De\034ning) 36 b(macro) f(`NDEBUG') i(\(e.g.) 63 b(b) n(y) 36
b(option) f(`-D') i(in) 0 5034 y(C) 30 b(compiler) g(command) f(line\))
i(b) r(efore) f(the) h(pac) n(k) -5 b(age) 28 b(macros) h(usage) g
(disables) g(\034xing) h(some) g(in) n(ternal) f(errors) f(and) i
(errors) 0 5148 y(of) j(usage) e(of) i(the) g(pac) n(k) -5
b(age.) 50 b(The) 33 b(implemen) n(tation) f(part) h(is) f(\034le) h
(`allo) r(cate.c'.) 51 b(The) 33 b(in) n(terface) f(con) n(tains) f
(the) i(follo) n(wing) 0 5261 y(external) 27 b(de\034nitions) g(and) h
(macros:) p 90 rotate dyy eop
%%Page: 3 3
3 2 bop 0 -167 3900 5 v Fd 0 -200 a(2.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(allo) s(cating) f(memory) e(with) i(\034xing) h
(some) d(allo) s(cation) i(errors) p Fh 989 w(3) p Fd
0 162 a(F) -8 b(unction) 32 b(`c) m(hange_allo) s
(cation_error_function') p Fc 704 349 a(`void) 40 b
(change_allocation_error_funct) q(ion) 939 453 y(\(void) h
(\(*error_function\)) h(\(void\)\)\)) f(\(void\)') p
Fh 208 754 a(is) 23 b(used) h(for) g(c) n(hanging) e(up) j(action) e
(on) h(the) g(situation) g(`no) f(memory'.) 35 b(The) 24
b(function) h(also) d(returns) i(former) f(function) 208
867 y(whic) n(h) k(w) n(as) g(early) f(action) h(on) g(the) h
(situation) g(`no) f(memory'.) p Fd 0 1047 a(F) -8 b(unction) 32
b(`default_allo) s(cation_error_function') p Fc 704 1234
a(`void) 40 b(default_allocation_error_func) q(tion) 46
b(\(void\)') p Fh 208 1535 a(is) 28 b(default) g(action) g(of) h(the) f
(pac) n(k) -5 b(age) 27 b(on) h(the) h(situation) f(`no) g(memory'.) 38
b(This) 28 b(action) g(consists) f(of) i(output) g(message) 208
1649 y(`***) d(no) h(memory) g(***') f(to) h(standard) g(error) f
(stream) g(and) i(calling) f(function) h(`exit') f(with) i(co) r(de) e
(equals) g(to) g(1.) p Fd 0 1829 a(Macro) 32 b(`MALLOC') p
Fc 704 2016 a(`MALLOC\(ptr,) 42 b(size\)') p Fh 208 2316
a(is) 34 b(analogous) f(to) i(ANSI) h(C) f(library) e(function) j
(`mallo) r(c'.) 58 b(But) 36 b(the) f(macro) f(has) g(t) n(w) n(o) g
(parameters.) 57 b(The) 35 b(\034rst) g(is) 208 2430
y(p) r(oin) n(ter) 24 b(v) -5 b(ariable) 24 b(whic) n(h) h(is) g(set) g
(up) h(b) n(y) f(address) e(of) j(allo) r(cated) e(memory) -7
b(.) 35 b(The) 25 b(second) g(is) g(size) g(of) g(needed) g(memory) -7
b(.) p Fd 0 2610 a(Macro) 32 b(`CALLOC') p Fc 704 2797
a(`CALLOC\(ptr,) 42 b(nel,) e(size\)') p Fh 208 3098
a(is) 33 b(analogous) f(to) h(ANSI) i(C) f(library) e(function) i
(`callo) r(c'.) 55 b(But) 35 b(the) f(macro) e(has) h(three) h
(parameters.) 54 b(The) 34 b(\034rst) f(is) 208 3211
y(p) r(oin) n(ter) f(v) -5 b(ariable) 32 b(whic) n(h) h(is) g(set) g
(up) g(b) n(y) g(address) f(of) h(allo) r(cated) f(memory) -7
b(.) 53 b(The) 33 b(last) f(t) n(w) n(o) h(parameters) e(ha) n(v) n(e) h
(the) 208 3325 y(same) 27 b(sense) g(as) f(in) i(standard) f(function) h
(`callo) r(c'.) p Fd 0 3505 a(Macro) k(`FREE') p Fc 704
3692 a(`FREE\(ptr\)') p Fh 208 3993 a(is) 24 b(analogous) e(to) i(ANSI)
h(C) f(library) f(function) i(`free') f(but) h(can) e(accept) h(nil) h
(p) r(oin) n(ter) f(v) -5 b(alue.) 35 b(In) 25 b(this) f(case) g(macro)
e(do) r(es) 208 4106 y(nothing.) p Fd 0 4286 a(Macro) 32
b(`REALLOC') p Fc 704 4474 a(`REALLOC\(new,) 42 b(old,) e(size\)') p
Fh 208 4774 a(is) 35 b(analogous) e(to) i(ANSI) h(C) f(library) f
(function) i(`reallo) r(c') f(but) h(has) e(three) h(parameters.) 59
b(The) 35 b(\034rst) g(parameter) f(is) 208 4888 y(v) -5
b(ariable) 21 b(whic) n(h) i(is) f(set) h(up) g(b) n(y) f(new) h
(address) e(of) i(reallo) r(cated) e(memory) -7 b(.) 35
b(The) 22 b(second) g(is) h(old) g(address) e(of) i(reallo) r(cated) 208
5001 y(memory) -7 b(.) 36 b(And) 28 b(third) g(is) f(new) h(size) f(of)
g(reallo) r(cated) g(memory) -7 b(.) p 90 rotate dyy
eop
%%Page: 4 4
4 3 bop 0 -167 3900 5 v Fd 0 -200 a(3.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(v) -5 b(ariable) 32
b(length) f(ob) 5 b(jects) p Fh 1797 w(4) p Fe 0 162
a(3) 131 b(P) l(ac) l(k) -7 b(age) 44 b(for) g(w) l(ork) h(with) f(v) -7
b(ariable) 45 b(length) f(ob) 7 b(jects) p Fh 0 400 a(The) 24
b(pac) n(k) -5 b(age) 23 b(`vlob) 5 b(ject') 24 b(implemen) n(ts) g(w) n
(ork) f(with) h(v) -5 b(ariable) 23 b(length) i(ob) 5
b(ject) 24 b(\(VLO\)) g(and) g(uses) g(pac) n(k) -5 b(age) 22
b(`allo) r(cate'.) 35 b(An) n(y) 0 514 y(n) n(um) n(b) r(er) 28
b(of) h(b) n(ytes) f(ma) n(y) g(b) r(e) h(added) g(to) f(and) h(remo) n
(v) n(ed) e(from) h(the) h(end) g(of) f(VLO.) h(If) g(it) g(is) f
(needed) h(the) g(memory) f(allo) r(cated) 0 628 y(for) j(storing) f(v)
-5 b(ariable) 30 b(length) h(ob) 5 b(ject) 31 b(ma) n(y) g(b) r(e) g
(expanded) g(p) r(ossibly) g(with) h(c) n(hanging) e(the) h(ob) 5
b(ject) 31 b(place.) 48 b(But) 31 b(b) r(et) n(w) n(een) 0
741 y(an) n(y) d(additions) g(of) g(the) h(b) n(ytes) f(\(or) g
(tailoring\)) g(the) g(ob) 5 b(ject) 29 b(place) f(is) g(not) h(c) n
(hanged.) 38 b(T) -7 b(o) 28 b(decrease) f(n) n(um) n(b) r(er) i(of) f
(c) n(hanges) f(of) 0 855 y(the) h(ob) 5 b(ject) 27 b(place) g(the) h
(memory) f(b) r(eing) h(allo) r(cated) e(for) h(the) h(ob) 5
b(ject) 28 b(is) f(longer) f(than) i(the) g(curren) n(t) f(ob) 5
b(ject) 27 b(length.) 0 1011 y(Because) 20 b(argumen) n(ts) g(of) h
(all) f(macros) g(whic) n(h) h(return) f(a) h(result) f
(\(`VLO_LENGTH',) i(`VLO_BEGIN',) f(`VLO_BOUND',) 0 1125
y(and) 27 b(`VLO_END'\)) i(ma) n(y) e(b) r(e) h(ev) -5
b(aluated) 27 b(man) n(y) g(times) h(no) f(side-e\033ects) g(should) g
(b) r(e) h(in) g(the) g(argumen) n(ts.) 0 1281 y(The) k(pac) n(k) -5
b(age) 30 b(uses) i(pac) n(k) -5 b(age) 30 b(`allo) r(cate'.) 49
b(The) 31 b(in) n(terface) h(part) f(of) h(the) g(pac) n(k) -5
b(age) 30 b(is) i(\034le) g(`vlob) 5 b(ject.h'.) 49 b(De\034ning) 32
b(macro) 0 1395 y(`NDEBUG') 24 b(\(e.g.) 35 b(b) n(y) 21
b(option) h(`-D') h(in) f(C) g(compiler) g(command) g(line\)) g(b) r
(efore) g(the) h(pac) n(k) -5 b(age) 20 b(macros) h(usage) g(disables) g
(\034xing) 0 1508 y(some) 32 b(in) n(ternal) f(errors) f(and) i(errors)
e(of) i(usage) f(of) h(the) h(pac) n(k) -5 b(age.) 48
b(The) 33 b(implemen) n(tation) f(part) f(is) h(\034le) h(`vlob) 5
b(ject.c'.) 50 b(The) 0 1622 y(in) n(terface) 27 b(con) n(tains) f(the)
i(follo) n(wing) f(de\034nitions) g(and) h(macros:) p
Fd 0 1859 a(T) m(yp) s(e) k(`vlo_t') p Fh 208 2005 a(describ) r(es) f
(a) h(descriptor) f(of) h(v) -5 b(ariable) 31 b(length) h(ob) 5
b(ject.) 51 b(All) 32 b(w) n(ork) f(with) i(v) -5 b(ariable) 31
b(length) h(ob) 5 b(ject) 32 b(is) g(executed) g(b) n(y) 208
2118 y(the) f(follo) n(wing) g(macros) e(through) i(the) h
(descriptors.) 47 b(Structure) 31 b(\(implemen) n(tation\)) h(of) f
(this) h(t) n(yp) r(e) f(is) h(not) f(needed) 208 2232
y(for) g(using) h(v) -5 b(ariable) 31 b(length) h(ob) 5
b(ject.) 50 b(But) 32 b(it) g(should) g(remem) n(b) r(er) f(that) i(w) n
(ork) d(with) j(the) f(ob) 5 b(ject) 32 b(through) f(sev) n(eral) 208
2345 y(descriptors) 26 b(is) h(not) h(safe.) p Fd 0 2524
a(Macro) k(`VLO_DEF) -11 b(A) m(UL) j(T_LENGTH') p Fh
208 2671 a(has) 25 b(v) -5 b(alue) 26 b(whic) n(h) f(is) h(default) g
(initial) g(size) g(of) g(memory) f(is) h(allo) r(cated) f(for) g(VLO) h
(when) g(the) g(ob) 5 b(ject) 26 b(is) f(created) g(\(with) 208
2784 y(zero) 35 b(initial) h(size\).) 64 b(Original) 35
b(v) -5 b(alue) 36 b(of) g(the) h(macros) e(is) h(equal) g(to) g(512.)
62 b(This) 36 b(macro) f(can) h(b) r(e) h(rede\034ned) f(in) h(C) 208
2898 y(compiler) 26 b(command) i(line) f(or) g(with) h(the) g(aid) f
(of) h(directiv) n(e) f(`#undef) 6 b(') 29 b(b) r(efore) e(an) n(y) g
(using) g(the) h(pac) n(k) -5 b(age) 26 b(macros.) p
Fd 0 3077 a(Macro) 32 b(`VLO_CREA) -8 b(TE') p Fc 782
3262 a(`VLO_CREATE\(vlo,) 43 b(initial_length\)') p Fh
208 3561 a(is) 22 b(used) h(for) f(creation) f(of) i(VLO) f(with) h
(initial) g(zero) f(length.) 35 b(Initial) 22 b(memory) g(allo) r
(cated) g(for) g(VLO) h(whose) e(descriptor) 208 3675
y(is) i(giv) n(en) f(as) g(the) i(\034rst) e(macro) g(parameter) g(is) h
(giv) n(en) f(as) g(the) i(second) e(parameter.) 34 b(If) 23
b(the) h(second) e(parameter) g(is) h(equal) 208 3788
y(to) k(zero) f(then) j(the) e(initial) h(allo) r(cated) f(memory) g
(length) g(is) h(equal) f(to) g(`VLO_DEF) -9 b(A) n(UL) i(T_LENGTH'.) p
Fd 0 3967 a(`VLO_DELETE') p Fc 782 4152 a(`VLO_DELETE\(vlo\)') p
Fh 208 4451 a(is) 27 b(used) h(for) f(freeing) g(memory) f(used) i(b) n
(y) f(VLO) g(whose) g(descriptor) g(is) g(giv) n(en) g(as) g(the) h
(macro) e(parameter.) p Fd 0 4630 a(Macro) 32 b(`VLO_NULLIFY') p
Fc 782 4816 a(`VLO_NULLIFY\(vlo\)') p Fh 208 5115 a(mak) n(es) 24
b(that) i(length) f(of) h(VLO) f(whose) f(descriptor) h(is) g(giv) n
(en) g(as) f(the) i(macro) e(parameter) g(will) i(b) r(e) g(equal) f
(to) g(zero) f(\(but) 208 5228 y(memory) i(for) h(VLO) h(is) f(not) h
(freed) f(and) g(not) h(reallo) r(cated\).) p Fd 0 5407
a(Macro) k(`VLO_T) -8 b(AILOR') p 90 rotate dyy eop
%%Page: 5 5
5 4 bop 0 -167 3900 5 v Fd 0 -200 a(3.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(v) -5 b(ariable) 32
b(length) f(ob) 5 b(jects) p Fh 1797 w(5) p Fc 782 162
a(`VLO_TAILOR\(vlo\)') p Fh 208 460 a(mak) n(es) 33 b(that) j(length) f
(of) g(memory) f(allo) r(cated) g(for) g(VLO) h(whose) g(descriptor) e
(is) i(giv) n(en) f(as) h(the) g(macro) f(parameter) 208
574 y(b) r(ecomes) 27 b(equal) g(to) g(VLO) h(length.) p
Fd 0 752 a(Macro) k(`VLO_LENGTH') p Fc 782 937 a(`VLO_LENGTH\(vlo\)') p
Fh 208 1236 a(returns) 26 b(curren) n(t) h(length) h(of) f(VLO) h
(whose) e(descriptor) h(is) g(giv) n(en) g(as) g(the) h(macro) e
(parameter.) p Fd 0 1415 a(Macros) 32 b(`VLO_BEGIN',) e(`VLO_END',) h
(`VLO_BOUND') p Fc 782 1600 a(`VLO_BEGIN\(vlo\)',) 43
b(`VLO_END\(vlo\)',) g(`VLO_BOUND\(vlo\)') p Fh 208 1898
a(return) 26 b(p) r(oin) n(ter) h(\(of) h(t) n(yp) r(e) g(`v) n(oid) f
(*'\)) g(to) g(corresp) r(ondingly) e(the) j(\034rst,) g(the) f(last) g
(b) n(yte) h(of) f(VLO) g(whose) g(descriptor) f(is) 208
2012 y(giv) n(en) g(as) g(the) i(macros) d(parameter,) h(and) h(p) r
(oin) n(ter) g(to) f(the) i(last) f(b) n(yte) g(plus) g(one.) 36
b(Remem) n(b) r(er) 27 b(that) h(the) f(ob) 5 b(ject) 27
b(ma) n(y) 208 2125 y(c) n(hange) f(o) n(wn) h(place) g(after) g(an) n
(y) g(addition.) p Fd 0 2304 a(Macro) 32 b(`VLO_SHOR) -8
b(TEN') p Fc 782 2489 a(`VLO_SHORTEN\(vlo,) 43 b(n\)') p
Fh 208 2788 a(remo) n(v) n(es) 21 b(n) j(b) n(ytes) f(from) g(the) h
(end) g(of) g(VLO) f(whose) g(descriptor) f(is) i(giv) n(en) f(as) g
(the) h(\034rst) f(parameter.) 34 b(VLO) 23 b(is) h(n) n(ulli\034ed) 208
2901 y(if) k(its) f(length) h(is) f(less) h(than) f(n.) p
Fd 0 3080 a(Macro) 32 b(`VLO_EXP) -8 b(AND') p Fc 782
3265 a(`VLO_EXPAND\(vlo,) 43 b(length\)') p Fh 208 3563
a(increases) 27 b(length) i(of) g(VLO) g(whose) f(descriptor) g(is) h
(giv) n(en) f(as) g(the) h(\034rst) g(parameter) f(on) g(n) n(um) n(b) r
(er) h(of) g(b) n(ytes) g(giv) n(en) f(as) 208 3677 y(the) g(second) e
(parameter.) 36 b(The) 27 b(v) -5 b(alues) 27 b(of) h(b) n(ytes) f
(added) h(to) f(the) h(end) g(of) f(VLO) h(will) f(b) r(e) h(not) g
(de\034ned.) p Fd 0 3856 a(Macro) k(`VLO_ADD_BYTE') p
Fc 782 4041 a(`VLO_ADD_BYTE\(vlo,) 44 b(b\)') p Fh 208
4339 a(adds) 36 b(b) n(yte) g(giv) n(en) g(as) g(the) h(second) f
(parameter) f(to) i(the) g(end) g(of) f(VLO) h(whose) f(descriptor) f
(is) i(giv) n(en) e(as) h(the) h(\034rst) 208 4453 y(parameter.) p
Fd 0 4631 a(Macro) 32 b(`VLO_ADD_MEMOR) -8 b(Y') p Fc
782 4816 a(`VLO_ADD_MEMORY\(vlo,) 44 b(str,) c(length\)') p
Fh 208 5115 a(adds) 25 b(memory) g(starting) f(with) i(address) f(giv) n
(en) f(as) h(the) h(second) f(macro) g(parameter) f(and) h(with) h
(length) g(giv) n(en) f(as) g(the) 208 5229 y(third) i(parameter) f(to)
i(the) g(end) f(of) h(VLO) f(whose) g(descriptor) f(is) i(giv) n(en) f
(as) g(the) h(\034rst) f(parameter.) p Fd 0 5407 a(Macro) 32
b(`VLO_ADD_STRING') p 90 rotate dyy eop
%%Page: 6 6
6 5 bop 0 -167 3900 5 v Fd 0 -200 a(4.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(stac) m(ks) i(of) e(ob) 5
b(jects) p Fh 2060 w(6) p Fc 782 162 a(`VLO_ADD_STRING\(vlo,) 44
b(str\)') p Fh 208 462 a(adds) 33 b(C) h(string) g(\(with) h(end) f
(mark) n(er) f(0\)) h(giv) n(en) f(as) g(the) i(second) e(macro) g
(parameter) g(to) h(the) g(end) h(of) f(VLO) g(whose) 208
575 y(descriptor) 28 b(is) h(giv) n(en) g(as) g(the) g(\034rst) h
(parameter.) 41 b(Before) 28 b(the) i(addition) f(the) h(macro) e
(deletes) i(last) f(c) n(haracter) e(of) j(the) 208 689
y(VLO.) d(The) h(last) f(c) n(haracter) e(is) j(suggested) e(to) i(b) r
(e) g(C) f(string) g(end) h(mark) n(er) e(0.) p Fe 0
1027 a(4) 131 b(P) l(ac) l(k) -7 b(age) 44 b(for) g(w) l(ork) h(with) f
(stac) l(ks) h(of) f(ob) 7 b(jects) p Fh 0 1266 a(The) 31
b(pac) n(k) -5 b(age) 30 b(`ob) 5 b(jstac) n(k') 30 b(is) h(based) g
(on) g(pac) n(k) -5 b(age) 29 b(`allo) r(cate') i(and) g(implemen) n
(ts) g(e\036cien) n(t) h(w) n(ork) e(with) h(stac) n(ks) f(of) i(ob) 5
b(jects) 0 1379 y(\(OS\).) 42 b(W) -7 b(ork) 40 b(with) i(the) g(ob) 5
b(ject) 41 b(on) g(the) g(stac) n(k) f(top) i(is) f(analogous) e(to) i
(one) g(with) g(a) g(v) -5 b(ariable) 40 b(length) i(ob) 5
b(ject.) 77 b(One) 0 1493 y(motiv) -5 b(ation) 38 b(for) f(the) h(pac) n
(k) -5 b(age) 36 b(is) i(the) g(problem) g(of) f(gro) n(wing) f(c) n
(har) h(strings) g(in) h(sym) n(b) r(ol) f(tables.) 67
b(Memory) 37 b(for) h(OS) f(is) 0 1606 y(allo) r(cated) e(b) n(y) h
(segmen) n(ts.) 61 b(A) 37 b(segmen) n(t) e(ma) n(y) g(con) n(tain) h
(more) f(one) h(ob) 5 b(jects.) 61 b(The) 36 b(most) g(recen) n(tly) f
(allo) r(cated) h(segmen) n(t) 0 1720 y(con) n(tains) 26
b(ob) 5 b(ject) 26 b(on) g(the) h(top) g(of) f(OS.) h(If) g(there) f
(is) g(not) h(su\036cien) n(t) g(free) f(memory) g(for) g(the) h(top) f
(ob) 5 b(ject) 26 b(than) h(new) g(segmen) n(t) 0 1834
y(is) f(created) g(and) g(the) h(top) g(ob) 5 b(ject) 26
b(is) g(transferred) f(in) n(to) h(the) h(new) g(segmen) n(t,) f(i.e.)
36 b(there) 27 b(is) f(not) g(an) n(y) g(memory) g(reallo) r(cation.) 0
1947 y(Therefore) g(the) i(top) g(ob) 5 b(ject) 27 b(ma) n(y) g(c) n
(hange) f(its) i(address.) 36 b(But) 27 b(other) g(ob) 5
b(jects) 27 b(nev) n(er) g(c) n(hange) f(address.) 0
2104 y(Because) 49 b(argumen) n(ts) f(of) i(all) g(macros) f(whic) n(h)
g(return) h(a) g(result) f(\(`OS_TOP_LENGTH',) h(`OS_TOP_BEGIN',) 0
2217 y(`OS_TOP_BOUND',) 36 b(and) h(`OS_TOP_END'\)) g(ma) n(y) f(b) r
(e) h(ev) -5 b(aluated) 36 b(man) n(y) g(times) h(no) g(side-e\033ects)
f(should) h(b) r(e) g(in) 0 2331 y(the) 28 b(argumen) n(ts.) 0
2487 y(The) j(pac) n(k) -5 b(age) 30 b(uses) h(pac) n(k) -5
b(age) 29 b(`allo) r(cate'.) 47 b(The) 31 b(in) n(terface) g(part) g
(of) g(the) g(pac) n(k) -5 b(age) 30 b(is) h(\034le) g(`ob) 5
b(jstac) n(k.h'.) 47 b(De\034ning) 31 b(macro) 0 2601
y(`NDEBUG') 24 b(\(e.g.) 35 b(b) n(y) 21 b(option) h(`-D') h(in) f(C) g
(compiler) g(command) g(line\)) g(b) r(efore) g(the) h(pac) n(k) -5
b(age) 20 b(macros) h(usage) g(disables) g(\034xing) 0
2714 y(some) 31 b(in) n(ternal) g(errors) e(and) i(errors) f(of) h
(usage) g(of) g(the) h(pac) n(k) -5 b(age.) 47 b(The) 32
b(implemen) n(tation) f(part) g(is) h(\034le) g(`ob) 5
b(jstac) n(k.c'.) 47 b(The) 0 2828 y(in) n(terface) 27
b(con) n(tains) f(the) i(follo) n(wing) f(de\034nitions) g(and) h
(macros:) p Fd 0 3066 a(T) m(yp) s(e) k(`os_t') p Fh
208 3213 a(describ) r(es) c(a) h(descriptor) g(of) g(stac) n(k) f(of) i
(ob) 5 b(jects.) 42 b(All) 30 b(w) n(ork) e(with) i(stac) n(k) e(of) i
(ob) 5 b(jects) 28 b(is) i(executed) f(b) n(y) g(the) h(follo) n(wing)
208 3327 y(macros) 25 b(through) h(the) i(descriptors.) 35
b(Structure) 27 b(\(implemen) n(tation\)) h(of) f(this) g(t) n(yp) r(e)
g(is) g(not) h(needed) f(for) f(using) h(stac) n(k) 208
3440 y(of) g(ob) 5 b(jects.) 36 b(But) 28 b(it) g(should) g(remem) n(b)
r(er) e(that) i(w) n(ork) e(with) i(the) g(stac) n(k) f(through) g(sev)
n(eral) e(descriptors) h(is) i(not) f(safe.) p Fd 0 3620
a(Macro) 32 b(`OS_DEF) -11 b(A) m(UL) j(T_SEGMENT_LENGTH') p
Fh 208 3766 a(has) 29 b(v) -5 b(alue) 31 b(whic) n(h) f(is) g(default) h
(size) f(of) g(memory) g(segmen) n(ts) f(whic) n(h) i(will) f(b) r(e) h
(allo) r(cated) f(for) f(OS) i(when) f(the) h(stac) n(k) e(is) 208
3880 y(created) 24 b(\(with) i(zero) d(initial) j(segmen) n(t) e
(size\).) 36 b(This) 25 b(is) g(also) f(minimal) h(size) g(of) g(all) f
(segmen) n(ts.) 35 b(Original) 24 b(v) -5 b(alue) 25
b(of) g(the) 208 3994 y(macros) k(is) h(equal) h(to) f(512.) 46
b(This) 30 b(macro) g(can) g(b) r(e) h(rede\034ned) g(in) g(C) g
(compiler) f(command) g(line) h(or) f(with) h(the) h(aid) e(of) 208
4107 y(directiv) n(e) c(`#undef) 6 b(') 29 b(b) r(efore) f(an) n(y) e
(using) i(the) g(pac) n(k) -5 b(age) 25 b(macros.) p
Fd 0 4287 a(Macro) 32 b(`OS_CREA) -8 b(TE') p Fc 704
4473 a(`OS_CREATE\(os,) 42 b(initial_segment_length\)') p
Fh 208 4773 a(creates) 35 b(OS) h(whic) n(h) h(con) n(tains) e(the) i
(single) f(zero) g(length) h(ob) 5 b(ject.) 63 b(OS) 37
b(descriptor) e(is) h(giv) n(en) g(as) g(the) h(\034rst) f(macro) 208
4887 y(parameter.) 43 b(Minim) n(um) 31 b(size) f(of) g(memory) f
(segmen) n(ts) h(whic) n(h) g(will) g(b) r(e) h(allo) r(cated) e(for) h
(OS) g(is) g(giv) n(en) g(as) f(the) i(second) 208 5000
y(parameter.) k(If) 27 b(the) h(second) e(parameter) g(is) h(equal) f
(to) h(zero) f(the) i(allo) r(cated) e(memory) g(segmen) n(ts) h
(length) g(is) g(equal) f(to) 208 5114 y(`OS_DEF) -9
b(A) n(UL) i(T_SEGMENT_LENGTH'.) 28 b(But) g(in) f(an) n(y) f(case) g
(the) h(segmen) n(t) f(length) h(is) g(alw) n(a) n(ys) e(not) i(less) f
(than) 208 5228 y(maxim) n(um) h(alignmen) n(t.) p Fd
0 5407 a(Macro) 32 b(`OS_DELETE') p 90 rotate dyy eop
%%Page: 7 7
7 6 bop 0 -167 3900 5 v Fd 0 -200 a(4.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(stac) m(ks) i(of) e(ob) 5
b(jects) p Fh 2060 w(7) p Fc 704 162 a(`OS_DELETE\(os\)') p
Fh 208 460 a(is) 27 b(used) h(for) f(freeing) g(all) g(memory) g(used) g
(b) n(y) g(OS) h(whose) f(descriptor) f(is) h(giv) n(en) g(as) g(the) h
(macro) e(parameter.) p Fd 0 639 a(Macro) 32 b(`OS_EMPTY') p
Fc 704 824 a(`OS_EMPTY\(os\)') p Fh 208 1123 a(is) 27
b(used) h(for) f(remo) n(ving) e(all) j(ob) 5 b(jects) 27
b(and) g(freeing) g(all) g(memory) g(allo) r(cated) g(for) g(OS) g
(except) h(for) f(the) h(\034rst) f(segmen) n(t.) p Fd
0 1301 a(Macro) 32 b(`OS_TOP_FINISH') p Fc 704 1486 a
(`OS_TOP_FINISH\(os\)') p Fh 208 1785 a(creates) 27 b(new) j(v) -5
b(ariable) 28 b(length) h(ob) 5 b(ject) 29 b(with) g(initial) g(zero) f
(length) i(on) e(the) i(top) f(of) g(OS) g(whose) f(descriptor) g(is) h
(giv) n(en) 208 1898 y(as) g(the) h(macro) e(parameter.) 42
b(The) 30 b(w) n(ork) f(\(analogous) e(to) j(one) g(with) g(v) -5
b(ariable) 29 b(length) g(ob) 5 b(ject\)) 30 b(with) h(ob) 5
b(ject) 29 b(whic) n(h) 208 2012 y(w) n(as) d(on) h(the) h(top) g(of) f
(OS) h(is) f(\034nished,) h(i.e.) 37 b(the) 28 b(ob) 5
b(ject) 27 b(will) h(nev) n(er) f(more) f(c) n(hange) h(address.) p
Fd 0 2190 a(Macro) 32 b(`OS_TOP_NULLIFY') p Fc 704 2375
a(`OS_TOP_NULLIFY\(os\)') p Fh 208 2674 a(mak) n(es) d(that) j(length) f
(of) f(v) -5 b(ariable) 30 b(length) h(ob) 5 b(ject) 31
b(on) f(the) i(top) f(of) g(OS) f(whose) g(descriptor) g(is) h(giv) n
(en) f(as) g(the) h(macro) 208 2788 y(parameter) 26 b(will) h(b) r(e) h
(equal) f(to) h(zero.) p Fd 0 2966 a(Macro) k(`OS_TOP_LENGTH') p
Fc 704 3151 a(`OS_TOP_LENGTH\(os\)') p Fh 208 3450 a(returns) 22
b(curren) n(t) f(length) i(of) g(v) -5 b(ariable) 22
b(length) h(ob) 5 b(ject) 22 b(on) h(the) g(top) g(of) f(OS) h(whose) f
(descriptor) f(is) i(giv) n(en) f(as) g(the) h(macro) 208
3563 y(parameter.) p Fd 0 3742 a(Macros) 32 b(`OS_TOP_BEGIN',) e
(`OS_TOP_END',) h(`OS_TOP_BOUND') p Fc 704 3927 a
(`OS_TOP_BEGIN\(os\)',) 43 b(`OS_TOP_END\(os\)',) g
(`OS_TOP_BOUND\(os\)') p Fh 208 4226 a(return) 25 b(p) r(oin) n(ter) g
(to) h(corresp) r(ondingly) e(the) i(\034rst) f(and) h(the) g(last) g
(b) n(yte) f(of) h(v) -5 b(ariable) 25 b(length) h(ob) 5
b(ject) 25 b(on) h(the) g(top) g(of) f(OS) 208 4339 y(whose) j
(descriptor) g(is) h(giv) n(en) f(as) h(the) h(macros) d(parameter,) h
(and) h(p) r(oin) n(ter) g(to) g(the) h(last) f(b) n(yte) g(plus) g
(one.) 41 b(Remem) n(b) r(er) 208 4453 y(that) 27 b(the) h(top) g(ob) 5
b(ject) 27 b(ma) n(y) g(c) n(hange) f(o) n(wn) h(place) g(after) h(an) n
(y) e(addition.) p Fd 0 4631 a(Macro) 32 b(`OS_TOP_SHOR) -8
b(TEN') p Fc 704 4816 a(`OS_TOP_SHORTEN\(os,) 43 b(n\)') p
Fh 208 5115 a(remo) n(v) n(es) 27 b(n) i(b) n(ytes) g(from) g(the) h
(end) f(of) g(v) -5 b(ariable) 28 b(length) i(ob) 5 b(ject) 29
b(on) g(the) g(top) h(of) f(OS) g(whose) f(descriptor) g(is) h(giv) n
(en) g(as) 208 5229 y(the) f(\034rst) f(parameter.) 35
b(The) 28 b(top) f(v) -5 b(ariable) 27 b(length) g(ob) 5
b(ject) 28 b(is) f(n) n(ulli\034ed) h(if) g(its) g(length) f(is) h
(less) f(than) h(n.) p Fd 0 5407 a(Macro) k(`OS_TOP_EXP) -8
b(AND') p 90 rotate dyy eop
%%Page: 8 8
8 7 bop 0 -167 3900 5 v Fd 0 -200 a(5.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(hash) h(tables) p
Fh 2278 w(8) p Fc 704 162 a(`OS_TOP_EXPAND\(os,) 43 b(length\)') p
Fh 208 462 a(increases) c(length) h(of) h(v) -5 b(ariable) 39
b(length) i(ob) 5 b(ject) 40 b(on) g(the) h(top) g(of) f(OS) g(whose) g
(descriptor) f(is) i(giv) n(en) f(as) f(the) i(\034rst) 208
576 y(parameter) 24 b(on) h(n) n(um) n(b) r(er) g(of) h(b) n(ytes) f
(giv) n(en) g(as) g(the) g(second) g(parameter.) 35 b(The) 26
b(v) -5 b(alues) 25 b(of) g(b) n(ytes) h(added) f(to) g(the) h(end) g
(of) 208 690 y(v) -5 b(ariable) 26 b(length) i(ob) 5
b(ject) 27 b(on) g(the) h(top) g(of) f(OS) h(will) f(b) r(e) h(not) g
(de\034ned.) p Fd 0 870 a(Macro) k(`OS_TOP_ADD_BYTE') p
Fc 704 1057 a(`OS_TOP_ADD_BYTE\(os,) 44 b(b\)') p Fh
208 1357 a(adds) 28 b(b) n(yte) g(giv) n(en) g(as) g(the) h(second) f
(parameter) f(to) h(the) h(end) g(of) g(v) -5 b(ariable) 27
b(length) i(ob) 5 b(ject) 28 b(on) g(the) h(top) g(of) f(OS) h(whose)
208 1471 y(descriptor) d(is) h(giv) n(en) g(as) g(the) h(\034rst) f
(parameter.) p Fd 0 1651 a(Macro) 32 b(`OS_TOP_ADD_MEMOR) -8
b(Y') p Fc 704 1838 a(`OS_TOP_ADD_MEMORY\(os,) 44 b(str,) c(length\)') p
Fh 208 2139 a(adds) 25 b(memory) g(starting) f(with) i(address) f(giv) n
(en) f(as) h(the) h(second) f(macro) g(parameter) f(and) h(with) h
(length) g(giv) n(en) f(as) g(the) 208 2252 y(third) i(parameter) e(to)
i(the) g(end) g(of) g(v) -5 b(ariable) 26 b(length) g(ob) 5
b(ject) 27 b(on) g(the) g(top) g(of) f(OS) h(whose) f(descriptor) g(is)
h(giv) n(en) f(as) g(the) 208 2366 y(\034rst) h(parameter.) p
Fd 0 2546 a(Macro) 32 b(`OS_TOP_ADD_STRING') p Fc 704
2733 a(`OS_TOP_ADD_STRING\(os,) 44 b(str\)') p Fh 208
3034 a(adds) 27 b(C) h(string) f(\(with) i(end) f(mark) n(er) e(0\)) h
(giv) n(en) g(as) g(the) i(second) e(macro) f(parameter) h(to) g(the) h
(end) h(of) e(v) -5 b(ariable) 27 b(length) 208 3147
y(string) c(on) h(the) h(top) f(of) h(OS) f(whose) g(descriptor) f(is) h
(giv) n(en) f(as) h(the) h(\034rst) f(parameter.) 34
b(Before) 24 b(the) g(addition) h(the) f(macro) 208 3261
y(deletes) k(last) f(c) n(haracter) f(of) i(the) g(top) g(v) -5
b(ariable) 27 b(length) h(ob) 5 b(ject.) 38 b(The) 28
b(last) g(c) n(haracter) e(is) i(suggested) e(to) i(b) r(e) h(C) f
(string) 208 3374 y(end) f(mark) n(er) f(0.) p Fe 0 3713
a(5) 131 b(P) l(ac) l(k) -7 b(age) 44 b(for) g(w) l(ork) h(with) f
(hash) g(tables) p Fh 0 3951 a(The) 31 b(most) g(compilers) f(use) h
(searc) n(h) f(structures.) 47 b(Here) 30 b(the) i(pac) n(k) -5
b(age) 29 b(`hash) n(tab') i(whic) n(h) g(implemen) n(ts) g(expandable)
g(hash) 0 4065 y(tables) h(is) g(suggested.) 50 b(This) 33
b(abstract) e(data) h(implemen) n(ts) g(features) g(analogous) e(to) i
(ones) g(of) g(public) h(domain) f(functions) 0 4179
y(`hsearc) n(h',) 25 b(`hcreate') f(and) i(`hdestro) n(y'.) 35
b(The) 25 b(goal) f(of) i(the) g(abstract) e(data) h(creation) f(is) i
(to) f(implemen) n(t) h(additional) f(needed) 0 4292
y(features.) 49 b(The) 31 b(abstract) g(data) g(p) r(ermits) h(to) g(w)
n(ork) e(sim) n(ultaneously) h(with) h(sev) n(eral) e(expandable) h
(hash) g(tables.) 49 b(Besides) 0 4406 y(insertion) 27
b(and) h(searc) n(h) e(of) i(elemen) n(ts) f(the) h(elemen) n(ts) g
(from) f(the) i(hash) e(tables) g(can) h(b) r(e) g(also) f(remo) n(v) n
(ed.) 35 b(The) 28 b(table) g(elemen) n(t) 0 4519 y(can) 37
b(b) r(e) g(only) g(a) f(p) r(oin) n(ter.) 65 b(The) 37
b(size) g(of) g(hash) f(tables) h(is) g(not) g(\034xed.) 65
b(The) 37 b(hash) g(table) f(will) i(b) r(e) f(expanded) g(when) g(its)
0 4633 y(o) r(ccupancy) 27 b(will) h(b) r(ecome) f(big.) 0
4789 y(The) 37 b(abstract) f(data) h(implemen) n(tation) g(is) g(based)
g(on) g(generalized) f(Algorithm) g(D) i(from) f(Kn) n(uth's) g(b) r(o)
r(ok) g("The) g(art) f(of) 0 4903 y(computer) 30 b(programming".) 43
b(Hash) 30 b(table) h(is) f(expanded) h(b) n(y) f(creation) f(of) i
(new) g(hash) f(table) g(and) h(transferring) d(elemen) n(ts) 0
5017 y(from) f(the) h(old) f(table) h(to) f(the) h(new) g(table.) 0
5173 y(The) i(pac) n(k) -5 b(age) 28 b(uses) h(pac) n(k) -5
b(age) 28 b(`allo) r(cate'.) 42 b(The) 29 b(in) n(terface) g(part) g
(of) h(the) g(abstract) e(data) h(is) h(\034le) f(`hash) n(tab.h'.) 42
b(The) 30 b(imple-) 0 5287 y(men) n(tation) d(part) g(is) h(\034le) g
(`hash) n(tab.c'.) 36 b(The) 27 b(in) n(terface) g(con) n(tains) g(the)
h(follo) n(wing) e(external) h(de\034nitions:) p 90 rotate
dyy eop
%%Page: 9 9
9 8 bop 0 -167 3900 5 v Fd 0 -200 a(5.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(hash) h(tables) p
Fh 2278 w(9) p Fd 0 162 a(T) m(yp) s(e) g(`hash_table_en) m(try_t') p
Fh 208 306 a(is) 27 b(describ) r(ed) g(as) g(`v) n(oid) g(*') g(and) h
(represen) n(ts) e(hash) h(table) g(elemen) n(t) h(t) n(yp) r(e.) 37
b(Empt) n(y) 28 b(en) n(tries) f(ha) n(v) n(e) f(v) -5
b(alue) 28 b(`NULL'.) p Fd 0 480 a(T) m(yp) s(e) k(`hash_table_t') p
Fh 208 624 a(describ) r(es) c(hash) g(table) h(itself.) 41
b(All) 29 b(w) n(ork) e(with) i(hash) g(table) f(should) h(b) r(e) g
(executed) g(only) f(through) g(functions) h(men-) 208
737 y(tioned) e(b) r(elo) n(w.) p Fd 0 911 a(F) -8 b(unction) 32
b(`create_hash_table') p Fc 704 1090 a(`hash_table_t) 42
b(create_hash_table) 822 1194 y(\(size_t) e(size,) 861
1298 y(unsigned) h(\(*hash_function\)) h(\(hash_table_entry_t) i
(el_ptr\),) 861 1402 y(int) c(\(*eq_function\)) i(\(hash_table_entry_t)
h(el1_ptr,) 1645 1506 y(hash_table_entry_t) g(el2_ptr\)\)') p
Fh 208 1798 a(creates) 37 b(and) i(returns) f(hash) h(table) g(with) g
(length) g(sligh) n(tly) f(longer) g(than) h(v) -5 b(alue) 39
b(of) f(function) i(parameter) d(`size'.) 208 1912 y(Created) 24
b(hash) g(table) h(is) g(initiated) h(as) e(empt) n(y) h(\(all) g(the) g
(hash) g(table) g(en) n(tries) f(are) g(NULL\).) i(The) f(hash) f
(table) h(will) g(use) 208 2025 y(functions) 33 b(`hash_function',) h
(`eq_function') f(giv) n(en) g(as) f(the) i(function) g(parameters) d
(to) i(ev) -5 b(aluate) 33 b(table) g(elemen) n(t) 208
2139 y(hash) 27 b(v) -5 b(alue) 27 b(and) h(function) g(to) f(test) h
(on) f(equalit) n(y) g(of) h(t) n(w) n(o) e(table) i(elemen) n(ts.) p
Fd 0 2313 a(F) -8 b(unction) 32 b(`delete_hash_table') p
Fc 704 2492 a(`void) 40 b(delete_hash_table) j(\(hash_table_t) f
(htab\)') p Fh 208 2784 a(frees) 21 b(memory) h(allo) r(cated) f(for) h
(hash) g(table) g(giv) n(en) f(as) h(parameter) e(`h) n(tab'.) 35
b(Naturally) 22 b(the) g(hash) g(table) g(m) n(ust) h(already) 208
2897 y(exist.) p Fd 0 3071 a(F) -8 b(unction) 32 b(`empt) m
(y_hash_table') p Fc 704 3250 a(`void) 40 b(empty_hash_table) 82
b(\(hash_table_t) 42 b(htab\)') p Fh 208 3542 a(mak) n(es) 32
b(hash) h(table) g(giv) n(en) f(as) h(parameter) e(`h) n(tab') j(empt) n
(y) -7 b(.) 54 b(Naturally) 32 b(the) i(hash) f(table) g(m) n(ust) g
(already) f(exist.) 54 b(If) 208 3655 y(y) n(ou) 34 b(need) i(to) g
(remo) n(v) n(e) e(all) h(table) h(elemen) n(ts,) i(it) e(is) f(b) r
(etter) h(to) g(use) g(this) g(function) g(than) g(sev) n(eral) e
(times) i(function) 208 3769 y(`remo) n(v) n(e_elemen) n
(t_from_hash_table_en) n(try'.) h(This) 29 b(function) h(do) r(es) f
(not) h(c) n(hange) e(size) i(of) f(the) h(table) f(or) g(clear) 208
3882 y(statistics) e(ab) r(out) g(collisions.) p Fd 0
4057 a(F) -8 b(unction) 32 b(`\034nd_hash_table_en) m(try') p
Fc 704 4235 a(`hash_table_entry_t) 43 b(*find_hash_table_entry) 1528
4339 y(\(hash_table_t) f(htab,) 1567 4443 y(hash_table_entry_t) h
(element,) 1567 4547 y(int) d(reserve\)') p Fh 208 4839
a(searc) n(hes) 21 b(for) i(hash) g(table) g(en) n(try) f(whic) n(h) i
(con) n(tains) e(elemen) n(t) h(equal) g(to) g(v) -5
b(alue) 23 b(of) h(the) f(function) h(parameter) e(`elemen) n(t') 208
4953 y(or) 35 b(empt) n(y) g(en) n(try) h(in) g(whic) n(h) g(`elemen) n
(t') g(can) f(b) r(e) h(placed) g(\(if) h(the) f(elemen) n(t) g(do) r
(es) f(not) h(exist) g(in) g(the) g(table\).) 62 b(The) 208
5066 y(function) 29 b(parameter) f(`reserv) n(e') f(is) i(to) f(b) r(e)
i(nonzero) d(if) j(the) f(elemen) n(t) g(is) g(to) g(b) r(e) h(placed) e
(in) i(the) f(table.) 41 b(The) 29 b(elemen) n(t) 208
5180 y(should) h(b) r(e) i(inserted) f(in) n(to) g(the) h(table) f(en) n
(try) f(b) r(efore) h(another) f(call) h(of) g(`\034nd_hash_table_en) n
(try'.) 46 b(The) 31 b(table) g(is) 208 5294 y(expanded) c(if) i(o) r
(ccupancy) e(\(taking) g(in) n(to) h(accoun) n(t) f(also) g(deleted) h
(elemen) n(ts\)) g(is) g(more) f(than) i(75\045.) 37
b(The) 28 b(o) r(ccupancy) 208 5407 y(of) f(the) h(table) g(after) f
(the) h(expansion) e(will) i(b) r(e) g(ab) r(out) f(50\045.) p
90 rotate dyy eop
%%Page: 10 10
10 9 bop 0 -167 3900 5 v Fd 0 -200 a(6.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(source) h(co) s(de) f(p) s
(ositions) p Fh 1815 w(10) p Fd 0 162 a(F) -8 b(unction) 32
b(`remo) m(v) m(e_elemen) m(t_from_hash_table_en) m(try') p
Fc 704 337 a(`void) 40 b(remove_element_from_hash_tabl) q(e_ent) q(ry)
939 441 y(\(hash_table_t) i(htab,) f(hash_table_entry_t) i(element\)') p
Fh 208 729 a(remo) n(v) n(es) 29 b(elemen) n(t) j(from) g(hash) f
(table_en) n(try) g(whose) g(v) -5 b(alue) 32 b(is) g(giv) n(en) f(as) g
(the) h(function) g(parameter.) 49 b(Hash) 31 b(table) 208
843 y(en) n(try) c(for) h(giv) n(en) f(v) -5 b(alue) 28
b(should) g(b) r(e) h(not) f(empt) n(y) g(\(or) g(deleted\).) 39
b(The) 28 b(hash) g(table) g(en) n(try) g(v) -5 b(alue) 28
b(will) g(b) r(e) h(mark) n(ed) e(as) 208 957 y(deleted) g(after) h
(the) g(function) g(call.) p Fd 0 1128 a(F) -8 b(unction) 32
b(`hash_table_size') p Fc 704 1303 a(`size_t) 41 b(hash_table_size) h
(\(hash_table_t) g(htab\)') p Fh 208 1592 a(returns) 26
b(curren) n(t) h(size) g(of) h(giv) n(en) f(hash) g(table.) p
Fd 0 1764 a(F) -8 b(unction) 32 b(`hash_table_elemen) m(ts_n) m(um) m
(b) s(er') p Fc 704 1939 a(`size_t) 41 b(hash_table_elements_number) k
(\(hash_table_t) d(htab\)') p Fh 208 2228 a(returns) 26
b(curren) n(t) h(n) n(um) n(b) r(er) g(of) h(elemen) n(ts) f(in) h(giv)
n(en) f(hash) g(table.) p Fd 0 2399 a(F) -8 b(unction) 32
b(`hash_table_collisions') p Fc 704 2574 a(`int) 40 b
(hash_table_collisions) k(\(hash_table_t) e(htab\)') p
Fh 208 2863 a(returns) 26 b(n) n(um) n(b) r(er) i(of) f(of) h(p) r
(ercen) n(ts) f(of) g(\034xed) h(collisions) e(during) h(all) h(w) n
(ork) e(with) i(giv) n(en) f(hash) g(table.) p Fd 0 3035
a(F) -8 b(unction) 32 b(`all_hash_table_collisions') p
Fc 704 3210 a(`int) 40 b(all_hash_table_collisions) 45
b(\(void\)') p Fh 208 3499 a(returns) 26 b(n) n(um) n(b) r(er) i(of) f
(of) h(p) r(ercen) n(ts) f(of) g(\034xed) h(collisions) e(during) h
(all) h(w) n(ork) e(with) i(all) f(hash) g(tables.) p
Fe 0 3833 a(6) 131 b(P) l(ac) l(k) -7 b(age) 44 b(for) g(w) l(ork) h
(with) f(source) g(co) t(de) g(p) t(ositions) p Fh 0
4072 a(The) 29 b(compilers) e(often) i(use) g(in) n(ternal) f(represen)
n(tation) f(whic) n(h) h(stores) f(source) h(co) r(de) g(p) r
(ositions.) 40 b(Here) 28 b(pac) n(k) -5 b(age) 27 b(`p) r(osition') 0
4186 y(whic) n(h) e(serv) n(es) e(to) i(supp) r(ort) g(information) f
(ab) r(out) h(source) e(p) r(ositions) i(of) g(compiled) f(\034les) h
(taking) f(in) n(to) h(accoun) n(t) f(all) h(included) 0
4299 y(\034les) i(is) h(suggested.) 0 4456 y(The) h(strategy) f(of) h
(the) g(pac) n(k) -5 b(age) 28 b(usage) g(can) h(b) r(e) g(follo) n
(ws.) 40 b(F) -7 b(unction) 30 b(`initiate_p) r(ositions') f(is) g
(called) f(b) n(y) h(the) h(\034rst.) 41 b(After) 0 4569
y(that) 29 b(function) h(`start_\034le_p) r(osition') d(is) i(called) g
(when) g(a) f(\034le) i(is) e(op) r(ened) h(for) g(compilation) f(as) h
(source) e(or) h(included) i(\034le.) 0 4683 y(Mem) n(b) r(ers) f
(`line_n) n(um) n(b) r(er') g(and) h(`column_n) n(um) n(b) r(er') f(of)
g(v) -5 b(ariable) 29 b(`curren) n(t_p) r(osition') f(are) g(mo) r
(di\034ed) i(corresp) r(ondingly) 0 4796 y(during) d(giv) n(en) g
(\034le) h(compilation.) 37 b(The) 27 b(v) -5 b(alue) 28
b(of) g(`curren) n(t_p) r(osition') e(can) h(b) r(e) h(stored) f(in) n
(to) h(in) n(ternal) f(represen) n(tation) f(for) 0 4910
y(usage) c(for) h(output) h(messages) d(on) i(the) h(follo) n(wing) e
(passes.) 35 b(F) -7 b(unction) 23 b(`\034nish_\034le_p) r(osition') g
(is) g(called) g(when) g(a) g(pro) r(cessed) 0 5024 y(\034le) 28
b(is) f(closed.) 36 b(F) -7 b(unction) 28 b(`\034nish_p) r(ositions') f
(ma) n(y) g(b) r(e) h(called) f(after) g(all) h(pro) r(cessing) e(a) h
(source) f(\034le.) 0 5180 y(The) j(pac) n(k) -5 b(age) 28
b(uses) h(pac) n(k) -5 b(ages) 27 b(`vlob) 5 b(ject') 29
b(and) g(`ob) 5 b(jstac) n(k') 28 b(whic) n(h) h(use) g(pac) n(k) -5
b(age) 28 b(`allo) r(cate'.) 41 b(The) 29 b(in) n(terface) g(part) g
(of) g(the) 0 5294 y(pac) n(k) -5 b(age) 26 b(is) h(\034le) g(`p) r
(osition.h'.) 37 b(The) 27 b(implemen) n(tation) h(part) e(is) h
(\034le) h(`p) r(osition.c'.) 36 b(The) 28 b(in) n(terface) e(con) n
(tains) h(the) g(follo) n(wing) 0 5407 y(external) g(de\034nitions:) p
90 rotate dyy eop
%%Page: 11 11
11 10 bop 0 -167 3900 5 v Fd 0 -200 a(6.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(source) h(co) s(de) f(p) s
(ositions) p Fh 1815 w(11) p Fd 0 162 a(T) m(yp) s(e) h(`p) s
(osition_t') p Fh 208 308 a(is) 27 b(structure) g(whic) n(h) g(describ)
r(es) g(a) h(\034le) f(p) r(osition.) 37 b(The) 28 b(structure) e(has) i
(the) f(follo) n(wing) g(mem) n(b) r(ers:) p Fd 208 503
a(Mem) m(b) s(er) i(`\034le_name') p Fh 390 632 a(is) f(name) f(of) h
(\034le) f(to) h(whic) n(h) f(giv) n(en) g(p) r(osition) g(b) r
(elongs.) p Fd 208 778 a(Mem) m(b) s(ers) i(`line_n) m(um) m(b) s(er',)
f(`column_n) m(um) m(b) s(er') p Fh 390 907 a(are) f(source) f(line) i
(and) f(column) h(corresp) r(onding) d(to) j(giv) n(en) e(p) r
(osition.) p Fd 208 1053 a(Mem) m(b) s(er) j(`path') p
Fh 390 1182 a(is) h(p) r(oin) n(ter) f(to) h(another) e(p) r(osition) i
(structure) f(represen) n(ting) f(p) r(osition) i(of) f(include-clause)
g(whic) n(h) h(caused) f(im-) 390 1296 y(mediately) f(giv) n(en) e
(\034le) i(compilation.) p Fd 0 1490 a(V) -8 b(ariable) 32
b(`no_p) s(osition') p Fh 208 1637 a(has) 27 b(v) -5
b(alue) 28 b(of) g(t) n(yp) r(e) g(`p) r(osition_t') f(has) h(mem) n(b)
r(ers) f(with) i(v) -5 b(alues) 27 b(equals) h(to) f(zero) g(or) g
(`NULL'.) i(The) f(v) -5 b(alue) 28 b(do) r(es) f(not) 208
1750 y(corresp) r(ond) e(to) j(concrete) e(\034le) i(p) r(osition.) p
Fd 0 1929 a(V) -8 b(ariable) 32 b(`curren) m(t_p) s(osition') p
Fh 208 2075 a(has) 27 b(v) -5 b(alue) 27 b(whic) n(h) g(is) h(curren) n
(t) f(\034le) g(p) r(osition.) p Fd 0 2254 a(F) -8 b(unction) 32
b(`initiate_p) s(ositions') p Fc 704 2439 a(`void) 40
b(initiate_positions) j(\(void\)') p Fh 208 2738 a(initiates) 27
b(the) h(pac) n(k) -5 b(age.) 35 b(V) -7 b(alue) 28 b(of) f(v) -5
b(ariable) 27 b(`curren) n(t_p) r(osition') f(b) r(ecomes) h(equal) g
(to) h(`no_p) r(osition'.) p Fd 0 2916 a(F) -8 b(unction) 32
b(`\034nish_p) s(osition') p Fc 704 3102 a(`void) 40
b(finish_positions) j(\(void\)') p Fh 208 3400 a(frees) 27
b(all) g(memory) g(allo) r(cated) f(during) h(pac) n(k) -5
b(age) 26 b(w) n(ork.) p Fd 0 3579 a(F) -8 b(unction) 32
b(`p) s(osition_\034le_inclusion_lev) m(el') p Fc 704
3764 a(`int) 40 b(position_file_inclusion_level) 46 b(\(position_t) 41
b(position\)') p Fh 208 4063 a(returns) 33 b(lev) n(el) g(of) h
(inclusion) g(of) g(\034le) g(of) g(p) r(osition) g(giv) n(en) f(as) g
(the) h(function) h(parameter.) 54 b(The) 34 b(lev) n(el) g(n) n(um) n
(b) r(ers) f(are) 208 4177 y(started) c(with) h(zero) e(for) h(p) r
(ositions) g(corresp) r(onding) f(non-included) h(\034les) h(and) f
(for) g(p) r(ositions) g(whic) n(h) h(do) r(es) f(not) g(cor-) 208
4290 y(resp) r(ond) e(to) g(concrete) g(\034le.) p Fd
0 4469 a(F) -8 b(unction) 32 b(`start_\034le_p) s(osition') p
Fc 704 4654 a(`void) 40 b(start_file_position) k(\(const) c(char) g
(*file_name\)') p Fh 208 4953 a(cop) n(ys) 31 b(p) r(osition) i
(structure) g(\(b) n(y) g(dynamic) g(memory) f(allo) r(cation\)) g(in) i
(v) -5 b(ariable) 32 b(`curren) n(t_p) r(osition') f(and) i(sets) g(up)
208 5066 y(new) k(v) -5 b(alues) 36 b(of) h(mem) n(b) r(ers) g(of) g
(`curren) n(t_p) r(osition'.) 63 b(V) -7 b(alues) 37
b(of) g(mem) n(b) r(ers) f(`\034le_name',) j(`line_n) n(um) n(b) r
(er',) g(`col-) 208 5180 y(umn_n) n(um) n(b) r(er',) f(and) f(`path') g
(b) r(ecome) g(equal) f(to) h(the) g(function) g(parameter) e(v) -5
b(alue,) 39 b(1,) g(0,) g(and) e(p) r(oin) n(ter) f(to) h(the) 208
5294 y(copied) 30 b(structure.) 45 b(V) -7 b(alues) 30
b(of) g(`curren) n(t_p) r(osition') f(during) h(di\033eren) n(t) h
(calls) e(of) i(the) g(function) g(m) n(ust) f(b) r(e) h(di\033eren) n
(t) 208 5407 y(\(e.g.) 36 b(di\033eren) n(t) 28 b(columns) f(or) g
(lines\),) h(i.e.) 37 b(p) r(ositions) 27 b(of) g(di\033eren) n(t) h
(include-clauses) e(m) n(ust) i(b) r(e) g(di\033eren) n(t.) p
90 rotate dyy eop
%%Page: 12 12
12 11 bop 0 -167 3900 5 v Fd 0 -200 a(7.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(output) g(of) g(compiler) d(messages) p
Fh 1968 w(12) p Fd 0 162 a(F) -8 b(unction) 32 b(`\034nish_\034le_p) s
(osition') p Fc 704 349 a(`void) 40 b(finish_file_position) k
(\(void\)') p Fh 208 650 a(reco) n(v) n(ers) 27 b(previous) j(v) -5
b(alue) 30 b(of) h(v) -5 b(ariable) 29 b(`curren) n(t_p) r(osition',) h
(more) g(exactly) g(sets) g(up) h(the) g(v) -5 b(ariable) 29
b(b) n(y) i(structure) 208 763 y(to) c(whic) n(h) g(the) h(v) -5
b(ariable) 27 b(mem) n(b) r(er) g(`path') h(refers.) p
Fd 0 943 a(F) -8 b(unction) 32 b(`compare_p) s(ositions') p
Fc 704 1130 a(`int) 40 b(compare_positions) j(\(position_t) f
(position_1,) 1645 1234 y(position_t) g(position_2\)') p
Fh 208 1535 a(compares) 24 b(t) n(w) n(o) i(p) r(ositions) g(giv) n(en)
f(b) n(y) h(parameters) e(of) j(t) n(yp) r(e) f(`p) r(osition_t') g
(and) g(returns) g(-1) f(\(if) i(the) g(\034rst) f(p) r(osition) g(is)
208 1649 y(less) g(than) g(the) h(second\),) f(0) g(\(if) i(the) e
(\034rst) h(p) r(osition) f(is) g(equal) g(to) g(the) h(second\)) f(or)
g(1) g(\(if) h(the) g(\034rst) f(p) r(osition) h(is) f(greater) 208
1762 y(than) h(the) h(second\).) 37 b(The) 27 b(order) f(of) i(p) r
(ositions) f(is) h(lexicographic.) p Fe 0 2101 a(7) 131
b(P) l(ac) l(k) -7 b(age) 44 b(for) g(output) g(of) g(compiler) h
(messages) p Fh 0 2339 a(The) 23 b(most) g(of) h(compilers) e(rep) r
(ort) g(error) g(messages) f(for) i(incorrect) f(program.) 33
b(Here) 23 b(the) h(pac) n(k) -5 b(age) 21 b(`errors') g(whic) n(h) j
(serv) n(es) d(to) 0 2453 y(output) j(one-pass) e(or) h(m) n(ulti-pass)
f(compiler) h(messages) f(of) i(v) -5 b(arious) 22 b(mo) r(des) h
(\(errors,) g(w) n(arnings,) f(fatal,) j(system) e(errors) e(and) 0
2566 y(app) r(ended) 27 b(messages\)) f(in) h(Unix) h(st) n(yle) e(or) h
(for) f(traditional) g(listing) h(is) g(suggested.) 36
b(The) 27 b(pac) n(k) -5 b(age) 26 b(also) g(p) r(ermits) h(adequate) 0
2680 y(error) f(rep) r(orting) g(for) h(included) h(\034les.) 0
2836 y(The) h(pac) n(k) -5 b(age) 27 b(uses) i(pac) n(k) -5
b(ages) 27 b(`vlob) 5 b(ject',) 29 b(`ob) 5 b(jstac) n(k',) 29
b(`p) r(osition') f(whic) n(h) h(use) g(pac) n(k) -5
b(age) 28 b(`allo) r(cate'.) 40 b(Therefore) 28 b(pac) n(k) -5
b(age) 0 2950 y(`p) r(osition') 31 b(ha) n(v) n(e) f(to) i(b) r(e) f
(initiated) h(b) r(efore) f(an) n(y) g(w) n(ork) e(with) j(this) g(pac)
n(k) -5 b(age.) 46 b(The) 32 b(in) n(terface) e(part) h(of) g(the) h
(pac) n(k) -5 b(age) 30 b(is) h(\034le) 0 3064 y(`errors.h'.) i(The) 24
b(implemen) n(tation) f(part) g(is) g(\034le) h(`errors.c'.) 33
b(The) 23 b(maxim) n(um) h(length) f(of) g(generated) f(error) g
(message) g(is) h(sug-) 0 3177 y(gested) c(to) h(b) r(e) g(not) f
(greater) f(then) i(`MAX_ERR) n(OR_MESSA) n(GE_LENGTH'.) i(The) e
(default) g(v) -5 b(alue) 19 b(\(150\)) g(of) g(this) h(macro) 0
3291 y(can) i(b) r(e) g(rede\034ned) g(with) g(corresp) r(onding) e(C) i
(compiler) f(option) h(`-DMAX_ERR) n(OR_MESSA) n(GE_LENGTH=...') 37
b(dur-) 0 3404 y(ing) 27 b(compilation) g(of) h(\034le) f(`errors.c'.)
35 b(The) 28 b(in) n(terface) f(con) n(tains) f(the) i(follo) n(wing) f
(external) f(de\034nitions:) p Fd 0 3644 a(In) m(teger) 32
b(v) -5 b(ariables) 32 b(`n) m(um) m(b) s(er_of_errors',) d(`n) m(um) m
(b) s(er_of_w) m(arnings') p Fh 208 3791 a(ha) n(v) n(e) 38
b(v) -5 b(alues) 40 b(whic) n(h) f(are) g(n) n(um) n(b) r(er) h(of) g
(corresp) r(ondingly) d(errors) h(and) h(w) n(arnings) g(\034xed) g
(after) h(the) g(most) g(recen) n(t) 208 3904 y(pac) n(k) -5
b(age) 26 b(initiation.) p Fd 0 4084 a(In) m(teger) 32
b(v) -5 b(ariable) 32 b(`maxim) m(um_n) m(um) m(b) s(er_of_errors') p
Fh 208 4231 a(has) g(v) -5 b(alue) 32 b(whic) n(h) g(is) h(maxim) n(um)
f(n) n(um) n(b) r(er) g(of) h(errors) d(whic) n(h) i(will) h(b) r(e) g
(\034xed.) 52 b(If) 33 b(an) f(error) e(is) j(\034xed) f(with) h(n) n
(um) n(b) r(er) 208 4344 y(equals) c(to) g(`maxim) n(um_n) n(um) n(b) r
(er_of_errors') d(then) k(sp) r(ecial) f(fatal) h(error) e(`fatal) h
(error) f(\025) h(to) r(o) h(man) n(y) f(errors') f(with) 208
4458 y(p) r(osition) f(of) g(giv) n(en) g(error) e(is) i(\034xed) h
(instead) f(of) g(the) h(error.) 35 b(And) 27 b(all) h(follo) n(wing) e
(errors) f(are) h(ignored.) 36 b(Zero) 26 b(v) -5 b(alue) 27
b(of) 208 4572 y(the) h(v) -5 b(ariable) 26 b(means) h(that) h(the) g
(sp) r(ecial) f(fatal) g(error) f(will) i(nev) n(er) e(\034xed.) p
Fd 0 4752 a(In) m(teger) 32 b(constan) m(t) h(`default_maxim) m(um_n) m
(um) m(b) s(er_of_errors') p Fh 208 4898 a(de\034nes) 27
b(originally) f(v) -5 b(alue) 27 b(of) h(v) -5 b(ariable) 26
b(`maxim) n(um_n) n(um) n(b) r(er_of_errors'.) 33 b(The) 27
b(constan) n(t) g(v) -5 b(alue) 28 b(is) f(`50'.) p Fd
0 5078 a(V) -8 b(ariable) 32 b(`fatal_error_function') p
Fh 208 5225 a(con) n(tains) h(p) r(oin) n(ter) g(to) h(function) g
(without) h(parameters) d(whic) n(h) i(will) g(b) r(e) h(called) e
(after) h(\034xing) g(a) f(fatal) h(error.) 54 b(The) 208
5339 y(fatal) 27 b(error) f(function) i(is) f(suggested) f(to) i(do) f
(not) h(return) f(the) h(con) n(trol) e(bac) n(k.) p
90 rotate dyy eop
%%Page: 13 13
13 12 bop 0 -167 3900 5 v Fd 0 -200 a(7.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(output) g(of) g(compiler) d(messages) p
Fh 1968 w(13) p Fd 0 162 a(F) -8 b(unction) 32 b
(`default_fatal_error_function') p Fc 704 349 a(`void) 40
b(default_fatal_error_function) 46 b(\(void\)') p Fh
208 650 a(de\034nes) 27 b(originally) f(v) -5 b(alue) 27
b(of) h(v) -5 b(ariable) 26 b(`fatal_error_function'.) 35
b(The) 27 b(function) h(only) f(calls) g(`exit) h(\(1\)'.) p
Fd 0 830 a(F) -8 b(unction) 32 b(`initiate_errors') p
Fc 704 1017 a(`void) 40 b(initiate_errors) j(\(int) d
(immediate_output_flag\)') p Fh 208 1317 a(initiates) 27
b(the) i(pac) n(k) -5 b(age) 26 b(in) i(regime) f(dep) r(ending) h(on) f
(parameter) f(v) -5 b(alue.) 38 b(If) 28 b(the) g(parameter) e(v) -5
b(alue) 28 b(is) g(nonzero) e(than) 208 1431 y(all) i(\034xed) g
(messages) e(are) i(output) g(immediately) -7 b(.) 39
b(Otherwise) 28 b(the) g(compiler) g(messages) e(are) i(stored) f(un) n
(til) i(function) 208 1545 y(`output_errors') c(are) i(called.) p
Fd 0 1724 a(F) -8 b(unction) 32 b(`\034nish_errors') p
Fc 704 1912 a(`void) 40 b(finish_errors) i(\(void\)') p
Fh 208 2212 a(frees) 27 b(all) g(memory) g(allo) r(cated) f(during) h
(pac) n(k) -5 b(age) 26 b(w) n(ork.) p Fd 0 2392 a(F) -8
b(unction) 32 b(`output_errors') p Fc 704 2579 a(`void) 40
b(output_errors) i(\(void\)') p Fh 208 2880 a(sorts) 27
b(\(stable) i(sorting\)) g(all) f(\034xed) h(messages) f(b) n(y) h
(their) g(p) r(ositions,) f(outputs) i(ones,) f(and) f(deletes) h
(ones.) 41 b(App) r(ended) 208 2994 y(messages) 30 b(will) j(b) r(e) g
(output) g(after) f(corresp) r(onding) e(error) h(or) h(w) n(arning.) 50
b(This) 32 b(function) h(should) f(b) r(e) h(used) g(only) f(in) 208
3107 y(regime) 26 b(of) i(storing) e(messages.) p Fd
0 3287 a(F) -8 b(unction) 32 b(`error') p Fc 859 3474
a(`void) 41 b(error) f(\(int) g(fatal_error_flag,) j(position_t) 1369
3579 y(position,) e(const) g(char) f(*format,) h(...\)') p
Fh 208 3879 a(\034xes) d(error) e(\(fatal) j(error) d(if) j(the) g
(\034rst) f(parameter) f(v) -5 b(alue) 38 b(is) h(nonzero\)) e(at) h
(the) h(p) r(osition) f(giv) n(en) g(as) g(the) h(second) 208
3993 y(parameter.) d(If) 28 b(the) g(error) e(is) i(fatal) f(than) h
(functions) h(`output_errors') c(and) j(`*fatal_error_function') d(are)
h(called.) 208 4106 y(The) h(diagnostic) g(messages) e(are) i(formed) g
(analogous) e(to) j(output) g(of) f(function) i(`prin) n(tf) 6
b('.) 37 b(F) -7 b(or) 27 b(example,) p Fc 822 4277 a(error) 40
b(\(1,) g(current_position,) j("fatal) d(error) h(-) e(no) h
(memory"\);) p Fd 0 4561 a(F) -8 b(unction) 32 b(`w) m(arning') p
Fc 704 4748 a(`void) 40 b(warning) h(\(position_t) h(position,) f
(const) f(char) g(*format,) h(...\)') p Fh 208 5049 a(is) 27
b(analogous) e(to) j(the) g(previous) e(but) i(is) g(used) f(to) h
(\034x) f(a) g(w) n(arning.) p Fd 0 5229 a(F) -8 b(unction) 32
b(`app) s(end_message') p 90 rotate dyy eop
%%Page: 14 14
14 13 bop 0 -167 3900 5 v Fd 0 -200 a(7.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(output) g(of) g(compiler) d(messages) p
Fh 1968 w(14) p Fc 704 162 a(`void) 40 b(append_message) j
(\(position_t) e(position,) 1567 266 y(const) f(char) g(*format,) h
(...\)') p Fh 208 567 a(When) 30 b(regime) e(of) h(immediately) h
(output) g(of) f(\034xed) h(message) e(is) h(on) g(this) h(function) g
(is) f(analogous) e(to) i(the) h(previous) 208 680 y(\(except) 23
b(for) g(incremen) n(ting) g(v) -5 b(ariable) 23 b(`n) n(um) n(b) r
(er_of_w) n(arnings'\).) 33 b(In) 23 b(opp) r(osite) g(case) g(the) h
(app) r(ended) g(message) e(will) 208 794 y(b) r(e) j(output) g(with) g
(the) g(most) g(recen) n(t) f(\034xed) g(error) f(or) h(w) n(arning) f
(indep) r(enden) n(tly) j(from) e(v) -5 b(alue) 24 b(of) h(the) g
(\034rst) g(parameter.) 208 907 y(Of) i(course) f(the) i(previously) f
(\034xed) g(error) f(or) h(w) n(arning) f(m) n(ust) h(exist.) 208
1054 y(F) -7 b(or) 26 b(example,) i(this) f(function) i(ma) n(y) d(b) r
(e) i(used) g(for) f(generation) f(of) i(messages) d(of) j(t) n(yp) r
(e) p Fc 939 1225 a(`<file>:<line>:<position-1>:) 46
b(repeated) 41 b(declaration') p Fh 208 1509 a(and) 27
b(then) p Fc 939 1679 a(`<file>:<line>:<position-1>:) 46
b(previous) 41 b(declaration'.) p Fh 208 1963 a(Description) 25
b(of) h(function) h(`default_output_error_function') d(con) n(tains) h
(explanation) g(wh) n(y) h(decremen) n(ted) g(p) r(osi-) 208
2077 y(tion) h(is) h(output.) p Fd 0 2257 a(F) -8 b(unction) 32
b(`system_error') p Fc 704 2444 a(`void) 40 b(system_error) i(\(int) e
(fatal_error_flag,) 1488 2548 y(position_t) i(position,) 1488
2652 y(const) f(char) f(*format,) h(...\)') p Fh 208
2953 a(is) 28 b(analogous) f(to) h(function) i(`error') d(but) i(serv) n
(es) e(to) i(\034x) g(a) f(system) h(error.) 38 b(The) 29
b(curren) n(t) f(system) g(message) g(without) 208 3066
y(head) e(blanks) g(\(giv) n(en) f(b) n(y) i(standard) e(function) i
(`strerror'\)) d(is) j(placed) f(after) g(the) h(message) e(formed) h
(b) n(y) g(the) h(function) 208 3180 y(parameters.) 35
b(F) -7 b(or) 27 b(example,) g(the) h(follo) n(wing) e(call) h(ma) n(y)
g(b) r(e) h(used) g(when) f(a) g(\034le) h(is) g(not) f(op) r(ened) p
Fc 900 3367 a(system_error) 81 b(\(1,) 40 b(current_position,) 1488
3471 y("fatal) h(error) f(-) g(\045s:",) g(new_file_name\);) p
Fd 0 3772 a(V) -8 b(ariable) 32 b(`output_error_function') p
Fh 208 3919 a(con) n(tains) 23 b(p) r(oin) n(ter) h(to) h(function) g
(whic) n(h) f(is) h(used) f(to) h(output) g(error) d(message.) 35
b(The) 24 b(function) i(has) e(three) g(parameters) 208
4032 y(\025) j(\035ag) g(of) g(app) r(ended) h(message,) e(message) g
(p) r(osition) h(and) h(message) e(itself.) p Fd 0 4212
a(F) -8 b(unction) 32 b(`default_output_error_function') p
Fc 704 4399 a(`void) 40 b(default_output_error_function) 939
4504 y(\(int) g(appended_message_flag,) k(position_t) e(position,) 978
4608 y(const) f(char) f(*message\)') p Fh 208 4908 a(Originally) 34
b(v) -5 b(alue) 37 b(of) f(v) -5 b(ariable) 36 b
(`output_error_function') e(is) j(equal) f(to) g(this) h(function.) 64
b(The) 37 b(function) g(is) f(ori-) 208 5022 y(en) n(ted) 31
b(to) h(output) h(in) f(Unix) g(st) n(yle) f(according) f(to) i(GNU) h
(standard.) 48 b(T) -7 b(o) 32 b(output) g(a) g(listing) f(the) i(v) -5
b(alue) 31 b(of) h(v) -5 b(ariable) 208 5136 y(`output_error_function')
25 b(should) i(b) r(e) h(c) n(hanged.) 36 b(The) 28 b(function) g
(output) g(message) e(in) i(the) g(follo) n(wing) e(formats:) p
90 rotate dyy eop
%%Page: 15 15
15 14 bop 0 -167 3900 5 v Fd 0 -200 a(8.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(command) e(line) p
Fh 2120 w(15) p Fc 469 162 a(MESSAGE) 1178 b(\(NULL) 40
b(file) g(name\)) 469 266 y(FILE_NAME:1:) h(MESSAGE) 669
b(\(zero) 40 b(line) g(number\)) 469 370 y(FILE_NAME:LINE_NUMBER:) k
(MESSAGE) 276 b(\(zero) 40 b(column) h(number\)) 469
474 y(FILE_NAME:LINE_NUMBER:COLUMN_NUM) q(BER-1) q(:) k(MESSAGE) 80
b(\(all) 40 b(other) h(cases\)) p Fh 208 756 a(After) 19
b(that) g(the) g(function) g(outputs) g(newline.) 34
b(The) 19 b(function) g(also) e(outputs) i(additional) f(messages) f
(`in) i(\034le) g(pro) r(cessed) 208 870 y(from) i(...') 35
b(if) 22 b(giv) n(en) f(message) f(is) i(not) g(app) r(ended) f
(message) g(and) g(corresp) r(onds) f(to) h(\034le) h(di\033eren) n(t) g
(from) f(one) h(of) f(previous) 208 983 y(output) 30
b(error.) 41 b(This) 29 b(message) f(re\035ects) h(path) h(of) f(the) h
(message) f(p) r(osition) g(\(see) g(pac) n(k) -5 b(age) 28
b(`p) r(osition'\),) j(i.e.) 43 b(re\035ects) 208 1097
y(p) r(ositions) 32 b(of) g(corresp) r(onding) f(include-clauses.) 50
b(Decremen) n(ted) 32 b(column) h(n) n(um) n(b) r(er) f(is) h(output) g
(in) f(order) g(to) g(b) r(e) h(in) 208 1210 y(concordance) 25
b(with) j(editor) f(Emacs) h(in) f(whic) n(h) h(p) r(ositions) f(start)
g(with) h(0.) p Fe 0 1548 a(8) 131 b(P) l(ac) l(k) -7
b(age) 44 b(for) g(w) l(ork) h(with) f(command) f(line) p
Fh 0 1787 a(T) -7 b(o) 36 b(mak) n(e) g(easy) g(pro) r(cess) g(of) h
(command) f(line,) k(here) c(abstract) g(data) g(`commline') h(is) g
(suggested.) 63 b(This) 37 b(abstract) f(data) 0 1900
y(implemen) n(ts) e(features) g(analogous) d(to) j(ones) f(of) h
(public) h(domain) e(function) i(`getopt'.) 56 b(The) 34
b(goal) e(of) i(the) h(abstract) e(data) 0 2014 y(creation) 25
b(is) h(to) g(use) f(more) h(readable) e(language) g(of) i(command) g
(line) g(description) g(and) f(to) h(use) g(command) g(line) g
(description) 0 2127 y(as) h(help) h(output) g(of) f(program.) 0
2284 y(POSIX) k(terminology) e(concerning) g(command) g(line) i(is) f
(used) h(here.) 44 b(Command) 30 b(line) h(is) f(divided) g(in) n(to) g
(command) g(name) 0 2397 y(and) d(argumen) n(ts.) 35
b(The) 27 b(argumen) n(ts) e(are) h(sub) r(divided) h(in) n(to) f
(options,) h(option-argumen) n(ts) d(and) j(op) r(erands.) 35
b(Option) 27 b(starts) 0 2511 y(with) h(`-'.) 37 b(All) 28
b(argumen) n(ts) e(after) h(\034rst) h(`\025') f(in) h(command) f(line)
h(are) e(treated) h(as) g(op) r(erands.) 0 2667 y(The) 36
b(description) e(of) i(command) f(line) h(is) f(made) g(up) h(from) f
(t) n(w) n(o) g(parts.) 60 b(An) n(y) 35 b(part) g(\(or) g(b) r(oth\)) h
(ma) n(y) f(b) r(e) h(absen) n(t) f(in) h(the) 0 2781
y(description.) 49 b(First) 32 b(part) f(con) n(tains) g
(option-argumen) n(ts) f(names) i(of) f(options) h(whic) n(h) g(are) f
(in) h(the) g(second) f(part.) 50 b(option-) 0 2895 y(argumen) n(ts) 22
b(names) h(are) g(separated) f(b) n(y) h(white) h(space.) 35
b(The) 23 b(second) g(part) g(starts) g(with) h(p) r(ercen) n(ts) f
(`\045\045') h(and) f(con) n(tains) g(an) n(y) 0 3008
y(text) 30 b(in) h(whic) n(h) f(description) f(of) h(options) f(are) g
(placed.) 44 b(An) n(y) 30 b(description) f(of) h(option) g(starts) f
(with) i(c) n(haracter) c(\020') j(follo) n(w) n(ed) 0
3122 y(b) n(y) i(c) n(haracter) f(`-') h(and) g(\034nishes) h(b) n(y) f
(c) n(haracter) e(`\021.) 52 b(White) 33 b(spaces) f(ma) n(y) g
(precede) g(option-argumen) n(t) e(name.) 52 b(It) 33
b(means) 0 3235 y(that) 28 b(the) f(corresp) r(onding) f(option) h(has)
f(obligatory) g(separate) g(option-argumen) n(t.) 34
b(F) -7 b(or) 27 b(example,) g(the) h(follo) n(wing) e(ma) n(y) h(b) r
(e) 0 3349 y(a) g(part) g(of) h(description) f(of) g(options) g(of) h
(a) f(pascal) f(compiler) h(command) g(line.) p 0 3416
3900 4 v Fg 0 3588 a(dir) 42 b(xxx) h(file) 0 3701 y(\045\045) 0
3815 y(command) e(line:) 85 b(pc) 42 b([options]) e(file) i(...) 1351
3929 y(Options:) 0 4042 y(`-0') 260 b(Pascal) 41 b(standard) f(level) h
(0) 174 b(`-1') 260 b(Pascal) 41 b(standard) f(Level) i(1.) 0
4156 y(`-29000') 84 b(Am29000) 40 b(code) i(generation) 170
b(`-29050'*) 40 b(Am29050) h(code) h(generation) 0 4269
y(`-c') 260 b(only) 42 b(object) f(files) g(creation) f(`-el') 216
b(output) 41 b(of) i(listing) 0 4383 y(`-g') 260 b(information) 39
b(for) j(debuggers) 83 b(`-Idir') 128 b(data) 42 b(task) g(units) f
(directory) 0 4496 y(`-lxxx') 128 b(library) 868 b(`-Ldir') 128
b(libraries) 40 b(directory) 0 4610 y(`-o) i(file') g(output) f(file)
695 b(`-O') 260 b(all) 42 b(optimizations) 0 4724 y(`-S') 260
b(only) 42 b(ass.) g(code) f(creation) 171 b(`-v') 260
b(loaded) 41 b(processes) f(indication) 0 4837 y(`-w') 260
b(no) 42 b(warnings) f(generation) 654 4951 y(Star) h(*) h(marks) e
(defaults) p 0 5032 V Fh 0 5180 a(In) 27 b(this) g(example) f(options) g
(with) i(names) e(`-I',) h(`-l',) g(`-L') f(and) h(`-o') f(ha) n(v) n
(e) f(option-argumen) n(ts) g(but) i(only) g(option) f(with) h(name) 0
5294 y(`-o') 35 b(has) f(separate) g(option-argumen) n(t,) i(i.e.) 60
b(option-argumen) n(t) 33 b(whic) n(h) i(is) g(represen) n(ted) f(b) n
(y) h(separate) f(argumen) n(t) g(after) 0 5407 y(giv) n(en) 27
b(option) g(in) h(command) f(line.) p 90 rotate dyy eop
%%Page: 16 16
16 15 bop 0 -167 3900 5 v Fd 0 -200 a(8.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(command) e(line) p
Fh 2120 w(16) 0 162 y(The) h(in) n(terface) f(part) h(of) f(the) i
(abstract) d(data) i(is) g(\034le) g(`commline.h'.) 44
b(The) 30 b(pac) n(k) -5 b(age) 28 b(uses) i(pac) n(k) -5
b(age) 28 b(`vlob) 5 b(ject') 29 b(whic) n(h) h(use) 0
275 y(pac) n(k) -5 b(age) 19 b(`allo) r(cate'.) 33 b(The) 20
b(implemen) n(tation) h(part) e(is) h(\034le) h(`commline.c'.) 34
b(The) 21 b(in) n(terface) e(con) n(tains) g(the) i(follo) n(wing) e
(external) 0 389 y(de\034nitions:) p Fd 0 628 a(F) -8
b(unction) p Fc 782 815 a(`int) 40 b(start_command_line_processin) q(g)
978 920 y(\(int) h(argc,) f(char) g(**argv,) h(const) f(char) g
(*description\)') p Fh 208 1220 a(m) n(ust) 28 b(b) r(e) g(called) g(b)
r(efore) g(an) n(y) f(w) n(ork) g(with) h(abstract) f(data.) 38
b(The) 29 b(function) f(pro) r(cesses) f(command) g(line) i
(description) 208 1334 y(giv) n(en) 37 b(as) g(string) g(parameter) f
(and) i(command) f(line) i(itself) f(giv) n(en) f(as) g(t) n(w) n(o) g
(parameter) g(`argc') f(and) i(`argv'.) 66 b(The) 208
1447 y(function) 36 b(also) f(initiates) h(v) -5 b(ariables) 35
b(`argumen) n(t_v) n(ector') e(and) j(`argumen) n(t_coun) n(t') e(b) n
(y) i(parameters) f(`argc') f(and) 208 1561 y(`argv'.) 54
b(The) 35 b(function) f(returns) f(0) h(if) h(error) d(in) i(command) g
(line) g(description) g(is) g(\034xed,) h(otherwise) e(returns) h(1) f
(\(it) 208 1675 y(means) 27 b(success\).) p Fd 0 1855
a(F) -8 b(unction) 32 b(`output_command_line_description') p
Fc 782 2042 a(`void) 41 b(output_command_line_description) 46
b(\(void\)') p Fh 208 2342 a(outputs) 31 b(the) h(second) f(part) g
(\(without) i(`\045\045'\)) f(of) g(description) f(of) g(options) g(to)
h(stderr.) 48 b(This) 31 b(function) h(should) g(b) r(e) 208
2456 y(called) 27 b(when) g(it) h(is) g(necessary) e(to) h(sho) n(w) g
(the) h(program) d(usage.) p Fd 0 2636 a(F) -8 b(unction) 32
b(`next_op) s(erand') p Fc 782 2823 a(`int) 40 b(next_operand) i(\(int)
e(flag_of_first\)') p Fh 208 3124 a(returns) 26 b(command) g(line) h
(argumen) n(t) e(n) n(um) n(b) r(er) i(of) g(next) f(op) r(erand) g(if)
i(the) f(function) g(parameter) e(is) i(nonzero.) 35
b(Other-) 208 3237 y(wise) 21 b(the) i(function) f(returns) f(n) n(um) n
(b) r(er) h(of) g(the) g(\034rst) g(op) r(erand) f(in) h(the) h
(command) e(line.) 36 b(The) 22 b(function) g(returns) f(0) h(if) g
(all) 208 3351 y(op) r(erands) 29 b(are) g(already) f(pro) r(cessed.) 44
b(Returned) 30 b(n) n(um) n(b) r(er) g(ma) n(y) g(b) r(e) g(used) g(as)
g(index) g(of) g(arra) n(y) e(`argumen) n(t_v) n(ector') 208
3465 y(to) f(access) f(corresp) r(onding) g(op) r(erand.) p
Fd 0 3645 a(F) -8 b(unction) 32 b(`n) m(um) m(b) s(er_of_op) s(erands')
p Fc 782 3832 a(`int) 40 b(number_of_operands) k(\(void\)') p
Fh 208 4132 a(returns) 26 b(n) n(um) n(b) r(er) i(of) f(op) r(erands) g
(in) g(the) h(command) g(line.) p Fd 0 4312 a(F) -8 b(unction) 32
b(`next_option') p Fc 782 4499 a(`int) 40 b(next_option) i(\(int) e
(flag_of_first\)') p Fh 208 4800 a(returns) 21 b(command) g(line) i
(argumen) n(t) e(n) n(um) n(b) r(er) g(of) h(next) h(option) e(if) i
(the) f(function) h(parameter) d(is) i(nonzero.) 34 b(Otherwise) 208
4914 y(the) 19 b(function) h(returns) e(n) n(um) n(b) r(er) h(of) g
(the) h(\034rst) f(option) g(in) g(the) h(command) f(line.) 34
b(The) 19 b(function) h(returns) e(0) h(if) h(all) f(options) 208
5027 y(are) 29 b(already) g(pro) r(cessed.) 44 b(Returned) 31
b(n) n(um) n(b) r(er) f(ma) n(y) g(b) r(e) g(used) h(as) f(index) g(of)
g(arra) n(y) e(`argumen) n(t_v) n(ector') g(to) i(access) 208
5141 y(corresp) r(onding) 25 b(option.) p Fd 0 5321 a(F) -8
b(unction) 32 b(`option_c) m(haracteristics') p 90 rotate
dyy eop
%%Page: 17 17
17 16 bop 0 -167 3900 5 v Fd 0 -200 a(9.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(bit) g(strings) p
Fh 2276 w(17) p Fc 782 162 a(`char) 41 b(*option_characteristics) j
(\(int) c(argument_number,) 1998 266 y(int) g(*option_has_argument\)') p
Fh 208 561 a(returns) h(p) r(oin) n(ter) h(to) h(option) f(name) g
(whic) n(h) h(describ) r(es) e(the) i(command) f(line) h(argumen) n(t) e
(with) i(n) n(um) n(b) r(er) g(`argu-) 208 674 y(men) n(t_n) n(um) n(b)
r(er') g(giv) n(en) h(as) f(the) i(\034rst) f(parameter) e(of) i(the) h
(function.) 87 b(The) 44 b(function) h(returns) e(NULL) i(if) g(the) 208
788 y(corresp) r(onding) 34 b(option) i(in) g(the) h(command) f(line) h
(description) e(is) h(not) h(found) f(or) g(an) g(option) g(describ) r
(ed) g(as) g(with) 208 901 y(option-argumen) n(t) c(has) i(not) g
(option-argumen) n(t) e(in) j(the) f(command) g(line.) 57
b(Remem) n(b) r(er) 34 b(that) h(option) f(name) g(with) 208
1015 y(option-argumen) n(t) g(di\033ers) j(from) f(option) h(in) g(the)
g(command) g(line) g(\(e.g.) 64 b(`-U') 37 b(and) f(`-Ufo) r(o'\).) 65
b(If) 37 b(the) g(option) g(in) 208 1129 y(the) 29 b(command) g(line) g
(description) f(is) h(found) h(than) f(the) g(function) h(sets) f(up) g
(corresp) r(ondingly) e(the) i(second) g(function) 208
1242 y(parameter) d(`option_has_argumen) n(t'.) 36 b(The) 28
b(case) g(of) g(returned) g(NULL) g(and) g(`*option_has_argumen) n(t') d
(equals) 208 1356 y(to) e(TR) n(UE) g(means) g(that) h(giv) n(en) e
(option) h(m) n(ust) g(ha) n(v) n(e) f(option-argumen) n(t) g(but) i
(the) f(option) g(has) g(not) g(option-argumen) n(t) 208
1469 y(in) k(the) h(command) f(line.) p Fd 0 1645 a(F) -8
b(unction) 32 b(`last_option_place') p Fc 782 1827 a(`int) 40
b(last_option_place) j(\(const) e(char) f(*option_name\)') p
Fh 208 2122 a(returns) 26 b(n) n(um) n(b) r(er) i(of) f(last) h(option)
f(with) h(giv) n(en) f(option) g(name) g(in) h(the) g(command) f(line.)
38 b(The) 27 b(function) h(returns) f(0) h(if) 208 2235
y(the) g(option) f(is) g(absen) n(t) g(in) h(the) g(command) f(line.) p
Fd 0 2411 a(F) -8 b(unction) 32 b(`option_argumen) m(t') p
Fc 782 2593 a(`char) 41 b(*option_argument) h(\(const) f(char) f
(*option_name\)') p Fh 208 2888 a(returns) 25 b(p) r(oin) n(ter) g(to) h
(argumen) n(t) f(of) h(last) g(option) g(in) g(the) g(command) g(line) g
(with) h(giv) n(en) e(option) g(name.) 37 b(The) 26 b(function) 208
3001 y(returns) 21 b(NULL) h(if) g(the) g(option) f(is) h(absen) n(t) f
(in) h(the) g(command) g(line.) 35 b(The) 22 b(function) g(m) n(ust) g
(b) r(e) g(called) f(only) g(for) h(options) 208 3115
y(whic) n(h) 27 b(ha) n(v) n(e) f(argumen) n(t) h(separated) f(b) n(y) h
(white) h(spaces.) p Fd 0 3291 a(V) -8 b(ariables) 32
b(`argumen) m(t_coun) m(t',) e(`argumen) m(t_v) m(ector') p
Fh 208 3436 a(ha) n(v) n(e) 39 b(analogous) f(v) -5 b(alues) 40
b(as) g(parameters) f(`argc') g(and) h(`argv') f(of) i(function) g
(`main'.) 75 b(See) 41 b(also) e(description) h(of) 208
3549 y(`start_command_line_pro) r(cessing'.) p Fe 0 3886
a(9) 131 b(P) l(ac) l(k) -7 b(age) 44 b(for) g(w) l(ork) h(with) f(bit)
h(strings) p Fh 0 4125 a(The) 29 b(pac) n(k) -5 b(age) 27
b(for) i(w) n(ork) e(with) j(bit) f(strings) f(is) h(used) g(to) g
(implemen) n(t) h(pac) n(k) -5 b(age) 27 b(`IEEE'.) k(But) e(of) g
(course) f(the) h(pac) n(k) -5 b(age) 27 b(can) 0 4238
y(b) r(e) h(used) f(for) h(solving) e(other) h(tasks.) 0
4395 y(Here) j(a) f(bit) i(is) f(giv) n(en) f(b) n(y) g(address) g
(\(start) h(address\)) f(of) h(b) n(yte) f(from) h(whic) n(h) g(coun) n
(ting) f(bits) h(starts) g(and) f(its) i(displacemen) n(t) 0
4508 y(whic) n(h) 24 b(is) g(an) n(y) g(non) g(negativ) n(e) f(n) n(um)
n(b) r(er) g(of) i(bit) f(from) g(the) h(start) e(address.) 35
b(The) 24 b(most) g(signi\034can) n(t) f(bit) i(of) f(the) h(start) e
(address) 0 4622 y(b) n(yte) k(has) g(n) n(um) n(b) r(er) h(0.) 36
b(The) 28 b(bit) g(string) f(is) g(giv) n(en) g(b) n(y) g(its) h
(\034rst) f(bit) h(and) g(its) g(length) f(in) h(bits.) 0
4778 y(The) 38 b(in) n(terface) e(part) h(of) h(the) g(pac) n(k) -5
b(age) 36 b(is) h(\034le) h(`bits.h'.) 67 b(The) 38 b(implemen) n
(tation) f(part) g(is) h(\034le) f(`bits.c'.) 67 b(The) 38
b(in) n(terface) 0 4892 y(con) n(tains) 27 b(the) g(follo) n(wing) g
(external) g(de\034nitions) g(of) h(macros) e(and) h(functions:) p
Fd 0 5122 a(Macro) 32 b(`BIT') p Fc 782 5303 a(`BIT\(start_byte,) 43
b(bit_displacement\)') p 90 rotate dyy eop
%%Page: 18 18
18 17 bop 0 -167 3900 5 v Fd 0 -200 a(9.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(w) m(ork) h(with) e(bit) g(strings) p
Fh 2276 w(18) 208 162 y(returns) 54 b(giv) n(en) g(bit) i(v) -5
b(alue) 55 b(as) g(in) n(teger) f(v) -5 b(alue) 55 b(`0') g(or) g(`1'.)
119 b(There) 55 b(is) g(macro) f(`SET_BIT) h(\(start_b) n(yte,) 208
275 y(bit_displacemen) n(t,) 27 b(bit\)) h(for) f(c) n(hanging) f(v) -5
b(alue) 28 b(of) f(a) g(bit.) 38 b(P) n(arameter) 26
b(`bit') i(m) n(ust) g(ha) n(v) n(e) e(v) -5 b(alue) 28
b(`0') f(or) g(`1'.) p Fd 0 454 a(F) -8 b(unction) 32
b(`is_zero_bit_string') p Fc 782 639 a(`int) 40 b(is_zero_bit_string) k
(\(const) c(void) g(*start_byte,) 1763 743 y(int) g(bit_displacement,)
1763 847 y(int) g(bit_length\)') p Fh 208 1145 a(returns) 26
b(`1') i(if) g(giv) n(en) e(bit) j(string) d(con) n(tains) h(only) g
(zero) g(v) -5 b(alue) 27 b(bits,) h(0) f(otherwise.) p
Fd 0 1324 a(F) -8 b(unction) 32 b(`bit_string_set') p
Fc 782 1508 a(`void) 41 b(bit_string_set) h(\(void) e(*start_byte,) i
(int) 1645 1612 y(bit_displacement,) h(int) d(bit,) 1645
1717 y(int) g(bit_length\)') p Fh 208 2015 a(sets) 21
b(up) i(new) f(v) -5 b(alue) 22 b(of) g(all) f(bits) i(of) f(giv) n(en)
f(bit) i(string.) 34 b(This) 22 b(function) g(is) g(bit) h(string) e
(analog) g(of) h(standard) f(C) h(function) 208 2129
y(`memset'.) p Fd 0 2307 a(F) -8 b(unction) 32 b(`bit_string_cop) m(y')
p Fc 782 2492 a(`void) 41 b(bit_string_copy) h(\(void) e(*to,) h(int) e
(to_bit_displacement,) 1684 2596 y(const) i(void) f(*from,) 1684
2700 y(int) g(from_bit_displacement,) 1684 2804 y(int) g(bit_length\)')
p Fh 208 3102 a(cop) n(ys) 29 b(a) g(bit) i(string) f(to) g(another) f
(bit) i(string.) 44 b(The) 30 b(bit) h(strings) f(m) n(ust) g(b) r(e) h
(nono) n(v) n(erlapp) r(ed.) 42 b(This) 31 b(function) f(is) h(bit) 208
3216 y(string) 26 b(analog) g(of) i(standard) e(C) i(function) g
(`memcp) n(y'.) p Fd 0 3394 a(F) -8 b(unction) 32 b(`bit_string_mo) m
(v) m(e') p Fc 782 3579 a(void) 40 b(bit_string_move) j(\(void) d(*to,)
g(int) g(to_bit_displacement,) 1645 3683 y(const) g(void) h(*from,) 1645
3787 y(int) f(from_bit_displacement,) 1645 3892 y(int) g(bit_length\)')
p Fh 208 4190 a(cop) n(ys) 26 b(a) i(bit) g(string) f(to) h(another) f
(bit) i(string.) 37 b(The) 28 b(bit) g(strings) f(can) h(b) r(e) g(o) n
(v) n(erlapp) r(ed.) 36 b(This) 28 b(function) h(is) e(bit) i(string)
208 4304 y(analog) c(of) j(standard) e(C) i(function) g(`memmo) n(v) n
(e'.) p Fd 0 4482 a(F) -8 b(unction) 32 b(`bit_string_comparison') p
Fc 782 4667 a(`int) 40 b(bit_string_comparison) 978 4771
y(\(const) h(void) f(*str1,) h(int) e(bit_displacement1,) 1018
4875 y(const) h(void) g(*str2,) h(int) e(bit_displacement2,) 1018
4979 y(int) h(bit_length\)') p Fh 208 5277 a(returns) 29
b(0) h(if) h(the) g(bit) g(strings) e(are) g(equal,) i(1) f(if) h(the) f
(\034rst) g(bit) h(string) f(is) g(greater) f(than) h(the) h(second,) f
(-1) g(if) h(the) f(\034rst) 208 5391 y(bit) c(string) g(is) g(less) g
(than) g(the) h(second.) 35 b(This) 26 b(function) h(is) f(bit) h
(string) f(analog) e(of) i(standard) f(C) i(function) f(`memcmp'.) p
90 rotate dyy eop
%%Page: 19 19
19 18 bop 0 -167 3900 5 v Fd 0 -200 a(10.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(arbitrary) 34
b(precision) d(in) m(teger) g(arithmetic) p Fh 626 w(19) p
Fe 0 162 a(10) 131 b(P) l(ac) l(k) -7 b(age) 74 b(for) g(mac) l
(hine-indep) t(enden) l(t) h(arbitrary) h(precision) f(in) l(teger) 263
332 y(arithmetic) p Fh 0 571 a(Abstract) 27 b(data) f(`arithm') h(ma) n
(y) g(b) r(e) g(used) g(for) g(implemen) n(tation) g(of) g(a) g
(cross-compiler.) 34 b(This) 27 b(abstract) f(data) h(implemen) n(ts) 0
684 y(arbitrary) 39 b(precision) h(in) n(teger) h(and) g(unsigned) g
(in) n(teger) f(n) n(um) n(b) r(er) h(arithmetic) g(b) n(y) g(mac) n
(hine) g(indep) r(enden) n(t) h(w) n(a) n(y) -7 b(.) 77
b(The) 0 798 y(implemen) n(tation) 20 b(of) g(the) g(pac) n(k) -5
b(age) 19 b(functions) h(are) f(not) h(su\036cien) n(tly) g(e\036cien) n
(t) g(in) g(order) e(to) i(use) g(for) g(run-time.) 34
b(The) 20 b(pac) n(k) -5 b(age) 0 911 y(functions) 32
b(are) e(orien) n(ted) g(to) i(implemen) n(t) f(constan) n(t-folding) f
(in) i(compilers.) 47 b(This) 31 b(pac) n(k) -5 b(age) 30
b(is) h(necessary) f(b) r(ecause) g(host) 0 1025 y(mac) n(hine) 25
b(ma) n(y) g(not) h(supp) r(ort) f(suc) n(h) g(arithmetic) h(for) f
(target) g(mac) n(hine.) 36 b(F) -7 b(or) 25 b(example,) g(V) -9
b(AX) 26 b(do) r(es) g(not) f(supp) r(ort) h(do) r(es) f(not) 0
1139 y(supp) r(ort) i(more) g(32-bits) g(in) n(teger) f(n) n(um) n(b) r
(ers) h(arithmetic.) 0 1295 y(The) h(n) n(um) n(b) r(ers) f(in) i(pac) n
(k) -5 b(ages) 26 b(are) h(represen) n(ted) f(b) n(y) i(b) n(ytes) f
(in) i(big) e(endian) h(mo) r(de,) g(negativ) n(e) f(in) n(teger) g(n) n
(um) n(b) r(ers) g(are) g(repre-) 0 1409 y(sen) n(ted) k(in) g
(complemen) n(tary) e(co) r(de.) 47 b(All) 31 b(sizes) f(are) g(giv) n
(en) g(in) i(b) n(ytes) e(and) h(m) n(ust) g(b) r(e) g(p) r(ositiv) n
(e.) 46 b(Results) 31 b(of) g(executions) f(of) 0 1522
y(all) c(functions) h(can) g(coincide) f(with) h(a) f(op) r
(erand\(s\).) 36 b(All) 27 b(functions) g(of) g(addition,) g
(subtraction,) f(m) n(ultiplication,) h(division,) 0
1636 y(ev) -5 b(aluation) 35 b(of) g(remainder,) i(shift,) h(c) n
(hanging) c(size) h(and) h(transformation) d(of) j(string) f(in) n(to) g
(n) n(um) n(b) r(er) g(\034x) h(o) n(v) n(er\035o) n(w.) 58
b(The) 0 1749 y(o) n(v) n(er\035o) n(w) 25 b(is) i(\034xed) h(when) g
(result) f(can) g(not) h(b) r(e) g(represen) n(ted) e(b) n(y) h(n) n
(um) n(b) r(er) h(of) f(giv) n(en) g(size.) 0 1906 y(The) 21
b(in) n(terface) g(part) g(of) g(the) h(abstract) e(data) h(is) g
(\034le) g(`arithm.h'.) 35 b(The) 21 b(implemen) n(tation) h(part) e
(is) i(\034le) f(`arithm.c'.) 35 b(The) 21 b(max-) 0
2019 y(im) n(um) 27 b(length) f(of) h(in) n(teger) e(n) n(um) n(b) r
(er) h(is) h(suggested) e(to) h(b) r(e) h(not) g(greater) d(then) j
(`MAX_INTEGER_OPERAND_SIZE'.) 0 2133 y(The) 57 b(default) g(v) -5
b(alue) 56 b(\(128\)) g(of) h(this) g(macro) e(can) i(b) r(e) g
(rede\034ned) f(with) i(corresp) r(onding) c(C) j(compiler) f(option) g
(`-) 0 2247 y(DMAX_INTEGER_OPERAND_SIZE=...') 79 b(during) 40
b(compilation) g(of) h(\034le) g(`arithm.c'.) 76 b(But) 41
b(in) g(an) n(y) f(case) g(the) 0 2360 y(minimal) 28
b(v) -5 b(alue) 27 b(of) h(the) g(macros) e(will) h(b) r(e) h(16.) 36
b(The) 28 b(in) n(terface) f(con) n(tains) f(the) i(follo) n(wing) f
(external) f(de\034nitions:) p Fd 0 2600 a(V) -8 b(ariable) 32
b(`o) m(v) m(er\035o) m(w_bit') p Fh 208 2746 a(has) h(only) g(t) n(w) n
(o) g(v) -5 b(alues) 33 b(0) g(or) g(1.) 54 b(The) 34
b(v) -5 b(alue) 34 b(`1') f(corresp) r(onds) f(to) h(o) n(v) n(er\035o)
n(w.) 52 b(The) 34 b(v) -5 b(ariable) 33 b(v) -5 b(alue) 33
b(are) g(mo) r(di\034ed) 208 2860 y(b) n(y) 25 b(all) h(functions) g
(of) g(addition,) g(subtract,) g(m) n(ultiplication,) g(division,) g
(ev) -5 b(aluation) 25 b(of) h(remainder,) g(shift,) h(c) n(hanging) 208
2974 y(size) g(and) g(transformation) f(of) i(string) e(in) n(to) i(n) n
(um) n(b) r(er.) p Fd 0 3154 a(V) -8 b(ariable) 32 b(`const) f
(unsigned) g(c) m(har) i(*zero_constan) m(t') p Fh 208
3300 a(represen) n(ts) 26 b(zero) g(\(unsigned\)) i(in) n(teger) e(of) i
(an) n(y) f(size.) p Fd 0 3480 a(F) -8 b(unction) 32
b(`v) m(oid) f(default_arithmetic_o) m(v) m(er\035o) m(w_reaction) i
(\(v) m(oid\)') p Fh 208 3627 a(Originally) 24 b(reaction) h(on) h(all)
h(in) n(teger) e(and) h(unsigned) g(in) n(teger) g(o) n(v) n(er\035o) n
(w) d(is) k(equal) e(to) i(this) f(function.) 37 b(The) 27
b(function) 208 3741 y(do) r(es) g(nothing.) 37 b(Reaction) 27
b(on) h(o) n(v) n(er\035o) n(w) d(for) i(in) n(tegers) f(or) h
(unsigned) h(in) n(tegers) e(is) i(called) f(after) g(setting) h(up) g
(v) -5 b(ariable) 208 3854 y(`o) n(v) n(er\035o) n(w_bit'.) p
Fd 0 4034 a(F) d(unction) 32 b(`set_in) m(teger_o) m(v) m(er\035o) m
(w_reaction') p Fc 704 4221 a(`void) 40 b
(\(*set_integer_overflow_reacti) q(on) 1018 4325 y(\(void) g
(\(*function\)) i(\(void\)\)\)) f(\(void\)') p Fh 208
4626 a(c) n(hanges) 17 b(reaction) h(on) h(in) n(teger) g(o) n(v) n
(er\035o) n(w) d(and) k(returns) e(previous) g(o) n(v) n(er\035o) n(w) f
(reaction) h(function.) 35 b(There) 18 b(is) h(analogous) 208
4740 y(function) p Fc 704 4910 a(`set_unsigned_integer_overflow_) q
(reac) q(tion') p Fh 208 5194 a(for) 27 b(unsigned) g(in) n(teger) f(o)
n(v) n(er\035o) n(w.) p Fd 0 5374 a(F) -8 b(unction) 32
b(`in) m(teger_maxim) m(um') p 90 rotate dyy eop
%%Page: 20 20
20 19 bop 0 -167 3900 5 v Fd 0 -200 a(10.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(arbitrary) 34
b(precision) d(in) m(teger) g(arithmetic) p Fh 626 w(20) p
Fc 704 162 a(`void) 40 b(integer_maximum) 121 b(\(int) 79
b(size,) h(void) f(*result\)') p Fh 208 460 a(creates) 34
b(giv) n(en) h(size) g(\(in) h(b) n(ytes\)) g(maximal) f(in) n(teger) f
(constan) n(t) h(whic) n(h) h(is) f(placed) g(in) h(memory) f(whose) g
(address) f(is) 208 574 y(giv) n(en) 26 b(b) n(y) i(the) g(second) e
(parameter.) 36 b(There) 27 b(is) g(analogous) e(function) p
Fc 704 743 a(`integer_minimum') 43 b(and) 704 847 y
(`unsigned_integer_maximum'.) p Fd 0 1129 a(F) -8 b(unction) 32
b(`add_in) m(teger') p Fc 704 1314 a(`void) 40 b(add_integer) i(\(int) e
(size,) 1449 1418 y(const) g(void) g(*op1,) h(const) f(void) g(*op2,)
1449 1522 y(void) g(*result\)') p Fh 208 1821 a(mak) n(es) 32
b(in) n(teger) g(addition) h(of) g(in) n(tegers) e(of) j(giv) n(en) e
(size.) 53 b(The) 33 b(function) h(\034xes) e(o) n(v) n(er\035o) n(w) f
(when) i(result) g(can) g(not) g(b) r(e) 208 1934 y(represen) n(ted) g
(b) n(y) h(n) n(um) n(b) r(er) g(of) h(giv) n(en) e(size.) 58
b(There) 33 b(are) h(analogous) e(functions) j(whic) n(h) f(implemen) n
(t) h(other) f(in) n(teger) 208 2048 y(op) r(erations:) p
Fc 704 2217 a(`subtract_integer',) 704 2321 y(`multiply_integer',) 704
2425 y(`divide_integer',) 704 2529 y(`integer_remainder'.) p
Fh 208 2812 a(Also) 27 b(there) g(are) g(analogous) e(functions) p
Fc 704 2981 a(`subtract_unsigned_integer',) 704 3085
y(`multiply_unsigned_integer',) 704 3189 y(`divide_unsigned_integer',)
704 3293 y(`unsigned_integer_remainder') p Fh 208 3576
a(for) i(unsigned) g(in) n(tegers.) p Fd 0 3754 a(F) -8
b(unction) 32 b(`in) m(teger_shift_left') p Fc 704 3939
a(`void) 79 b(integer_shift_left) 44 b(\(int) c(size,) 79
b(const) 41 b(void) f(*operand,) 1763 4043 y(int) g(bits,) g(void) g
(*result\)') p Fh 208 4342 a(mak) n(es) 35 b(left) i(shift) g(of) f(in)
n(teger) f(of) h(giv) n(en) g(size) g(on) f(giv) n(en) h(n) n(um) n(b) r
(er) g(of) g(bits.) 63 b(If) 37 b(n) n(um) n(b) r(er) f(of) g(bits) h
(is) f(negativ) n(e) f(the) 208 4455 y(function) 28 b(mak) n(es) f
(shift) i(to) e(righ) n(t) h(actually) -7 b(.) 37 b(The) 28
b(function) h(\034xes) e(o) n(v) n(er\035o) n(w) f(when) i(result) f
(can) h(not) g(b) r(e) g(represen) n(ted) 208 4569 y(b) n(y) i(n) n(um)
n(b) r(er) g(of) g(giv) n(en) g(size,) h(i.e.) 46 b(in) 31
b(other) e(w) n(ords) g(the) i(opp) r(osite) f(shift) i(\(to) e(righ) n
(t\)) g(results) g(in) h(n) n(um) n(b) r(er) f(not) h(equal) 208
4682 y(to) c(source) f(op) r(erand.) 36 b(There) 27 b(are) g(analogous)
e(functions) j(whic) n(h) f(implemen) n(t) h(another) f(in) n(teger) g
(op) r(eration) p Fc 704 4851 a(`integer_shift_right'.) p
Fh 208 5030 a(Also) g(there) g(are) g(analogous) e(functions) p
Fc 704 5199 a(`unsigned_integer_shift_left') 45 b(and) 704
5303 y(`unsigned_integer_shift_right') h(for) 40 b(unsigned) h
(integers.) p 90 rotate dyy eop
%%Page: 21 21
21 20 bop 0 -167 3900 5 v Fd 0 -200 a(10.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(arbitrary) 34
b(precision) d(in) m(teger) g(arithmetic) p Fh 626 w(21) p
Fd 0 162 a(F) -8 b(unction) 32 b(`in) m(teger_or') p
Fc 704 349 a(`void) 40 b(integer_or) i(\(int) e(size,) g(const) g(void)
g(*op1,) h(const) f(void) g(*op2,) 1410 453 y(void) g(*result\)') p
Fh 208 754 a(mak) n(es) 23 b(bit) n(wise) h(`or') g(of) g(in) n(tegers)
f(of) h(giv) n(en) g(size.) 35 b(There) 24 b(is) g(analogous) e
(function) j(whic) n(h) f(implemen) n(t) h(bit) n(wise) f(`and':) p
Fc 704 924 a(`integer_and'.) p Fh 208 1208 a(Also) j(there) g(are) g
(equiv) -5 b(alen) n(t) 27 b(functions) p Fc 704 1379
a(`unsigned_integer_or',) 704 1483 y(`unsigned_integer_and',) p
Fh 208 1767 a(for) g(unsigned) g(in) n(tegers.) 208 1914
y(F) -7 b(unction) p Fc 704 2084 a(`void) 40 b(integer_not) i(\(int) e
(size,) g(const) h(void) f(*operand,) 1449 2188 y(void) g(*result\)') p
Fh 208 2473 a(mak) n(es) 26 b(bit) n(wise) h(`not') h(of) g(in) n
(teger) e(of) i(giv) n(en) f(size.) 36 b(There) 27 b(is) h(equiv) -5
b(alen) n(t) 27 b(function) h(for) f(unsigned) g(in) n(teger:) p
Fc 704 2643 a(`unsigned_integer_not'.) p Fd 0 2927 a(F) -8
b(unction) 32 b(`eq_in) m(teger') p Fc 704 3114 a(`int) 40
b(eq_integer) h(\(int) g(size,) f(const) g(void) g(*op1,) h(const) f
(void) g(*op2\)') p Fh 208 3415 a(compares) 18 b(t) n(w) n(o) h(in) n
(tegers) f(of) i(giv) n(en) f(size) g(on) g(equalit) n(y) g(and) h
(returns) f(1) g(or) g(0) g(dep) r(ending) h(on) g(result) f(of) h(the)
g(comparison.) 208 3529 y(There) 27 b(are) f(analogous) f(functions) j
(whic) n(h) g(implemen) n(t) g(other) f(in) n(teger) f(op) r(erations:)
p Fc 704 3699 a(`ne_integer',) 704 3803 y(`gt_integer',) 704
3907 y(`lt_integer',) 704 4011 y(`ge_integer',) 704 4116
y(and) 40 b(`le_integer'.) p Fh 208 4400 a(Also) 27 b(there) g(are) g
(analogous) e(functions) p Fc 704 4570 a(`eq_unsigned_integer',) 704
4674 y(`ne_unsigned_integer',) 704 4778 y(`gt_unsigned_integer',) 704
4882 y(`lt_unsigned_integer',) 704 4987 y(`ge_unsigned_integer',) 704
5091 y(and) 40 b(`le_unsigned_integer') p Fh 208 5375
a(for) 27 b(unsigned) g(in) n(tegers.) p 90 rotate dyy
eop
%%Page: 22 22
22 21 bop 0 -167 3900 5 v Fd 0 -200 a(10.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(arbitrary) 34
b(precision) d(in) m(teger) g(arithmetic) p Fh 626 w(22) p
Fd 0 162 a(F) -8 b(unction) 32 b(`c) m(hange_in) m(teger_size') p
Fc 704 346 a(`void) 79 b(change_integer_size) 44 b(\(int) c
(operand_size,) 1802 450 y(const) 80 b(void) 40 b(*operand,) 1802
554 y(int) g(result_size,) i(void) e(*result\)') p Fh
208 852 a(c) n(hanges) 28 b(size) h(of) g(in) n(teger.) 42
b(The) 29 b(function) h(\034xes) f(o) n(v) n(er\035o) n(w) e(when) j
(result) f(can) g(not) h(b) r(e) g(represen) n(ted) e(b) n(y) h(n) n
(um) n(b) r(er) g(of) 208 966 y(giv) n(en) d(size.) 37
b(There) 27 b(is) g(analogous) e(function) p Fc 704 1134
a(`change_unsigned_integer_size') p Fh 208 1417 a(for) i(unsigned) g
(in) n(tegers.) p Fd 0 1595 a(F) -8 b(unction) 32 b(`in) m
(teger_to_string') p Fc 704 1779 a(`char) 40 b(*integer_to_string) j
(\(int) 80 b(size,) 40 b(const) g(void) g(*operand,) 1724
1883 y(char) g(*result\)') p Fh 208 2181 a(transforms) 24
b(in) n(teger) g(of) h(giv) n(en) g(size) g(to) g(decimal) h(ascii) e
(represen) n(tation.) 35 b(Sign) 25 b(is) g(presen) n(t) g(in) h
(result) f(string) g(only) g(for) 208 2295 y(negativ) n(e) h(n) n(um) n
(b) r(ers.) 36 b(The) 28 b(function) g(returns) f(v) -5
b(alue) 27 b(`result'.) 37 b(There) 27 b(is) g(analogous) e(function) p
Fc 704 2463 a(`unsigned_integer_to_string') p Fh 208
2746 a(for) i(unsigned) g(in) n(tegers.) p Fd 0 2924
a(F) -8 b(unction) 32 b(`in) m(teger_to_based_string') p
Fc 704 3108 a(`char) 40 b(*integer_to_based_string) 45
b(\(int) 79 b(size,) 40 b(const) h(void) f(*operand,) 1959
3212 y(int) g(base,) g(char) g(*result\)') p Fh 208 3510
a(transforms) 29 b(in) n(teger) h(of) h(giv) n(en) f(size) h(to) g
(ascii) f(represen) n(tation) f(with) j(giv) n(en) e(base.) 47
b(The) 31 b(base) f(should) h(b) r(e) g(b) r(et) n(w) n(een) 208
3624 y(2) c(and) h(36) g(including) g(them.) 39 b(Digits) 28
b(more) g(9) g(are) f(represen) n(ted) g(b) n(y) g('a',) i('b') f(etc.)
39 b(Sign) 28 b(is) g(presen) n(t) g(in) g(result) g(string) 208
3737 y(only) f(for) g(negativ) n(e) f(n) n(um) n(b) r(ers.) 36
b(The) 28 b(function) g(returns) f(v) -5 b(alue) 27 b(`result'.) 37
b(There) 27 b(is) g(analogous) f(function) p Fc 704 3906
a(`unsigned_integer_to_based_stri) q(ng') p Fh 208 4188
a(for) h(unsigned) g(in) n(tegers.) p Fd 0 4366 a(F) -8
b(unction) 32 b(`in) m(teger_from_string') p Fc 704 4551
a(`char) 40 b(*integer_from_string) k(\(int) 79 b(size,) 40
b(const) h(char) f(*operand,) 1802 4655 y(void) g(*result\)') p
Fh 208 4953 a(skips) 23 b(all) h(white) g(spaces) f(at) h(the) g(b) r
(egin) g(of) g(source) f(string) g(and) h(transforms) e(the) j(tail) f
(of) g(the) g(source) f(string) g(\(decimal) 208 5066
y(ascii) 28 b(represen) n(tation) f(with) j(p) r(ossible) f(sign) g
(`+') g(or) f(`-'\)) h(to) g(giv) n(en) g(size) g(in) n(teger) f(and) h
(returns) f(p) r(oin) n(ter) h(to) g(\034rst) g(non) 208
5180 y(digit) k(in) g(the) h(source) e(string.) 53 b(If) 34
b(the) g(string) e(started) h(with) h(in) n(v) -5 b(alid) 33
b(in) n(teger) f(represen) n(tation) g(the) h(result) g(will) h(b) r(e)
208 5294 y(zero.) 42 b(The) 30 b(function) h(\034xes) e(o) n(v) n
(er\035o) n(w) e(when) j(result) g(can) f(not) h(b) r(e) h(represen) n
(ted) d(b) n(y) i(n) n(um) n(b) r(er) f(of) h(giv) n(en) f(size.) 44
b(There) 208 5407 y(is) 27 b(analogous) e(function) p
90 rotate dyy eop
%%Page: 23 23
23 22 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(23) p Fc 704 162 a(`unsigned_integer_from_string') p
Fh 208 446 a(for) c(unsigned) g(in) n(tegers.) 36 b(But) 27
b(sign) g(`+') h(is) f(b) r(eliev) n(ed) h(to) f(b) r(e) h(not) g(part)
f(of) g(unsigned) h(in) n(teger.) p Fd 0 626 a(F) -8
b(unction) 32 b(`in) m(teger_from_based_string') p Fc
704 813 a(`char) 40 b(*integer_from_based_string) 45
b(\(int) 79 b(size,) 41 b(const) f(char) g(*operand,) 2037
917 y(int) g(base,) h(void) f(*result\)') p Fh 208 1218
a(skips) 30 b(all) g(white) h(spaces) f(at) g(the) h(b) r(egin) g(of) f
(source) g(string) g(and) g(transforms) f(the) i(tail) g(of) f(the) h
(source) f(string) f(\(ascii) 208 1331 y(represen) n(tation) 37
b(with) i(giv) n(en) f(base) g(and) h(with) g(p) r(ossible) g(sign) f
(`+') h(or) f(`-'\)) h(to) g(giv) n(en) f(size) g(in) n(teger) g(and) h
(returns) 208 1445 y(p) r(oin) n(ter) 29 b(to) i(\034rst) f(non) g
(digit) g(in) h(the) g(source) e(string.) 44 b(The) 31
b(base) e(should) h(b) r(e) h(b) r(et) n(w) n(een) f(2) g(and) h(36) e
(including) h(them.) 208 1558 y(Digits) d(more) g(9) h(are) f(represen)
n(ted) f(b) n(y) h('a') h(\(or) f('A'\),) i('b') f(\(or) f('B'\)) h
(etc.) 38 b(If) 28 b(the) g(string) f(started) g(with) h(in) n(v) -5
b(alid) 28 b(in) n(teger) 208 1672 y(represen) n(tation) e(the) j
(result) g(will) f(b) r(e) h(zero.) 39 b(The) 29 b(function) g(\034xes)
f(o) n(v) n(er\035o) n(w) e(when) j(result) g(can) f(not) g(b) r(e) h
(represen) n(ted) 208 1786 y(b) n(y) e(n) n(um) n(b) r(er) g(of) h(giv)
n(en) e(size.) 37 b(There) 27 b(is) g(analogous) f(function) p
Fc 704 1956 a(`unsigned_integer_from_based_st) q(ring) q(') p
Fh 208 2240 a(for) h(unsigned) g(in) n(tegers.) 36 b(But) 27
b(sign) g(`+') h(is) f(b) r(eliev) n(ed) h(to) f(b) r(e) h(not) g(part)
f(of) g(unsigned) h(in) n(teger.) p Fe 0 2579 a(11) 131
b(P) l(ac) l(k) -7 b(age) 72 b(for) h(mac) l(hine-indep) t(enden) l(t) g
(IEEE) h(\035oating) e(p) t(oin) l(t) h(arith-) 263 2749
y(metic) p Fh 0 2988 a(Abstract) 30 b(data) f(`IEEE') j(ma) n(y) d(b) r
(e) i(used) f(for) f(implemen) n(tation) h(of) g(a) g(cross-compiler.)
41 b(This) 30 b(abstract) f(data) h(implemen) n(ts) 0
3101 y(IEEE) d(\035oating) d(p) r(oin) n(t) h(arithmetic) h(b) n(y) e
(mac) n(hine) h(indep) r(enden) n(t) h(w) n(a) n(y) e(with) i(the) f
(aid) g(of) h(pac) n(k) -5 b(age) 23 b(`arithm'.) 36
b(This) 25 b(abstract) 0 3215 y(data) k(is) g(necessary) e(b) r(ecause)
h(host) h(mac) n(hine) g(ma) n(y) f(not) h(supp) r(ort) g(suc) n(h) g
(arithmetic) g(for) f(target) g(mac) n(hine.) 41 b(F) -7
b(or) 29 b(example,) 0 3328 y(V) -9 b(AX) 26 b(do) r(es) f(not) g(supp)
r(ort) h(IEEE) g(\035oating) f(p) r(oin) n(t) h(arithmetic.) 36
b(The) 25 b(\035oating) g(p) r(oin) n(t) g(n) n(um) n(b) r(ers) g(are) f
(represen) n(ted) g(b) n(y) h(b) n(ytes) 0 3442 y(in) 32
b(big) g(endian) g(mo) r(de.) 50 b(The) 31 b(implemen) n(tation) h(of) g
(the) h(pac) n(k) -5 b(age) 30 b(functions) i(are) f(not) h(su\036cien)
n(tly) g(e\036cien) n(t) g(in) g(order) e(to) 0 3555
y(use) 24 b(for) g(run-time.) 36 b(The) 24 b(pac) n(k) -5
b(age) 23 b(functions) h(are) g(orien) n(ted) f(to) h(implemen) n(t) h
(constan) n(t-folding) e(in) i(compilers.) 34 b(All) 25
b(in) n(teger) 0 3669 y(sizes) i(\(see) g(transformation) f
(functions\)) i(are) f(giv) n(en) g(in) g(b) n(ytes) h(and) f(m) n(ust)
h(b) r(e) g(p) r(ositiv) n(e.) 0 3826 y(F) -7 b(unctions) 34
b(of) g(addition,) i(subtraction,) f(m) n(ultiplication,) g(division,) h
(con) n(v) n(ersion) 31 b(\035oating) i(p) r(oin) n(t) i(n) n(um) n(b) r
(ers) e(of) h(di\033eren) n(t) 0 3939 y(formats) e(can) g(\034x) h
(input) g(exceptions.) 52 b(If) 33 b(an) f(op) r(erand) g(of) h(suc) n
(h) f(op) r(eration) g(is) g(trapping) g(\(signal\)) g(not) h(a) f(n) n
(um) n(b) r(er) h(then) 0 4053 y(in) n(v) -5 b(alid) 32
b(op) r(eration) e(and) i(reserv) n(ed) e(op) r(erand) h(exceptions) g
(are) g(\034xed) h(and) g(the) g(result) g(is) f(\(quiet\)) i(NaN,) f
(otherwise) f(if) h(an) 0 4166 y(op) r(erand) 20 b(is) g(\(quiet\)) h
(NaN) g(then) g(only) f(reserv) n(ed) f(op) r(erand) g(exception) h(is)
h(\034xed) f(and) h(the) g(result) f(is) g(\(quiet\)) i(NaN.) e(Op) r
(eration) 0 4280 y(sp) r(eci\034c) 35 b(pro) r(cessing) e(the) h(rest) g
(of) h(sp) r(ecial) f(case) g(v) -5 b(alues) 34 b(of) g(op) r(erands) g
(is) g(placed) g(with) h(description) f(of) g(the) h(op) r(eration.) 0
4393 y(In) c(general) f(case) g(the) i(function) g(can) e(\034x) i
(output) f(exceptions) g(and) g(pro) r(duces) f(results) h(for) g
(exception) f(according) g(to) h(the) 0 4507 y(follo) n(wing) 19
b(table.) 35 b(The) 20 b(result) h(and) f(status) g(for) g(a) g(giv) n
(en) g(exceptional) g(op) r(eration) f(are) g(determined) i(b) n(y) f
(the) h(highest) f(priorit) n(y) 0 4621 y(exception.) 35
b(If,) 24 b(for) e(example,) h(an) g(op) r(eration) e(pro) r(duces) h
(b) r(oth) h(o) n(v) n(er\035o) n(w) e(and) h(imprecise) g(result) g
(exceptions,) i(the) f(o) n(v) n(er\035o) n(w) 0 4734
y(exception,) 28 b(ha) n(ving) g(higher) f(priorit) n(y) -7
b(,) 28 b(determines) g(the) h(b) r(eha) n(vior) e(of) h(the) h(op) r
(eration.) 39 b(The) 28 b(b) r(eha) n(vior) f(of) h(this) h(op) r
(eration) 0 4848 y(is) e(therefore) g(describ) r(ed) g(b) n(y) h(the) g
(Ov) n(er\035o) n(w) d(en) n(try) i(of) g(the) h(table.) p
Fc 364 5078 a(Exception|Condition|) 828 b(|Result) 41
b(|Status) 286 5182 y(-----------|---------|--------) q(-----) q(----) q
(----|) q(-----) q(--|-) q(-----) q(----) q(---) 717
5286 y(|masked) 120 b(|) 353 b(IEEE_RN\(_RP\)|) 42 b(+Inf) 79
b(|IEEE_OFL) 41 b(and) 717 5390 y(|overflow) h(|) d(sign) h(+) 79
b(IEEE_RZ\(_RM\)|) 42 b(+Max) 79 b(|IEEE_IMP) p 90 rotate
dyy eop
%%Page: 24 24
24 23 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(24) p Fc 717 162 a(|exception|-----------------) q(----|) q(-----) q
(--|-) q(-----) q(----) q(---) 364 266 y(Overflow) 41
b(|) 354 b(|) 39 b(sign) h(-) 79 b(IEEE_RN\(_RM\)|) 42
b(-Inf) 79 b(|IEEE_OFL) 41 b(and) 717 370 y(|) 354 b(|) f
(IEEE_RZ\(_RP\)|) 42 b(-Max) 79 b(|IEEE_IMP) 717 474
y(|---------|-----------------) q(----|) q(-----) q(--|-) q(-----) q
(----) q(---) 717 578 y(|unmasked) 42 b(|) d(Precise) i(result) 236
b(|See) 158 b(|IEEE_OFL) 717 682 y(|overflow) 42 b
(|---------------------|above) 84 b(|-------------) 717
786 y(|exception|) 42 b(Imprecise) f(result) 158 b(|) 275
b(|IEEE_OFL) 41 b(and) 717 890 y(|) 354 b(|) 823 b(|) 275
b(|IEEE_IMP) 286 995 y(-----------|---------|--------) q(-----) q(----)
q(----|) q(-----) q(--|-) q(-----) q(----) q(---) 717
1099 y(|masked) 120 b(|) 823 b(|Rounded|IEEE_UFL) 43
b(and) 717 1203 y(|underflow|) f(Imprecise) f(result) 158
b(|result) 41 b(|IEEE_IMP) 325 1307 y(Underflow) g(|exception|) 826
b(|) 275 b(|) 717 1411 y(|---------|-----------------) q(----|) q
(-----) q(--|-) q(-----) q(----) q(---) 717 1515 y(|unmasked) 42
b(|) d(Precise) i(result) 236 b(|result) 41 b(|IEEE_UFL) 717
1619 y(|underflow|-----------------) q(----|) q(-----) q(--|-) q(-----)
q(----) q(---) 717 1723 y(|exception|) h(Imprecise) f(result) 158
b(|Rounded|IEEE_UFL) 43 b(and) 717 1827 y(|) 354 b(|) 823
b(|result) 41 b(|IEEE_IMP) 286 1932 y(-----------|------------------) q
(-----) q(----) q(----|) q(-----) q(--|-) q(-----) q(----) q(---) 717
2036 y(|masked) g(imprecise) g(exception) 198 b(|Rounded|IEEE_IMP) 325
2140 y(Imprecise) 41 b(|) 1216 b(|result) 41 b(|) 717
2244 y(|---------------------------) q(----|) q(-----) q(--|-) q(-----)
q(----) q(---) 717 2348 y(|unmasked) h(imprecise) f(exception) 119
b(|Rounded|IEEE_IMP) 717 2452 y(|) 1216 b(|result) 41
b(|) p Fh 0 2692 a(The) 23 b(pac) n(k) -5 b(age) 21 b(uses) h(pac) n(k)
-5 b(age) 22 b(`bits'.) 35 b(The) 23 b(in) n(terface) f(part) h(of) f
(the) i(abstract) d(data) i(is) f(\034le) h(`IEEE.h'.) 37
b(The) 23 b(implemen) n(tation) 0 2805 y(part) k(is) h(\034le) f
(`IEEE.c'.) 39 b(The) 27 b(in) n(terface) g(con) n(tains) g(the) h
(follo) n(wing) e(external) h(de\034nitions:) p Fd 0
3045 a(Macros) 32 b(`IEEE_FLO) m(A) -8 b(T_SIZE',) 32
b(`IEEE_DOUBLE_SIZE',) e(`IEEE_QUAD_SIZE') p Fh 208 3191
a(ha) n(v) n(e) 24 b(v) -5 b(alues) 26 b(whic) n(h) g(are) f(sizes) g
(of) h(IEEE) i(single,) e(double,) g(and) g(quad) f(precision) g
(\035oating) g(p) r(oin) n(t) i(n) n(um) n(b) r(ers) e(\(`4',) h(`8',)
208 3305 y(and) h(`16') g(corresp) r(ondingly\).) p Fd
0 3485 a(Macros) 32 b(`MAX_SINGLE_10_STRING_LENGTH',) f
(`MAX_DOUBLE_10_STRING_LENGTH',) g(`MAX_QUAD_10_STRING_LENGTH') p
Fh 208 3745 a(ha) n(v) n(e) 37 b(v) -5 b(alues) 38 b(whic) n(h) g(are) g
(maximal) g(length) g(of) h(string) e(generated) h(b) n(y) g(functions)
g(creating) g(decimal) g(ascii) g(rep-) 208 3859 y(resen) n(tation) h
(of) h(IEEE) i(\035oats) e(\(see) g(functions) g
(IEEE_single_to_string,) j(IEEE_doublele_to_string,) f(and) 208
3973 y(IEEE_quad_to_string\).) p Fd 0 4153 a(Macros) 32
b(`MAX_SINGLE_16_STRING_LENGTH',) f(`MAX_DOUBLE_16_STRING_LENGTH',) g
(`MAX_QUAD_16_STRING_LENGTH',) g(`MAX_SINGLE_8_STRING_LENGTH',) g
(`MAX_DOUBLE_8_STRING_LENGTH',) g(`MAX_QUAD_8_STRING_LENGTH',) h
(`MAX_SINGLE_4_STRING_LENGTH',) f(`MAX_DOUBLE_4_STRING_LENGTH',) g
(`MAX_QUAD_4_STRING_LENGTH',) g(`MAX_SINGLE_2_STRING_LENGTH',) g
(`MAX_DOUBLE_2_STRING_LENGTH',) h(`MAX_QUAD_2_STRING_LENGTH') p
Fh 208 4413 a(ha) n(v) n(e) 54 b(v) -5 b(alues) 56 b(whic) n(h) f(are) g
(maximal) g(length) h(of) g(string) f(generated) g(b) n(y) g(functions)
h(creating) f(binary) g(ascii) 208 4526 y(represen) n(tation) j(of) i
(IEEE) h(\035oats) f(with) g(giv) n(en) f(base) h(\(see) g(functions) g
(IEEE_single_to_binary_string,) 208 4640 y
(IEEE_doublele_to_binary_string,) 25 b(and) i
(IEEE_quad_to_binary_string\).) p Fd 0 4820 a(T) m(yp) s(es) 32
b(`IEEE_\035oat_t',) f(`IEEE_double_t',) e(and) j(`IEEE_quad_t') p
Fh 208 4967 a(represen) n(t) 43 b(corresp) r(ondingly) g(IEEE) j
(single) f(precision,) j(double,) h(and) c(quad) f(precision) g
(\035oating) g(p) r(oin) n(t) h(n) n(um-) 208 5080 y(b) r(ers.) 84
b(The) 44 b(size) f(of) h(these) g(t) n(yp) r(e) f(are) g(equal) g(to) h
(`IEEE_FLO) n(A) -7 b(T_SIZE',) 44 b(`IEEE_DOUBLE_SIZE',) h(and) 208
5194 y(`IEEE_QUAD_SIZE'.) p Fd 0 5374 a(F) -8 b(unction) 32
b(`IEEE_reset') p 90 rotate dyy eop
%%Page: 25 25
25 24 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(25) p Fc 704 162 a(`void) 40 b(IEEE_reset) i(\(void\)') p
Fh 208 462 a(and) 27 b(to) g(separate) f(bits) i(in) g(mask) f
(returned) g(b) n(y) g(functions) p Fc 704 633 a
(`IEEE_get_sticky_status_bits',) 704 737 y(`IEEE_get_status_bits',) 44
b(and) 704 841 y(`IEEE_get_trap_mask'.) p Fd 0 1125 a(F) -8
b(unction) 32 b(`IEEE_get_trap_mask') p Fc 704 1312 a(`int) 40
b(IEEE_get_trap_mask) j(\(void\)') p Fh 208 1613 a(returns) 26
b(exceptions) h(trap) g(mask.) 37 b(F) -7 b(unction) p
Fc 704 1784 a(`int) 40 b(IEEE_set_trap_mask) j(\(int) d(mask\)') p
Fh 208 2068 a(sets) 27 b(up) h(new) f(exception) h(trap) f(mask) g(and)
g(returns) g(the) h(previous.) 208 2214 y(If) e(the) g(mask) f(bit) h
(corresp) r(onding) e(giv) n(en) h(exception) g(is) h(set,) g(a) g
(\035oating) f(p) r(oin) n(t) h(exception) f(trap) g(do) r(es) h(not) g
(o) r(ccur) f(for) 208 2328 y(giv) n(en) 30 b(exception.) 47
b(Suc) n(h) 31 b(exception) f(is) h(said) g(to) f(b) r(e) i(mask) n(ed)
e(exception.) 47 b(Initial) 31 b(exception) f(trap) h(mask) f(is) h
(zero.) 208 2442 y(Remem) n(b) r(er) c(that) h(more) f(one) g
(exception) g(ma) n(y) g(b) r(e) h(o) r(ccurred) e(sim) n(ultaneously)
-7 b(.) p Fd 0 2622 a(F) f(unction) 32 b(`IEEE_set_stic) m
(ky_status_bits') p Fc 704 2809 a(`int) 40 b
(IEEE_set_sticky_status_bits) 45 b(\(int) 40 b(mask\)') p
Fh 208 3109 a(c) n(hanges) 26 b(stic) n(ky) h(status) g(bits) h(and) f
(returns) g(the) h(previous) e(bits.) 208 3256 y(F) -7
b(unction) p Fc 704 3427 a(`int) 40 b(IEEE_get_sticky_status_bits) 45
b(\(void\)') p Fh 208 3711 a(returns) 24 b(mask) h(of) h(curren) n(t) e
(stic) n(ky) h(status) h(bits.) 36 b(Only) 25 b(stic) n(ky) g(status) g
(bits) h(corresp) r(onding) e(to) h(mask) n(ed) g(exceptions) 208
3824 y(are) h(up) r(dated) i(regardless) d(whether) j(a) f(\035oating) g
(p) r(oin) n(t) g(exception) g(trap) g(is) h(tak) n(en) f(or) g(not.) 36
b(Initial) 28 b(v) -5 b(alues) 27 b(of) h(stic) n(ky) 208
3938 y(status) f(bits) h(are) e(zero.) p Fd 0 4118 a(F) -8
b(unction) 32 b(`IEEE_get_status_bits') p Fc 704 4305
a(`int) 40 b(IEEE_get_status_bits) k(\(void\)') p Fh
208 4606 a(returns) 27 b(mask) h(of) h(status) f(bits.) 40
b(It) 29 b(is) g(supp) r(osed) f(that) h(the) g(function) g(will) g(b) r
(e) g(used) g(in) f(trap) h(on) f(an) g(\035oating) g(p) r(oin) n(t) 208
4719 y(exception.) 36 b(Status) 27 b(bits) g(are) e(up) r(dated) j
(regardless) c(of) j(the) g(curren) n(t) f(exception) g(trap) g(mask) g
(only) h(when) g(a) f(\035oating) 208 4833 y(p) r(oin) n(t) h
(exception) g(trap) h(is) f(tak) n(en.) 36 b(Initial) 28
b(v) -5 b(alues) 27 b(of) h(status) f(bits) h(are) e(zero.) p
Fd 0 5013 a(Constan) m(ts) 32 b(`IEEE_RN',) d(`IEEE_RM',) g(`IEEE_RP',)
h(`IEEE_RZ') p Fh 208 5160 a(de\034nes) f(rounding) g(con) n(trol) f
(\(round) h(to) h(nearest) e(represen) n(table) g(n) n(um) n(b) r(er,) i
(round) f(to) n(w) n(ard) f(min) n(us) h(in\034nit) n(y) -7
b(,) 31 b(round) 208 5273 y(to) n(w) n(ard) 25 b(plus) j(in\034nit) n
(y) -7 b(,) 28 b(round) f(to) n(w) n(ard) f(zero\).) p
90 rotate dyy eop
%%Page: 26 26
26 25 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(26) 208 162 y(Round) 25 b(to) h(nearest) f(means) g(the) h(result) g
(pro) r(duced) f(is) h(the) g(represen) n(table) e(v) -5
b(alue) 25 b(nearest) g(to) h(the) g(in\034nitely-precise) 208
275 y(result.) 58 b(There) 35 b(are) f(sp) r(ecial) g(cases) g(when) h
(in\034nitely) h(precise) e(result) h(falls) g(exactly) f(halfw) n(a) n
(y) g(b) r(et) n(w) n(een) h(t) n(w) n(o) f(rep-) 208
389 y(resen) n(table) e(v) -5 b(alues.) 54 b(In) 34 b(this) g(cases) f
(the) g(result) h(will) g(b) r(e) g(whic) n(hev) n(er) e(of) h(those) h
(t) n(w) n(o) e(represen) n(table) g(v) -5 b(alues) 33
b(has) g(a) 208 502 y(fractional) 26 b(part) h(whose) g(least) g
(signi\034can) n(t) g(bit) h(is) f(zero.) 208 648 y(Round) 32
b(to) n(w) n(ard) f(min) n(us) i(in\034nit) n(y) g(means) f(the) h
(result) f(pro) r(duced) h(is) f(the) h(represen) n(table) e(v) -5
b(alue) 33 b(closest) f(to) g(but) h(no) 208 762 y(greater) 25
b(than) j(the) g(in\034nitely) g(precise) f(result.) 208
907 y(Round) g(to) n(w) n(ard) e(plus) i(in\034nit) n(y) g(means) g
(the) g(result) g(pro) r(duced) f(is) h(the) g(represen) n(table) f(v)
-5 b(alue) 26 b(closest) h(to) f(but) i(no) f(less) 208
1021 y(than) g(the) h(in\034nitely) g(precise) f(result.) 208
1167 y(Round) 35 b(to) n(w) n(ard) e(zero,) j(i.e.) 60
b(the) 36 b(result) e(pro) r(duced) h(is) g(the) h(represen) n(table) d
(v) -5 b(alue) 35 b(closest) g(to) g(but) h(no) e(greater) g(in) 208
1280 y(magnitude) 27 b(than) h(the) g(in\034nitely) g(precise) e
(result.) 37 b(There) 27 b(are) g(t) n(w) n(o) f(functions) p
Fc 704 1449 a(`int) 40 b(IEEE_set_round) i(\(int) e(round_mode\)') p
Fh 208 1731 a(whic) n(h) 27 b(sets) g(up) h(curren) n(t) f(rounding) g
(mo) r(de) g(and) h(returns) e(previous) h(mo) r(de) g(and) p
Fc 704 1899 a(`int) 40 b(IEEE_get_round) i(\(void\)') p
Fh 208 2181 a(whic) n(h) 27 b(returns) g(curren) n(t) g(mo) r(de.) 36
b(Initial) 28 b(rounding) f(mo) r(de) g(is) h(round) f(to) g(nearest.) p
Fd 0 2359 a(F) -8 b(unction) 32 b(`default_\035oating_p) s(oin) m
(t_exception_trap') p Fc 704 2543 a(`void) 40 b
(default_floating_point_except) q(ion_t) q(rap) 46 b(\(void\)') p
Fh 208 2841 a(Originally) 23 b(reaction) g(on) i(o) r(ccurred) e(trap) h
(on) h(an) f(unmask) n(ed) g(\035oating) g(p) r(oin) n(t) h(exception) f
(is) h(equal) f(to) h(this) g(function.) 208 2954 y(The) 32
b(function) h(do) r(es) f(nothing.) 52 b(All) 32 b(o) r(ccurred) g
(exceptions) g(can) g(b) r(e) h(found) f(in) h(the) g(trap) f(with) h
(the) g(aid) f(of) g(status) 208 3068 y(bits.) p Fd 0
3246 a(F) -8 b(unction) 32 b(`IEEE_set_\035oating_p) s(oin) m
(t_exception_trap') p Fc 704 3430 a(`void) 40 b
(\(*IEEE_set_floating_point_exc) q(eptio) q(n_tr) q(ap) 1018
3534 y(\(void) g(\(*function\)) i(\(void\)\)\)) f(\(void\)') p
Fh 208 3832 a(sets) 21 b(up) h(trap) f(on) h(an) f(unmask) n(ed) g
(exception.) 35 b(F) -7 b(unction) 22 b(giv) n(en) f(as) g(parameter) f
(sim) n(ulates) i(\035oating) f(p) r(oin) n(t) g(exception) 208
3945 y(trap.) p Fd 0 4123 a(F) -8 b(unction) 32 b(`IEEE_p) s(ositiv) m
(e_zero') p Fc 704 4307 a(`IEEE_float_t) 42 b(IEEE_positive_zero) h
(\(void\)') p Fh 208 4605 a(returns) 19 b(p) r(ositiv) n(e) h(single) f
(precision) g(zero) g(constan) n(t.) 34 b(There) 19 b(are) g(analogous)
f(functions) i(whic) n(h) g(return) g(other) f(sp) r(ecial) 208
4718 y(case) 26 b(v) -5 b(alues:) p Fc 704 4887 a
(`IEEE_negative_zero',) 704 4991 y(`IEEE_NaN',) 704 5095
y(`IEEE_trapping_NaN',) 704 5199 y(`IEEE_positive_infinity',) 704
5303 y(`IEEE_negative_infinity',) 704 5407 y
(`IEEE_double_positive_zero',) p 90 rotate dyy eop
%%Page: 27 27
27 26 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(27) p Fc 704 162 a(`IEEE_double_negative_zero',) 704
266 y(`IEEE_double_NaN',) 704 370 y(`IEEE_double_trapping_NaN',) 704
474 y(`IEEE_double_positive_infinity') q(,) 704 578 y
(`IEEE_double_negative_infinity') q(.) 704 682 y
(`IEEE_quad_positive_zero',) 704 786 y(`IEEE_quad_negative_zero',) 704
890 y(`IEEE_quad_NaN',) 704 995 y(`IEEE_quad_trapping_NaN',) 704
1099 y(`IEEE_quad_positive_infinity',) 704 1203 y
(`IEEE_quad_negative_infinity'.) p Fh 208 1486 a(A) n(ccording) 25
b(to) i(the) g(IEEE) i(standard) d(NaN) h(\(and) g(trapping) f(NaN\)) h
(can) g(b) r(e) g(represen) n(ted) f(b) n(y) h(more) f(one) g(bit) i
(string.) 208 1600 y(But) 39 b(all) g(functions) g(of) h(the) f(pac) n
(k) -5 b(age) 38 b(generate) g(and) h(use) g(only) g(one) f(its) i
(represen) n(tation) d(created) i(b) n(y) g(function) 208
1713 y(`IEEE_NaN') 50 b(\(and) f(`IEEE_trapping_NaN',) g
(`IEEE_double_NaN',) h(`IEEE_double_trapping_NaN',) 208
1827 y(`IEEE_quad_NaN',) 38 b(`IEEE_quad_trapping_NaN'\).) g(A) g
(\(quiet\)) h(NaN) f(do) r(es) g(not) g(cause) g(an) g(In) n(v) -5
b(alid) 38 b(Op-) 208 1941 y(eration) f(exception) i(and) f(can) g(b) r
(e) h(rep) r(orted) f(as) g(an) h(op) r(eration) e(result.) 70
b(A) 39 b(trapping) f(NaN) h(causes) f(an) g(In) n(v) -5
b(alid) 208 2054 y(Op) r(eration) 24 b(exception) g(if) i(used) f(as) g
(in) g(input) h(op) r(erand) e(to) h(\035oating) f(p) r(oin) n(t) i(op)
r(eration.) 34 b(T) -7 b(rapping) 25 b(NaN) g(can) g(not) g(b) r(e) 208
2168 y(rep) r(orted) h(as) h(an) h(op) r(eration) e(result.) p
Fd 0 2347 a(F) -8 b(unction) 32 b(`IEEE_is_p) s(ositiv) m(e_zero') p
Fc 704 2533 a(`int) 40 b(IEEE_is_positive_zero) k(\(IEEE_float) d
(single_float\)') p Fh 208 2833 a(returns) 27 b(1) h(if) h(giv) n(en) e
(n) n(um) n(b) r(er) h(is) g(p) r(ositiv) n(e) g(single) g(precision) f
(zero) g(constan) n(t.) 38 b(There) 28 b(are) f(analogous) f(functions)
j(for) 208 2947 y(other) e(sp) r(ecial) g(case) f(v) -5
b(alues:) p Fc 704 3117 a(`IEEE_is_negative_zero',) 704
3221 y(`IEEE_is_NaN',) 704 3325 y(`IEEE_is_trapping_NaN',) 704
3429 y(`IEEE_is_positive_infinity',) 704 3533 y
(`IEEE_is_negative_infinity',) 704 3637 y(`IEEE_is_positive_maximum') 45
b(\(positive) c(max) f(value\),) 704 3741 y
(`IEEE_is_negative_maximum',) 704 3846 y(`IEEE_is_positive_minimum') 45
b(\(positive) c(min) f(value\),) 704 3950 y
(`IEEE_is_negative_minimum',) 704 4054 y
(`IEEE_is_double_positive_zero',) 704 4158 y
(`IEEE_is_double_negative_zero',) 704 4262 y(`IEEE_is_double_NaN',) 704
4366 y(`IEEE_is_double_trapping_NaN',) 704 4470 y
(`IEEE_is_double_positive_infini) q(ty',) 704 4574 y
(`IEEE_is_double_negative_infini) q(ty',) 704 4678 y
(`IEEE_is_double_positive_maximu) q(m',) 704 4783 y
(`IEEE_is_double_negative_maximu) q(m',) 704 4887 y
(`IEEE_is_double_positive_minimu) q(m',) 704 4991 y
(`IEEE_is_double_negative_minimu) q(m'.) 704 5095 y
(`IEEE_is_quad_positive_zero',) 704 5199 y
(`IEEE_is_quad_negative_zero',) 704 5303 y(`IEEE_is_quad_NaN',) 704
5407 y(`IEEE_is_quad_trapping_NaN',) p 90 rotate dyy
eop
%%Page: 28 28
28 27 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(28) p Fc 704 162 a(`IEEE_is_quad_positive_infinity) q(',) 704
266 y(`IEEE_is_quad_negative_infinity) q(',) 704 370
y(`IEEE_is_quad_positive_maximum') q(,) 704 474 y
(`IEEE_is_quad_negative_maximum') q(,) 704 578 y
(`IEEE_is_quad_positive_minimum') q(,) 704 682 y
(`IEEE_is_quad_negative_minimum') q(.) p Fh 208 965 a(In) 73
b(spite) g(of) g(that) g(all) g(functions) g(of) g(the) g(pac) n(k) -5
b(age) 71 b(generate) h(and) h(use) g(only) f(one) h(its) g(represen-)
208 1079 y(tation) 61 b(created) g(b) n(y) h(function) g(`IEEE_NaN') h
(\(or) e(`IEEE_trapping_NaN',) h(or) e(`IEEE_double_NaN',) 208
1192 y(or) 79 b(`IEEE_double_trapping_NaN',) i(or) f(`IEEE_quad_NaN',) h
(or) f(`IEEE_quad_trapping_NaN'\).) 208 1306 y(The) d(function) i
(`IEEE_is_NaN') f(\(and) g(`IEEE_trapping_NaN',) g(and) g
(`IEEE_double_NaN',) g(and) 208 1419 y(`IEEE_double_trapping_NaN',) 33
b(and) h(`IEEE_quad_NaN',) g(and) f(`IEEE_quad_trapping_NaN'\)) h
(deter-) 208 1533 y(mines) 27 b(an) n(y) g(represen) n(tation) f(of) h
(NaN.) p Fd 0 1712 a(F) -8 b(unction) 32 b(`IEEE_is_normalized') p
Fc 704 1897 a(`int) 40 b(IEEE_is_normalized) j(\(IEEE_float_t) f
(single_float\)') p Fh 208 2195 a(returns) 24 b(TR) n(UE) h(if) g
(single) g(precision) f(n) n(um) n(b) r(er) g(is) h(normalized) f(\(sp)
r(ecial) g(case) g(v) -5 b(alues) 25 b(are) f(not) h(normalized\).) 35
b(There) 208 2309 y(is) 27 b(analogous) e(function) p
Fc 704 2478 a(`IEEE_is_denormalized') p Fh 208 2761 a(for) i
(determination) g(of) g(denormalized) g(n) n(um) n(b) r(er.) 36
b(There) 27 b(are) g(analogous) e(functions) p Fc 704
2930 a(`IEEE_is_double_normalized') 45 b(and) 704 3034
y(`IEEE_is_double_denormalized') g(and) 704 3138 y
(`IEEE_is_quad_normalized') g(and) 704 3242 y
(`IEEE_is_quad_denormalized') p Fh 208 3525 a(for) 27
b(doubles) g(and) g(quads.) p Fd 0 3704 a(F) -8 b(unction) 32
b(`IEEE_add_single') p Fc 704 3889 a(`IEEE_float_t) 42
b(IEEE_add_single) g(\(IEEE_float_t) h(single1,) 1920
3993 y(IEEE_float_t) f(single2\)') p Fh 208 4292 a(mak) n(es) 24
b(single) h(precision) g(addition) g(of) h(\035oating) f(p) r(oin) n(t)
h(n) n(um) n(b) r(ers.) 35 b(There) 26 b(are) e(analogous) g(functions)
h(whic) n(h) h(imple-) 208 4405 y(men) n(t) h(other) g(\035oating) g(p)
r(oin) n(t) h(op) r(erations:) p Fc 704 4574 a(`IEEE_subtract_single',)
704 4678 y(`IEEE_multiply_single',) 704 4783 y(`IEEE_divide_single',)
704 4887 y(`IEEE_add_double',) 704 4991 y(`IEEE_subtract_double',) 704
5095 y(`IEEE_multiply_double',) 704 5199 y(`IEEE_divide_double'.) 704
5303 y(`IEEE_add_quad',) 704 5407 y(`IEEE_subtract_quad',) p
90 rotate dyy eop
%%Page: 29 29
29 28 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(29) p Fc 704 162 a(`IEEE_multiply_quad',) 704 266 y
(`IEEE_divide_quad'.) p Fh 208 550 a(Results) e(and) g(input) i
(exceptions) d(for) h(op) r(erands) g(of) g(sp) r(ecial) g(cases) g(v)
-5 b(alues) 29 b(\(except) g(for) g(NaNs\)) h(are) e(describ) r(ed) i
(for) 208 663 y(addition) d(b) n(y) g(the) h(follo) n(wing) f(table) p
Fc 861 834 a(first) 79 b(|) 354 b(second) 40 b(operand) 861
938 y(operand|-----------------------) q(-----) q(----) q(-----) q(--)
1135 1042 y(|) 157 b(+Inf) 237 b(|) 157 b(-Inf) 197 b(|) 118
b(Others) 861 1146 y(-------|--------------|--------) q(-----) q(|---) q
(-----) q(--) 861 1250 y(+Inf) g(|) 157 b(+Inf) 237 b(|) 196
b(NaN) h(|) 118 b(+Inf) 1135 1355 y(|) 157 b(none) 237
b(|IEEE_INV\(_RO\)|) 121 b(none) 861 1459 y
(-------|--------------|--------) q(-----) q(|---) q(-----) q(--) 861
1563 y(-Inf) d(|) 157 b(NaN) 276 b(|) 157 b(-Inf) 197
b(|) 118 b(-Inf) 1135 1667 y(|IEEE_INV\(_RO\)) 43 b(|) 157
b(none) 197 b(|) 118 b(none) 861 1771 y
(-------|--------------|--------) q(-----) q(|---) q(-----) q(--) 861
1875 y(Others) 40 b(|) 157 b(+Inf) 237 b(|) 157 b(-Inf) 197
b(|) 1135 1979 y(|) 157 b(none) 237 b(|) 157 b(none) 197
b(|) p Fh 208 2159 a(Results) 29 b(and) g(input) i(exceptions) d(for) h
(op) r(erands) g(of) g(sp) r(ecial) g(cases) g(v) -5
b(alues) 29 b(\(except) g(for) g(NaNs\)) h(are) e(describ) r(ed) i(for)
208 2273 y(subtraction) c(b) n(y) i(the) g(follo) n(wing) e(table) p
Fc 861 2443 a(first) 79 b(|) 354 b(second) 40 b(operand) 861
2547 y(operand|-----------------------) q(-----) q(----) q(-----) q(--)
1135 2652 y(|) 157 b(+Inf) 197 b(|) 157 b(-Inf) 237 b(|) 118
b(Others) 861 2756 y(-------|-------------|---------) q(-----) q(|---) q
(-----) q(--) 861 2860 y(+Inf) g(|) 197 b(NaN) f(|) 157
b(+Inf) 237 b(|) 118 b(+Inf) 1135 2964 y(|IEEE_INV\(_RO\)|) 160
b(none) 237 b(|) 118 b(none) 861 3068 y
(-------|-------------|---------) q(-----) q(|---) q(-----) q(--) 861
3172 y(-Inf) g(|) 157 b(-Inf) 197 b(|) 157 b(NaN) 276
b(|) 118 b(-Inf) 1135 3276 y(|) 157 b(none) 197 b(|IEEE_INV\(_RO\)) 43
b(|) 118 b(none) 861 3380 y(-------|-------------|---------) q(-----) q
(|---) q(-----) q(--) 861 3484 y(Others) 40 b(|) 157
b(-Inf) 197 b(|) 157 b(+Inf) 237 b(|) 1135 3589 y(|) 157
b(none) 197 b(|) 157 b(none) 237 b(|) p Fh 208 3769 a(Results) 29
b(and) g(input) i(exceptions) d(for) h(op) r(erands) g(of) g(sp) r
(ecial) g(cases) g(v) -5 b(alues) 29 b(\(except) g(for) g(NaNs\)) h
(are) e(describ) r(ed) i(for) 208 3882 y(m) n(ultiplication) d(b) n(y) g
(the) h(follo) n(wing) f(table) p Fc 704 4053 a(first) 79
b(|) 354 b(second) 40 b(operand) 704 4157 y
(operand|-----------------------) q(----) q(-----) q(----) q(-----) q
(----) q(-----) q(-) 978 4261 y(|) 158 b(+Inf) 197 b(|) 157
b(-Inf) 197 b(|) 157 b(0) 314 b(|) 118 b(Others) 704
4365 y(-------|-------------|---------) q(----) q(|----) q(----) q
(-----) q(|---) q(-----) q(-) 704 4469 y(+Inf) g(|) 158
b(+Inf) 197 b(|) 157 b(-Inf) 197 b(|) 157 b(NaN) 236
b(|) 78 b(\(+-\)Inf) 978 4573 y(|) 158 b(none) 197 b(|) 157
b(none) 197 b(|IEEE_INV\(_RO\)|) 121 b(none) 704 4677
y(-------|-------------|---------) q(----) q(|----) q(----) q(-----) q
(|---) q(-----) q(-) 704 4781 y(-Inf) d(|) 158 b(-Inf) 197
b(|) 157 b(+Inf) 197 b(|) 157 b(NaN) 236 b(|) 78 b(\(+-\)Inf) 978
4885 y(|) 158 b(none) 197 b(|) 157 b(none) 197 b(|IEEE_INV\(_RO\)|) 121
b(none) 704 4990 y(-------|-------------|---------) q(----) q(|----) q
(----) q(-----) q(|---) q(-----) q(-) 704 5094 y(0) 235
b(|) 197 b(NaN) g(|) 157 b(NaN) 236 b(|) 117 b(\(+-\)0) 198
b(|) 78 b(\(+-\)0) 978 5198 y(|IEEE_INV\(_RO\)|IEEE_INV\(_RO\)) q(|) 123
b(none) 237 b(|) 78 b(none) 704 5302 y(-------|-------------|---------)
q(----) q(|----) q(----) q(-----) q(|---) q(-----) q(-) 704
5406 y(Others) 40 b(|) 118 b(\(+-\)Inf) i(|) d(\(+-\)Inf) j(|) d
(\(+-\)0) 198 b(|) p 90 rotate dyy eop
%%Page: 30 30
30 29 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(30) p Fc 978 162 a(|) 158 b(none) 197 b(|) 157 b(none) 197
b(|) 117 b(none) 237 b(|) p Fh 208 342 a(Results) 29
b(and) g(input) i(exceptions) d(for) h(op) r(erands) g(of) g(sp) r
(ecial) g(cases) g(v) -5 b(alues) 29 b(\(except) g(for) g(NaNs\)) h
(are) e(describ) r(ed) i(for) 208 455 y(division) d(b) n(y) g(the) h
(follo) n(wing) e(table) p Fc 704 626 a(first) 79 b(|) 354
b(second) 40 b(operand) 704 730 y(operand|-----------------------) q
(----) q(-----) q(----) q(-----) q(----) q(-----) q(-) 978
834 y(|) 158 b(+Inf) 197 b(|) 157 b(-Inf) 197 b(|) 157
b(0) 314 b(|) 118 b(Others) 704 938 y(-------|-------------|---------) q
(----) q(|----) q(----) q(-----) q(|---) q(-----) q(-) 704
1042 y(+Inf) g(|) 197 b(NaN) g(|) f(NaN) h(|) 117 b(\(+-\)Inf) j(|) 78
b(\(+-\)Inf) 978 1146 y(|IEEE_INV\(_RO\)|IEEE_INV\(_RO\)) q(|) 123
b(none) 237 b(|) 118 b(none) 704 1250 y
(-------|-------------|---------) q(----) q(|----) q(----) q(-----) q
(|---) q(-----) q(-) 704 1355 y(-Inf) g(|) 197 b(NaN) g(|) f(NaN) h(|)
117 b(\(+-\)Inf) j(|) 78 b(\(+-\)Inf) 978 1459 y
(|IEEE_INV\(_RO\)|IEEE_INV\(_RO\)) q(|) 123 b(none) 237
b(|) 118 b(none) 704 1563 y(-------|-------------|---------) q(----) q
(|----) q(----) q(-----) q(|---) q(-----) q(-) 704 1667
y(0) 235 b(|) 118 b(\(+-\)0) 198 b(|) 117 b(\(+-\)0) 198
b(|) e(NaN) h(|) 78 b(\(+-\)0) 978 1771 y(|) 118 b(none) 237
b(|) 117 b(none) 237 b(|IEEE_INV\(_RO\)|) 81 b(none) 704
1875 y(-------|-------------|---------) q(----) q(|----) q(----) q
(-----) q(|---) q(-----) q(-) 704 1979 y(Others) 40 b(|) 118
b(\(+-\)0) 198 b(|) 117 b(\(+-\)0) 198 b(|) 117 b(\(+-\)Inf) j(|) 978
2083 y(|) e(none) 237 b(|) 157 b(none) 197 b(|) 117 b(IEEE_DZ) j(|) p
Fd 0 2263 a(F) -8 b(unction) 32 b(`IEEE_eq_single') p
Fc 704 2450 a(`int) 40 b(IEEE_eq_single) i(\(IEEE_float_t) g(single1,)
1528 2555 y(IEEE_float_t) f(single2\)') p Fh 208 2855
a(compares) 20 b(t) n(w) n(o) g(single) h(precision) g(\035oating) g(p)
r(oin) n(t) h(n) n(um) n(b) r(ers) f(on) g(equalit) n(y) g(and) g
(returns) g(1) g(or) g(0) g(dep) r(ending) h(on) f(result) 208
2969 y(of) 27 b(the) h(comparison.) 35 b(There) 27 b(are) g(analogous) e
(functions) j(whic) n(h) f(implemen) n(t) h(other) f(in) n(teger) g(op)
r(erations:) p Fc 704 3139 a(`IEEE_ne_single',) 704 3243
y(`IEEE_gt_single',) 704 3348 y(`IEEE_lt_single',) 704
3452 y(`IEEE_ge_single',) 704 3556 y(`IEEE_le_single',) 704
3660 y(`IEEE_eq_double',) 704 3764 y(`IEEE_ne_double',) 704
3868 y(`IEEE_gt_double',) 704 3972 y(`IEEE_lt_double',) 704
4076 y(`IEEE_ge_double',) 704 4180 y(`IEEE_le_double'.) 704
4285 y(`IEEE_eq_quad',) 704 4389 y(`IEEE_ne_quad',) 704
4493 y(`IEEE_gt_quad',) 704 4597 y(`IEEE_lt_quad',) 704
4701 y(`IEEE_ge_quad',) 704 4805 y(`IEEE_le_quad'.) p
Fh 208 5089 a(Results) 34 b(and) h(input) g(exceptions) f(for) g(op) r
(erands) f(of) i(sp) r(ecial) f(cases) g(v) -5 b(alues) 34
b(are) f(describ) r(ed) i(for) f(equalit) n(y) g(and) g(in-) 208
5203 y(equalit) n(y) 26 b(b) n(y) i(the) g(follo) n(wing) e(table) p
90 rotate dyy eop
%%Page: 31 31
31 30 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(31) p Fc 704 162 a(first) 79 b(|) 354 b(second) 40
b(operand) 704 266 y(operand|-----------------------) q(----) q(-----) q
(----) q(---) 978 370 y(|) 158 b(SNaN) 197 b(|) 157 b(QNaN) 236
b(|) 118 b(Others) 704 474 y(-------|-------------|---------) q(----) q
(-|---) q(----) q(---) 704 578 y(SNaN) g(|) g(FALSE) 198
b(|) 117 b(FALSE) 237 b(|) 78 b(FALSE) 978 682 y(|) h(IEEE_INV) 120
b(|) 78 b(IEEE_INV) 159 b(|) 39 b(IEEE_INV) 704 786 y
(-------|-------------|---------) q(----) q(-|---) q(----) q(---) 704
890 y(QNaN) 118 b(|) g(FALSE) 198 b(|) 117 b(FALSE) 237
b(|) 78 b(FALSE) 978 995 y(|) h(IEEE_INV) 120 b(|) 157
b(none) 236 b(|) 118 b(none) 704 1099 y
(-------|-------------|---------) q(----) q(-|---) q(----) q(---) 704
1203 y(Others) 40 b(|) 118 b(FALSE) 198 b(|) 117 b(FALSE) 237
b(|) 978 1307 y(|) 79 b(IEEE_INV) 120 b(|) 157 b(none) 236
b(|) p Fh 208 1487 a(Results) 31 b(and) g(input) h(exceptions) f(for) f
(op) r(erands) g(of) i(sp) r(ecial) e(cases) h(v) -5
b(alues) 30 b(are) h(describ) r(ed) g(for) f(other) h(comparison) 208
1600 y(op) r(eration) 26 b(b) n(y) h(the) h(follo) n(wing) f(table) p
Fc 704 1875 a(first) 79 b(|) 354 b(second) 40 b(operand) 704
1979 y(operand|-----------------------) q(----) q(-----) q(----) q(---)
978 2083 y(|) 158 b(SNaN) 197 b(|) 157 b(QNaN) 236 b(|) 118
b(Others) 704 2187 y(-------|-------------|---------) q(----) q(-|---) q
(----) q(---) 704 2292 y(SNaN) g(|) g(FALSE) 198 b(|) 117
b(FALSE) 237 b(|) 78 b(FALSE) 978 2396 y(|) h(IEEE_INV) 120
b(|) 78 b(IEEE_INV) 159 b(|) 39 b(IEEE_INV) 704 2500
y(-------|-------------|---------) q(----) q(-|---) q(----) q(---) 704
2604 y(QNaN) 118 b(|) g(FALSE) 198 b(|) 117 b(FALSE) 237
b(|) 78 b(FALSE) 978 2708 y(|) h(IEEE_INV) 120 b(|) 78
b(IEEE_INV) 159 b(|) 39 b(IEEE_INV) 704 2812 y
(-------|-------------|---------) q(----) q(-|---) q(----) q(---) 704
2916 y(Others) h(|) 118 b(FALSE) 198 b(|) 117 b(FALSE) 237
b(|) 978 3020 y(|) 79 b(IEEE_INV) 120 b(|) 78 b(IEEE_INV) 159
b(|) p Fd 0 3200 a(T) -8 b(ransformation) 31 b(functions) p
Fc 704 3387 a(`IEEE_double_t) 42 b(IEEE_single_to_double) 1292
3492 y(\(IEEE_float_t) g(single_float\)',) 704 3700 y(`IEEE_float_t) g
(IEEE_double_to_single) 1253 3804 y(\(IEEE_double_t) g
(double_float\)',) 704 4012 y(`IEEE_quad_t) g(IEEE_single_to_quad) 1214
4116 y(\(IEEE_float_t) g(single_float\)',) 704 4324 y(`IEEE_float_t) g
(IEEE_quad_to_single) 1253 4429 y(\(IEEE_quad_t) g(quad_float\)',) 704
4637 y(`IEEE_quad_t) g(IEEE_double_to_quad) 1214 4741
y(\(IEEE_double_t) g(double_float\)',) 704 4949 y(`IEEE_double_t) g
(IEEE_quad_to_double) 1253 5053 y(\(IEEE_quad_t) g(quad_float\)',) 704
5261 y(`IEEE_float_t) g(IEEE_single_from_integer) 1253
5366 y(\(int) e(size,) g(const) h(void) f(*integer\)',) p
90 rotate dyy eop
%%Page: 32 32
32 31 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(32) p Fc 704 266 a(`IEEE_float_t) 42 b
(IEEE_single_from_unsigned_inte) q(ger) 1253 370 y(\(int) e(size,) g
(const) h(void) f(*unsigned_integer\)',) 704 578 y(`IEEE_double_t) i
(IEEE_double_from_integer) 1292 682 y(\(int) e(size,) h(const) f(void) g
(*integer\)',) 704 890 y(`IEEE_double_t) i
(IEEE_double_from_unsigned_int) q(eger) 1292 995 y(\(int) e(size,) h
(const) f(void) g(*unsigned_integer\)',) 704 1203 y(`IEEE_quad_t) i
(IEEE_quad_from_integer) 1214 1307 y(\(int) e(size,) g(const) g(void) h
(*integer\)',) 704 1515 y(`IEEE_quad_t) h
(IEEE_quad_from_unsigned_integer) 1214 1619 y(\(int) e(size,) g(const) g
(void) h(*unsigned_integer\)',) 704 1827 y(`void) f
(IEEE_single_to_integer) 939 1932 y(\(int) g(size,) h(IEEE_float_t) g
(single_float,) i(void) d(*integer\)',) 704 2140 y(`void) g
(IEEE_single_to_unsigned_integ) q(er) 939 2244 y(\(int) g(size,) h
(IEEE_float_t) g(single_float,) 978 2348 y(void) g
(*unsigned_integer\)',) 704 2556 y(`void) f(IEEE_double_to_integer) 939
2660 y(\(int) g(size,) h(IEEE_double_t) h(double_float,) g(void) e
(*integer\)',) 704 2869 y(`void) g(IEEE_double_to_unsigned_integ) q(er)
939 2973 y(\(int) g(size,) h(IEEE_double_t) h(double_float,) 978
3077 y(void) f(*unsigned_integer\)'.) 704 3285 y(`void) f
(IEEE_quad_to_integer) 939 3389 y(\(int) g(size,) h(IEEE_quad_t) g
(quad_float,) h(void) e(*integer\)',) 704 3597 y(`void) g
(IEEE_quad_to_unsigned_integer) 939 3701 y(\(int) g(size,) h
(IEEE_quad_t) g(quad_float,) 978 3806 y(void) g(*unsigned_integer\)'.) p
Fh 208 4106 a(A) n(ctually) 19 b(no) h(one) f(output) h(exceptions) f
(o) r(ccur) g(during) h(transformation) e(of) i(single) f(precision) g
(\035oating) f(p) r(oin) n(t) i(n) n(um) n(b) r(er) 208
4220 y(to) 31 b(double) g(and) g(quad) f(precision) g(n) n(um) n(b) r
(er) h(or) g(of) g(double) g(precision) f(\035oating) g(p) r(oin) n(t) h
(n) n(um) n(b) r(er) g(to) g(quad) g(precision) 208 4333
y(n) n(um) n(b) r(er.) i(No) 19 b(input) h(exceptions) f(o) r(ccur) f
(during) h(transformation) e(of) i(in) n(teger) f(n) n(um) n(b) r(ers) h
(to) g(\035oating) f(p) r(oin) n(t) i(n) n(um) n(b) r(ers.) 208
4447 y(Results) 38 b(and) g(input) h(exceptions) f(for) f(op) r(erand) h
(of) g(sp) r(ecial) g(cases) f(v) -5 b(alues) 38 b(\(and) g(for) g
(NaNs\)) g(are) g(describ) r(ed) g(for) 208 4561 y(con) n(v) n(ersion)
25 b(\035oating) h(p) r(oin) n(t) i(n) n(um) n(b) r(er) f(to) h(in) n
(teger) e(b) n(y) i(the) g(follo) n(wing) e(table) p
Fc 1175 4731 a(Operand) 197 b(|) 40 b(Result) g(&) 79
b(Exception) 1096 4835 y(--------------|---------------) q(----) 1253
4939 y(SNaN) 236 b(|) 196 b(0) 1645 5043 y(|IEEE_INV\(_RO\)) 1096
5147 y(--------------|---------------) q(----) 1253 5252
y(QNaN) 236 b(|) 196 b(0) 1645 5356 y(|IEEE_INV\(_RO\)) p
90 rotate dyy eop
%%Page: 33 33
33 32 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(33) p Fc 1096 162 a(--------------|---------------) q(----) 1253
266 y(+Inf) 236 b(|) 157 b(IMax) 1645 370 y(|) 79 b(IEEE_INV) 1096
474 y(--------------|---------------) q(----) 1253 578
y(-Inf) 236 b(|) 157 b(IMin) 1645 682 y(|) 79 b(IEEE_INV) 1096
786 y(--------------|---------------) q(----) 1253 890
y(Others) 158 b(|) 1645 995 y(|) p Fh 208 1175 a(Results) 38
b(and) g(input) h(exceptions) f(for) f(op) r(erand) h(of) g(sp) r
(ecial) g(cases) f(v) -5 b(alues) 38 b(\(and) g(for) g(NaNs\)) g(are) g
(describ) r(ed) g(for) 208 1288 y(con) n(v) n(ersion) 25
b(\035oating) h(p) r(oin) n(t) i(n) n(um) n(b) r(er) f(to) h(unsigned) f
(in) n(teger) g(b) n(y) g(the) h(follo) n(wing) e(table) p
Fc 1175 1459 a(Operand) 197 b(|) 40 b(Result) g(&) 79
b(Exception) 1096 1563 y(--------------|---------------) q(----) 1253
1667 y(SNaN) 236 b(|) 196 b(0) 1645 1771 y(|IEEE_INV\(_RO\)) 1096
1875 y(--------------|---------------) q(----) 1253 1979
y(QNaN) 236 b(|) 196 b(0) 1645 2083 y(|IEEE_INV\(_RO\)) 1096
2187 y(--------------|---------------) q(----) 1253 2292
y(+Inf) 236 b(|) 157 b(IMax) 1645 2396 y(|) 79 b(IEEE_INV) 1096
2500 y(--------------|---------------) q(----) 1253 2604
y(-Inf) 40 b(or) 118 b(|) 157 b(0) 1057 2708 y(negative) 41
b(number|) 80 b(IEEE_INV) 1096 2812 y(--------------|---------------) q
(----) 1253 2916 y(Others) 158 b(|) 1645 3020 y(|) p
Fh 208 3200 a(Results) 21 b(and) f(exceptions) h(for) f(NaNs) h(during)
f(transformation) g(of) h(\035oating) f(p) r(oin) n(t) h(n) n(um) n(b) r
(ers) f(to) h(\(unsigned\)) g(in) n(tegers) 208 3314
y(are) 26 b(di\033ered) i(from) f(the) h(ones) f(for) g(op) r(erations)
f(of) i(addition,) f(m) n(ultiplication) h(and) f(so) g(on.) p
Fd 0 3494 a(F) -8 b(unction) 32 b(`IEEE_single_to_string') p
Fc 704 3681 a(`char) 40 b(*IEEE_single_to_string) k(\(IEEE_float_t) e
(single_float,) 1880 3785 y(char) f(*result\)') p Fh
208 4086 a(transforms) 27 b(single) h(precision) g(to) g(decimal) h
(ascii) f(represen) n(tation) e(with) k(obligatory) c(in) n(teger) i
(part) g(\(1) h(digit\),) g(frac-) 208 4199 y(tional) g(part) h(\(of) g
(constan) n(t) f(length\),) j(and) e(optional) f(exp) r(onen) n(t.) 44
b(Signs) 30 b(min) n(us) g(are) f(presen) n(t) g(if) i(it) g(is) f
(needed.) 44 b(The) 208 4313 y(sp) r(ecial) 23 b(cases) f(IEEE) j
(\035oating) e(p) r(oin) n(t) h(v) -5 b(alues) 23 b(are) g(represen) n
(ted) f(b) n(y) h(strings) g(`SNaN',) h(`QNaN',) f(`+Inf) 6
b(',) 26 b(`-Inf) 6 b(',) 25 b(`+0',) 208 4427 y(and) i(`-0'.) 36
b(The) 28 b(function) g(returns) f(v) -5 b(alue) 27 b(`result'.) 37
b(There) 27 b(are) f(analogous) g(functions) p Fc 704
4597 a(`IEEE_string_to_double') 704 4701 y(`IEEE_string_to_quad') p
Fh 208 4985 a(for) 32 b(doubles) h(and) h(quads.) 53
b(Curren) n(t) 33 b(round) g(mo) r(de) g(do) r(es) g(not) h(a\033ect) f
(the) h(resultan) n(t) f(ascii) g(represen) n(tation.) 52
b(The) 208 5099 y(function) 33 b(outputs) g(9) g(decimal) g(fraction) f
(digits) h(for) g(single) f(precision) g(n) n(um) n(b) r(er,) i(17) f
(decimal) f(fraction) h(digits) g(for) 208 5212 y(double) 27
b(precision) g(n) n(um) n(b) r(er,) g(and) g(36) g(for) g(quad) g
(precision) g(n) n(um) n(b) r(er.) p Fd 0 5392 a(F) -8
b(unction) 32 b(`IEEE_single_to_binary_string') p 90 rotate
dyy eop
%%Page: 34 34
34 33 bop 0 -167 3900 5 v Fd 0 -200 a(11.) 73 b(P) m(ac) m(k) -5
b(age) 34 b(for) e(mac) m(hine-indep) s(enden) m(t) d(IEEE) j
(\035oating) f(p) s(oin) m(t) g(arithmetic) p Fh 909
w(34) p Fc 704 162 a(`char) 40 b(*IEEE_single_to_binary_string) 46
b(\(IEEE_float_t) c(single_float,) 2155 266 y(int) e(base,) g(char) g
(*result\)') p Fh 208 671 a(The) 25 b(function) i(is) e(analogous) f
(to) i(IEEE_single_to_string) e(but) i(transforms) f(\035oat) g(n) n
(um) n(b) r(er) h(in) n(to) f(to) h(binary) f(ascii) 208
784 y(represen) n(tation) 18 b(with) k(obligatory) c(in) n(teger) i
(part) g(\(1) h(digit\)) g(of) g(giv) n(en) f(base,) h(optional) f
(fractional) g(part) g(of) h(giv) n(en) f(base,) 208
898 y(and) 30 b(optional) g(binary) g(exp) r(onen) n(t) h(\(decimal) g
(n) n(um) n(b) r(er) f(giving) g(p) r(o) n(w) n(er) g(of) h(2\).) 46
b(The) 31 b(binary) f(exp) r(onen) n(t) h(starts) f(with) 208
1011 y(c) n(haracter) g(`p') i(instead) g(of) h(`e'.) 51
b(Signs) 32 b(min) n(us) g(are) f(presen) n(t) h(if) h(it) f(is) h
(needed.) 51 b(The) 32 b(sp) r(ecial) g(cases) f(IEEE) j(\035oating) 208
1125 y(p) r(oin) n(t) g(v) -5 b(alues) 35 b(are) e(represen) n(ted) h
(b) n(y) g(strings) g(`SNaN',) h(`QNaN',) f(`+Inf) 6
b(',) 38 b(`-Inf) 6 b(',) 37 b(`+0',) f(and) e(`-0'.) 58
b(The) 35 b(function) 208 1238 y(returns) 25 b(v) -5
b(alue) 27 b(`result'.) 36 b(V) -7 b(alue) 27 b(of) f(parameter) f
(base) h(should) g(b) r(e) h(2,) g(4,) f(8,) h(or) e(16.) 36
b(There) 26 b(are) g(analogous) e(functions) p Fc 704
1409 a(`IEEE_string_to_binary_double') 704 1513 y
(`IEEE_string_to_binary_quad') p Fh 208 1797 a(for) j(doubles) g(and) g
(quads.) 36 b(Curren) n(t) 27 b(round) g(mo) r(de) h(do) r(es) f(not) h
(a\033ect) f(the) h(resultan) n(t) f(ascii) g(represen) n(tation.) p
Fd 0 1977 a(F) -8 b(unction) 32 b(`IEEE_single_from_string') p
Fc 704 2164 a(`char) 40 b(*IEEE_single_from_string) 45
b(\(const) 40 b(char) g(*operand,) 1959 2268 y(IEEE_float_t) i
(*result\)') p Fh 208 2569 a(skips) 31 b(all) h(white) h(spaces) e(at) h
(the) g(b) r(egin) g(of) h(source) d(string) i(and) g(transforms) f
(tail) h(of) g(the) g(source) f(string) h(to) g(single) 208
2683 y(precision) 26 b(\035oating) h(p) r(oin) n(t) h(n) n(um) n(b) r
(er.) 36 b(The) 28 b(n) n(um) n(b) r(er) f(m) n(ust) h(corresp) r(ond) d
(the) j(follo) n(wing) f(syn) n(tax) p Fc 822 2853 a(['+') 40
b(|) f('-']) h([<decimal) h(digits>]) g([) f('.') g([<decimal) h
(digits>]) g(]) 1018 2957 y([) e(\('e') h(|) g('E'\)) g(['+') g(|) f
('-']) h(<decimal) h(digits>]) p Fh 208 3241 a(or) 34
b(m) n(ust) h(b) r(e) h(the) g(follo) n(wing) e(strings) g(`SNaN',) i
(`QNaN',) f(`+Inf) 6 b(',) 38 b(`-Inf) 6 b(',) 38 b(`+0',) f(or) d
(`-0'.) 60 b(The) 35 b(function) h(returns) 208 3355
y(p) r(oin) n(ter) 29 b(to) g(\034rst) h(c) n(haracter) d(in) j(the) g
(source) f(string) g(after) g(read) g(\035oating) g(p) r(oin) n(t) h(n)
n(um) n(b) r(er.) 43 b(If) 30 b(the) g(string) f(do) r(es) g(not) 208
3469 y(corresp) r(ond) 23 b(\035oating) h(p) r(oin) n(t) i(n) n(um) n
(b) r(er) f(syn) n(tax) f(the) h(result) g(will) h(b) r(e) f(zero) f
(and) h(function) h(returns) e(the) i(source) e(string.) 208
3615 y(The) j(function) h(can) f(\034x) h(output) g(exceptions) f(as) g
(describ) r(ed) g(ab) r(o) n(v) n(e.) 36 b(There) 27
b(are) f(analogous) f(functions) p Fc 704 3786 a
(`IEEE_double_from_string') 704 3890 y(`IEEE_quad_from_string') p
Fh 208 4174 a(for) 18 b(doubles) h(and) f(quads.) 34
b(Curren) n(t) 18 b(round) g(mo) r(de) h(ma) n(y) g(a\033ect) g
(resultan) n(t) f(\035oating) g(p) r(oin) n(t) h(n) n(um) n(b) r(er.) 34
b(It) 19 b(is) g(guaran) n(teed) 208 4288 y(that) 27
b(transformation) f(`IEEE) j(\035oating) e(p) r(oin) n(t) h(n) n(um) n
(b) r(er) f(-) p Fb(>) p Fh 27 w(string) g(-) p Fb(>) p
Fh 27 w(IEEE) i(\035oating) e(p) r(oin) n(t) g(n) n(um) n(b) r(er') h
(results) f(in) 208 4401 y(the) d(same) f(IEEE) i(\035oating) d(p) r
(oin) n(t) i(n) n(um) n(b) r(er) f(if) i(round) e(to) g(nearest) g(mo) r
(de) g(is) h(used.) 35 b(But) 24 b(the) g(rev) n(erse) e
(transformation) 208 4515 y(`string) 31 b(with) h(9) f(\(or) g(17) g
(or) g(36\)) g(digits) g(-) p Fb(>) p Fh 32 w(IEEE) i(\035oating) e(p) r
(oin) n(t) g(n) n(um) n(b) r(er) h(-) p Fb(>) p Fh 31
w(string') f(ma) n(y) g(results) g(in) h(di\033eren) n(t) 208
4628 y(digits) 20 b(of) h(the) g(fractions) f(in) h(ascii) f(represen) n
(tation) f(b) r(ecause) i(a) f(\035oating) g(p) r(oin) n(t) h(n) n(um) n
(b) r(er) g(ma) n(y) f(represen) n(t) f(sev) n(eral) g(suc) n(h) 208
4742 y(strings) 29 b(with) i(di\033erences) f(in) h(the) g(least) f
(signi\034can) n(t) f(digit.) 46 b(But) 30 b(the) h(ascii) f(represen) n
(tations) e(are) i(iden) n(tical) g(when) 208 4856 y(functions) 38
b(`IEEE_single_from_string',) i(`IEEE_double_from_string',) g
(`IEEE_quad_from_string') d(do) 208 4969 y(not) j(\034x) h(imprecise) g
(result) f(exception) h(or) f(less) g(than) h(9) f(\(or) h(17) f(or) g
(36\)) g(digits) g(of) h(the) g(fractions) f(in) i(the) f(ascii) 208
5083 y(represen) n(tations) 25 b(are) i(compared.) p
Fd 0 5263 a(F) -8 b(unction) 32 b(`IEEE_single_from_binary_string') p
90 rotate dyy eop
%%Page: 35 35
35 34 bop 0 -167 3900 5 v Fd 0 -200 a(12.) 73 b(Tic) m(k) m(er) 33
b(pac) m(k) -5 b(age) p Fh 3005 w(35) p Fc 704 162 a(`char) 40
b(*IEEE_single_from_binary_stri) q(ng) 45 b(\(const) c(char) f
(*operand,) 2233 266 y(int) g(base,) 2233 370 y(IEEE_float_t) i
(*result\)') p Fh 208 671 a(The) 20 b(function) h(is) f(analogous) e
(to) i(IEEE_single_to_string) e(but) j(transforms) e(binary) g
(represen) n(tation) g(of) h(the) h(single) 208 784 y(precision) 26
b(\035oating) h(p) r(oin) n(t) h(n) n(um) n(b) r(er.) 36
b(The) 28 b(n) n(um) n(b) r(er) f(m) n(ust) h(corresp) r(ond) d(the) j
(follo) n(wing) f(syn) n(tax) p Fc 822 955 a(['+') 40
b(|) f('-']) h([<digits) h(less) f(base>]) h([) e('.') h([<digits) h
(less) f(base>]) h(]) 1018 1059 y([) e(\('p') h(|) g('P'\)) g(['+') g
(|) f('-']) h(<decimal) h(digits>]) p Fh 208 1343 a(or) 34
b(m) n(ust) h(b) r(e) h(the) g(follo) n(wing) e(strings) g(`SNaN',) i
(`QNaN',) f(`+Inf) 6 b(',) 38 b(`-Inf) 6 b(',) 38 b(`+0',) f(or) d
(`-0'.) 60 b(The) 35 b(function) h(returns) 208 1457
y(p) r(oin) n(ter) 29 b(to) g(\034rst) h(c) n(haracter) d(in) j(the) g
(source) f(string) g(after) g(read) g(\035oating) g(p) r(oin) n(t) h(n)
n(um) n(b) r(er.) 43 b(If) 30 b(the) g(string) f(do) r(es) g(not) 208
1570 y(corresp) r(ond) 23 b(\035oating) h(p) r(oin) n(t) i(n) n(um) n
(b) r(er) f(syn) n(tax) f(the) h(result) g(will) h(b) r(e) f(zero) f
(and) h(function) h(returns) e(the) i(source) e(string.) 208
1684 y(The) j(exp) r(onen) n(t) h(\(after) f(c) n(haracter) e(`p') j
(or) f(`P'\)) i(de\034nes) e(p) r(o) n(w) n(er) f(of) i(t) n(w) n(o.)
208 1830 y(The) f(function) h(can) f(\034x) h(output) g(exceptions) f
(as) g(describ) r(ed) g(ab) r(o) n(v) n(e.) 36 b(There) 27
b(are) f(analogous) f(functions) p Fc 704 2001 a
(`IEEE_double_from_binary_string) q(') 704 2105 y
(`IEEE_quad_from_binary_string') p Fh 208 2389 a(for) g(doubles) g(and)
g(quads.) 36 b(Curren) n(t) 25 b(round) g(mo) r(de) g(can) h(a\033ect) f
(resultan) n(t) g(\035oating) g(p) r(oin) n(t) h(n) n(um) n(b) r(er) f
(if) h(there) g(are) e(to) r(o) 208 2503 y(man) n(y) j(giv) n(en) f
(digits.) 0 2742 y(Imp) r(ortan) n(t) 33 b(note:) 47
b(All) 33 b(items) h(\(they) f(con) n(tains) f(w) n(ord) g(quad) h(or) f
(QUAD) h(in) g(their) g(names\)) g(relativ) n(e) f(to) h(IEEE) h(128) e
(bits) 0 2856 y(\035oating) c(p) r(oin) n(t) g(n) n(um) n(b) r(ers) g
(are) f(de\034ned) i(only) f(when) h(macro) e(`IEEE_QUAD') j(is) e
(de\034ned.) 40 b(By) 28 b(default) g(`IEEE_QUAD') 0
2969 y(is) f(not) h(de\034ned.) 37 b(It) 28 b(is) g(made) f(b) r
(ecause) g(supp) r(orting) g(IEEE) i(18-bits) e(n) n(um) n(b) r(ers) g
(requires) f(more) h(100Kb) e(memory) -7 b(.) p Fe 0
3308 a(12) 131 b(Tic) l(k) l(er) 46 b(pac) l(k) -7 b(age) p
Fh 0 3546 a(The) 25 b(pac) n(k) -5 b(age) 24 b(`tic) n(k) n(er') g
(implemen) n(ts) i(a) f(timer.) 36 b(Timer) 25 b(can) g(b) r(e) g
(activ) -5 b(ated) 25 b(or) g(can) g(b) r(e) g(stopp) r(ed.) 37
b(The) 25 b(timer) g(accum) n(ulates) 0 3660 y(execution) 38
b(time) g(only) g(when) g(it) h(is) f(in) g(activ) n(e) g(state.) 68
b(The) 38 b(in) n(terface) f(part) h(of) g(the) h(pac) n(k) -5
b(age) 36 b(is) i(\034le) g(`tic) n(k) n(er.h'.) 68 b(The) 0
3774 y(implemen) n(tation) 28 b(part) f(is) g(\034le) h(`tic) n(k) n
(er.c'.) 36 b(The) 27 b(in) n(terface) g(con) n(tains) g(the) h(follo) n
(wing) e(external) h(de\034nitions) g(and) h(macros:) p
Fd 0 3996 a(T) m(yp) s(e) k(`tic) m(k) m(er_t') p Fh
208 4143 a(describ) r(es) 25 b(a) g(timer.) 36 b(Kno) n(wledge) 24
b(of) i(structure) f(\(implemen) n(tation\)) i(of) e(this) h(t) n(yp) r
(e) g(is) g(not) g(needed) f(for) h(using) f(timer.) p
Fd 0 4323 a(F) -8 b(unction) 32 b(`create_tic) m(k) m(er') p
Fc 782 4510 a(`ticker_t) 42 b(create_ticker) g(\(void\)') p
Fh 208 4811 a(returns) 30 b(new) h(timer.) 46 b(The) 31
b(state) g(of) g(the) g(timer) g(is) f(activ) n(e.) 46
b(This) 31 b(function) g(call) g(m) n(ust) g(to) g(b) r(e) g(the) g
(\034rst) g(for) f(giv) n(en) 208 4925 y(timer.) p Fd
0 5105 a(F) -8 b(unction) 32 b(`tic) m(k) m(er_o\033) 9
b(') p Fc 782 5292 a(`void) 41 b(ticker_off) g(\(ticker_t) g
(*ticker\)') p 90 rotate dyy eop
%%Page: 36 36
36 35 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(36) 208 162 y(stops) 27 b(the) h(timer) f(giv) n
(en) g(as) g(the) h(\034rst) f(parameter.) p Fd 0 341
a(F) -8 b(unction) 32 b(`tic) m(k) m(er_on') p Fc 782
527 a(`void) 41 b(ticker_on) g(\(ticker_t) g(*ticker\)') p
Fh 208 826 a(activ) -5 b(ates) 27 b(the) g(timer) h(giv) n(en) f(as) g
(the) h(\034rst) f(parameter.) p Fd 0 1005 a(Public) 32
b(function) f(`activ) m(e_time') p Fc 782 1191 a(`double) 41
b(active_time) h(\(ticker_t) f(ticker\)') p Fh 208 1491
a(returns) 26 b(time) i(in) g(seconds) f(as) g(double) g(\035oat) g(v)
-5 b(alue) 28 b(in) g(whic) n(h) f(giv) n(en) g(timer) g(w) n(as) g
(activ) n(e.) p Fd 0 1670 a(Public) 32 b(function) f(`activ) m
(e_time_string') p Fc 782 1856 a(`const) 41 b(char) f
(*active_time_string) j(\(void\)') p Fh 208 2155 a(returns) 32
b(string) h(represen) n(tation) f(of) i(time) g(in) g(seconds) f(in) g
(whic) n(h) h(the) g(timer) g(giv) n(en) e(as) h(the) h(function) h
(parameter) 208 2269 y(w) n(as) 29 b(activ) n(e.) 43
b(Remem) n(b) r(er) 30 b(that) g(this) g(function) h(m) n(ust) f(b) r
(e) g(the) h(single) e(in) i(a) e(C++) g(expression) g(b) r(ecause) g
(the) i(string) 208 2382 y(is) c(stored) g(in) h(a) f(static) g(v) -5
b(ariable) 27 b(of) g(the) h(function.) p Fe 0 2720 a(13) 131
b(Earley) 45 b(parser) p Fh 0 2959 a(The) 25 b(pac) n(k) -5
b(age) 22 b(`earley') i(implemen) n(ts) h(earley) e(parser.) 34
b(The) 25 b(earley) e(parser) g(implemen) n(tation) h(has) g(the) h
(follo) n(wing) f(features:) p Fa 125 3196 a(\017) p
Fh 41 w(It) k(is) f(su\036cien) n(tly) h(fast) f(and) h(do) r(es) f
(not) h(require) f(m) n(uc) n(h) g(memory) -7 b(.) 37
b(This) 27 b(is) h(the) g(fastest) f(implemen) n(tation) h(of) g
(Earley) 208 3310 y(parser) h(whic) n(h) i(I) g(kno) n(w.) 47
b(The) 31 b(main) g(design) g(goal) f(is) h(to) g(ac) n(hiev) n(e) f
(sp) r(eed) h(and) g(memory) f(requiremen) n(ts) g(whic) n(h) h(are) 208
3424 y(necessary) c(to) h(use) h(it) g(in) g(protot) n(yp) r(e) f
(compilers) g(and) h(language) e(pro) r(cessors.) 38
b(It) 29 b(parses) e(30K) h(lines) h(of) f(C) h(program) 208
3537 y(p) r(er) e(second) g(on) g(500) f(MHz) i(P) n(en) n(tium) g(I) r
(I) r(I) h(and) e(allo) r(cates) f(ab) r(out) i(5Mb) f(memory) g(for) g
(10K) f(line) i(C) g(program.) p Fa 125 3716 a(\017) p
Fh 41 w(It) c(mak) n(es) f(simple) h(syn) n(tax) f(directed) g
(translation.) 35 b(So) 23 b(an) h(abstract) f(tree) h(is) f(already) g
(the) h(output) h(of) e(Earley) h(parser.) p Fa 125 3896
a(\017) p Fh 41 w(It) e(can) g(parse) e(input) j(describ) r(ed) f(b) n
(y) g(an) f(am) n(biguous) g(grammar.) 33 b(In) 22 b(this) g(case) g
(the) g(parse) f(result) g(can) h(b) r(e) g(an) g(abstract) 208
4009 y(tree) f(or) g(all) g(p) r(ossible) h(abstract) e(trees.) 35
b(Moreo) n(v) n(er) 18 b(it) 23 b(pro) r(duces) e(the) h(compact) f
(represen) n(tation) f(of) h(all) h(p) r(ossible) f(parse) 208
4123 y(trees) i(b) n(y) g(using) g(D) n(A) n(G) h(instead) g(of) f
(real) g(trees.) 35 b(This) 24 b(feature) f(can) g(b) r(e) h(used) g
(to) f(parse) g(natural) g(language) f(sen) n(tences.) p
Fa 125 4302 a(\017) p Fh 41 w(It) 29 b(can) g(parse) f(input) i
(describ) r(ed) f(b) n(y) g(an) f(am) n(biguous) g(grammar) f
(according) h(to) h(the) g(abstract) f(no) r(de) i(costs.) 40
b(In) 30 b(this) 208 4415 y(case) d(the) j(parse) d(result) i(can) f(b)
r(e) h(an) g(minimal) g(cost) f(abstract) g(tree) g(or) g(all) g(p) r
(ossible) h(minimal) g(cost) f(abstract) g(trees.) 208
4529 y(This) f(feature) g(can) g(b) r(e) h(used) g(to) f(co) r(de) h
(selection) f(task) g(in) h(compilers.) p Fa 125 4708
a(\017) p Fh 41 w(It) 34 b(can) f(mak) n(e) f(syn) n(tax) h(error) f
(reco) n(v) n(ery) -7 b(.) 52 b(Moreo) n(v) n(er) 31
b(its) j(error) d(reco) n(v) n(ery) g(algorithms) h(\034nds) i(error) e
(reco) n(v) n(ery) f(with) 208 4822 y(minimal) 25 b(n) n(um) n(b) r(er)
f(of) h(ignored) f(tok) n(ens.) 35 b(It) 25 b(p) r(ermits) g(to) g
(implemen) n(t) h(parsers) d(with) i(v) n(ery) f(go) r(o) r(d) g(error)
f(reco) n(v) n(ery) f(and) 208 4935 y(rep) r(orting.) p
Fa 125 5114 a(\017) p Fh 41 w(It) 27 b(has) g(fast) h(startup.) 37
b(There) 27 b(is) g(no) g(practically) g(dela) n(y) f(b) r(et) n(w) n
(een) i(pro) r(cessing) e(grammar) f(and) j(start) f(of) g(parsing.) p
Fa 125 5294 a(\017) p Fh 41 w(It) 38 b(has) g(\035exible) h(in) n
(terface.) 68 b(The) 39 b(input) g(grammar) e(can) h(b) r(e) h(giv) n
(en) e(b) n(y) h(Y) -7 b(A) n(CC-lik) n(e) 38 b(description) g(or) g
(pro) n(viding) 208 5407 y(functions) 27 b(returning) g(terminals) g
(and) h(rules.) p 90 rotate dyy eop
%%Page: 37 37
37 36 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(37) p Fa 125 162 a(\017) p Fh 41
w(It) 21 b(has) g(go) r(o) r(d) g(debugging) f(features.) 35
b(It) 21 b(can) g(prin) n(t) h(h) n(uge) f(amoun) n(t) g(of) g
(information) g(ab) r(out) g(grammar,) g(parsing,) g(error) 208
275 y(reco) n(v) n(ery) -7 b(,) 31 b(translation.) 50
b(Y) -7 b(ou) 32 b(can) g(ev) n(en) g(output) h(the) f(result) h
(translation) e(in) h(form) g(for) g(a) g(graphic) f(visualization) 208
389 y(program.) 0 628 y(The) i(in) n(terface) g(part) f(of) h(the) h
(parser) d(is) i(\034le) h(`earley) -7 b(.h'.) 52 b(The) 33
b(implemen) n(tation) g(part) g(is) g(\034le) g(`earley) -7
b(.c'.) 53 b(The) 33 b(in) n(terface) 0 742 y(con) n(tains) 27
b(the) g(follo) n(wing) g(external) g(de\034nitions) g(and) h(macros:) p
Fd 0 965 a(Struct) 33 b(`grammar') p Fh 208 1112 a(describ) r(es) i(a) h
(grammar.) 61 b(Kno) n(wledge) 35 b(of) h(structure) g(\(implemen) n
(tation\)) h(of) f(this) h(t) n(yp) r(e) f(is) g(not) h(visible) f(and)
g(not) 208 1225 y(needed) 27 b(for) g(using) g(the) h(parser.) p
Fd 0 1405 a(Macro) k(`EARLEY_NIL_TRANSLA) -8 b(TION_NUMBER') p
Fh 208 1552 a(is) 27 b(reserv) n(ed) f(to) h(b) r(e) h(designation) f
(of) g(empt) n(y) h(no) r(de) f(for) g(translation.) p
Fd 0 1732 a(Macro) 32 b(`EARLEY_NO_MEMOR) -8 b(Y') p
Fh 208 1879 a(is) 27 b(error) e(co) r(de) i(of) h(the) f(parser.) 35
b(The) 28 b(parser) e(functions) h(return) g(the) h(co) r(de) f(when) g
(parser) f(can) h(not) g(allo) r(cate) g(enough) 208
1992 y(memory) f(for) h(its) h(w) n(ork.) p Fd 0 2172
a(Macro) k(`EARLEY_UNDEFINED_OR_BAD_GRAMMAR') p Fh 208
2319 a(is) 24 b(error) f(co) r(de) h(of) g(the) h(parser.) 34
b(The) 25 b(parser) e(functions) i(return) f(the) h(co) r(de) f(when) h
(w) n(e) f(call) g(parsing) f(without) i(de\034ning) 208
2433 y(grammar) g(or) i(call) g(parsing) f(for) h(bad) h(de\034ned) f
(grammar.) p Fd 0 2613 a(Macro) 32 b(`EARLEY_DESCRIPTION_SYNT) -8
b(AX_ERR) m(OR_CODE') p Fh 208 2759 a(is) 24 b(error) e(co) r(de) i(of)
g(the) g(parser.) 34 b(The) 25 b(co) r(de) f(is) g(returned) f(when) i
(the) f(grammar) e(is) i(de\034ned) h(b) n(y) f(description) f(and) h
(there) 208 2873 y(is) j(syn) n(tax) g(error) e(in) j(the) g
(description.) p Fd 0 3053 a(Macro) k(`EARLEY_FIXED_NAME_USA) m(GE') p
Fh 208 3200 a(is) 26 b(error) e(co) r(de) i(of) g(the) h(parser.) 35
b(The) 26 b(co) r(de) g(is) g(returned) g(when) g(the) h(grammar) d
(uses) i(reserv) n(ed) e(names) i(for) g(terminals) 208
3313 y(and) h(non) n(terminals.) 37 b(There) 28 b(are) f(t) n(w) n(o) g
(reserv) n(ed) f(names) h(`$S') h(\(for) g(axiom\)) f(and) h(`$eof) 6
b(') 28 b(for) g(end) g(of) g(\034le) g(\(input) h(end) 208
3427 y(mark) n(er\).) 38 b(The) 29 b(parser) e(adds) h(these) h(sym) n
(b) r(ols) f(and) g(rules) g(with) i(these) e(sym) n(b) r(ols) g(to) h
(the) g(grammar) d(giv) n(en) i(b) n(y) h(user.) 208
3540 y(So) e(user) g(should) g(not) h(use) f(these) h(names) f(in) h
(his) f(grammar.) p Fd 0 3720 a(Macro) 32 b(`EARLEY_REPEA) -8
b(TED_TERM_DECL') p Fh 208 3867 a(is) 31 b(error) e(co) r(de) j(of) f
(the) h(parser.) 47 b(The) 31 b(co) r(de) g(is) h(returned) f(when) g
(the) h(grammar) d(con) n(tains) i(sev) n(eral) e(declarations) h(of)
208 3981 y(terminals) d(with) h(the) g(same) f(name.) p
Fd 0 4161 a(Macro) 32 b(`EARLEY_NEGA) -8 b(TIVE_TERM_CODE') p
Fh 208 4308 a(is) 22 b(error) f(co) r(de) i(of) g(the) g(parser.) 34
b(The) 23 b(co) r(de) g(is) g(returned) f(when) h(the) h(grammar) d
(terminal) h(is) h(describ) r(ed) g(with) g(negativ) n(e) 208
4421 y(co) r(de.) p Fd 0 4601 a(Macro) 32 b(`EARLEY_REPEA) -8
b(TED_TERM_CODE') p Fh 208 4748 a(is) 21 b(error) e(co) r(de) h(of) h
(the) h(parser.) 33 b(The) 21 b(co) r(de) g(is) g(returned) f(when) i
(the) f(t) n(w) n(o) f(or) h(more) f(grammar) f(terminals) h(are) g
(describ) r(ed) 208 4862 y(with) 28 b(the) g(same) f(co) r(de.) p
Fd 0 5042 a(Macro) 32 b(`EARLEY_NO_R) m(ULES') p Fh 208
5188 a(is) 27 b(error) f(co) r(de) h(of) g(the) h(parser.) 36
b(The) 27 b(co) r(de) h(is) f(returned) g(when) h(the) g(grammar) d
(giv) n(en) i(b) n(y) g(user) g(has) g(no) h(rules.) p
90 rotate dyy eop
%%Page: 38 38
38 37 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(38) p Fd 0 162 a(Macro) g(`EARLEY_TERM_IN_R) m
(ULE_LHS') p Fh 208 307 a(is) d(error) e(co) r(de) j(of) f(the) h
(parser.) 41 b(The) 29 b(co) r(de) g(is) h(returned) e(when) i(grammar)
d(rule) j(giv) n(en) e(b) n(y) h(user) g(con) n(tains) f(terminal) 208
420 y(in) f(left) i(hand) e(side) h(of) f(the) h(rule.) p
Fd 0 597 a(Macro) k(`EARLEY_INCORRECT_TRANSLA) -8 b(TION') p
Fh 208 742 a(is) 30 b(error) f(co) r(de) i(of) g(the) g(parser.) 45
b(The) 31 b(co) r(de) g(is) g(returned) f(when) h(grammar) e(rule) h
(translation) g(is) h(not) g(correct.) 45 b(The) 208
855 y(single) 25 b(reason) f(for) h(this) h(is) g(translation) f(of) h
(the) g(rule) f(consists) g(of) h(translations) e(of) i(more) f(one) g
(sym) n(b) r(ols) h(in) g(the) g(righ) n(t) 208 969 y(hand) h(side) h
(of) f(the) h(rule) f(without) h(forming) f(an) g(abstract) g(tree) g
(no) r(de.) p Fd 0 1146 a(Macro) 32 b(`EARLEY_NEGA) -8
b(TIVE) 32 b(COST') p Fh 208 1291 a(is) 27 b(error) f(co) r(de) h(of) g
(the) h(parser.) 36 b(The) 27 b(co) r(de) h(is) f(returned) g(when) h
(abstract) e(no) r(de) i(has) f(a) g(negativ) n(e) g(cost.) p
Fd 0 1467 a(Macro) 32 b(`EARLEY_INCORRECT_SYMBOL_NUMBER') p
Fh 208 1612 a(is) h(error) f(co) r(de) i(of) g(the) g(parser.) 55
b(The) 34 b(co) r(de) g(is) g(returned) f(when) h(grammar) e(rule) i
(translation) e(con) n(tains) h(incorrect) 208 1726 y(sym) n(b) r(ol) 27
b(n) n(um) n(b) r(er) g(whic) n(h) g(should) h(b) r(e) g(nonnegativ) n
(e) e(n) n(um) n(b) r(er) h(less) g(than) h(rule) f(righ) n(t) g(hand) g
(side) h(length.) p Fd 0 1902 a(Macro) k(`EARLEY_UNA) m
(CCESSIBLE_NONTERM') p Fh 208 2047 a(is) 25 b(error) e(co) r(de) i(of) g
(the) g(parser.) 35 b(The) 25 b(co) r(de) g(is) g(returned) f(when) i
(there) f(is) g(grammar) e(non) n(terminal) h(whic) n(h) h(can) g(not) g
(b) r(e) 208 2161 y(deriv) n(ed) h(from) h(axiom.) p
Fd 0 2337 a(Macro) 32 b(`EARLEY_NONTERM_DERIV) -11 b(A) j(TION') p
Fh 208 2483 a(is) 31 b(error) e(co) r(de) i(of) g(the) h(parser.) 46
b(The) 32 b(co) r(de) f(is) g(returned) g(when) g(there) g(is) g
(grammar) f(non) n(terminal) g(whic) n(h) h(can) g(not) 208
2596 y(deriv) n(e) 26 b(a) h(terminal) h(string.) p Fd
0 2773 a(Macro) k(`EARLEY_LOOP_NONTERM') p Fh 208 2918
a(is) 25 b(error) f(co) r(de) i(of) g(the) g(parser.) 35
b(The) 26 b(co) r(de) g(is) g(returned) f(when) h(there) g(is) g
(grammar) e(non) n(terminal) h(whic) n(h) g(can) h(deriv) n(e) 208
3031 y(only) h(itself.) 37 b(The) 28 b(parser) e(do) r(es) h(not) g(w) n
(ork) f(with) j(suc) n(h) e(grammars.) p Fd 0 3208 a(Macro) 32
b(`EARLEY_INV) -11 b(ALID_TOKEN_CODE') p Fh 208 3353
a(is) 21 b(error) f(co) r(de) h(of) h(the) g(parser.) 33
b(The) 22 b(co) r(de) g(is) f(returned) g(when) h(the) g(parser) e(got)
h(input) i(tok) n(en) e(whose) g(co) r(de) g(is) h(di\033eren) n(t) 208
3466 y(from) 27 b(all) g(grammar) f(terminal) h(co) r(des.) p
Fd 0 3643 a(En) m(umeration) j(`earley_tree_no) s(de_t) m(yp) s(e') p
Fh 208 3788 a(describ) r(es) 39 b(all) g(p) r(ossible) h(no) r(des) g
(of) f(abstract) g(tree) h(represen) n(ting) e(the) i(translation.) 73
b(There) 39 b(are) g(the) h(follo) n(wing) 208 3902 y(en) n(umeration)
26 b(constan) n(ts:) p Fd 208 4078 a(`EARLEY_NIL') p
Fh 390 4207 a(the) i(corresp) r(onding) e(no) r(de) h(represen) n(ts) f
(empt) n(y) i(translations.) p Fd 208 4350 a(`EARLEY_ERR) m(OR') p
Fh 390 4478 a(the) g(corresp) r(onding) e(no) r(de) h(represen) n(ts) f
(translation) h(of) g(sp) r(ecial) g(terminal) h(`error') d(\(see) j
(error) d(reco) n(v) n(ery\).) p Fd 208 4622 a(`EARLEY_TERM') p
Fh 390 4750 a(the) j(corresp) r(onding) e(no) r(de) h(represen) n(ts) f
(translation) h(of) g(a) g(terminal.) p Fd 208 4893 a(`EARLEY_ANODE') p
Fh 390 5022 a(the) h(corresp) r(onding) e(no) r(de) h(represen) n(ts) f
(an) i(abstract) e(no) r(de.) p Fd 208 5165 a(`EARLEY_AL) -8
b(T') p Fh 390 5294 a(the) 23 b(corresp) r(onding) e(no) r(de) h
(represen) n(ts) f(an) i(alternativ) n(e) e(of) i(the) f(translation.)
34 b(Suc) n(h) 23 b(no) r(des) f(creates) g(only) g(when) 390
5407 y(there) 28 b(are) e(t) n(w) n(o) h(or) g(more) f(p) r(ossible) h
(translations.) 36 b(It) 28 b(means) f(that) h(the) g(grammar) d(is) j
(am) n(biguous.) p 90 rotate dyy eop
%%Page: 39 39
39 38 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(39) p Fd 0 162 a(Structure) h(`earley_tree_no) s
(de') p Fh 208 308 a(represen) n(ts) 25 b(no) r(de) h(of) h(the) g
(translation.) 35 b(The) 27 b(no) r(des) f(refer) g(for) g(eac) n(h) g
(other) g(forming) g(D) n(A) n(G) g(\(direct) h(acyclic) f(graph\)) 208
422 y(in) g(general) f(case.) 36 b(The) 26 b(main) g(reason) f(of) h
(generating) f(D) n(A) n(G) i(is) f(that) g(some) g(input) h(fragmen) n
(ts) e(ma) n(y) h(ha) n(v) n(e) f(the) i(same) 208 535
y(translation,) d(when) h(there) g(are) f(sev) n(eral) f(parsings) h
(of) h(input) g(\(whic) n(h) h(is) f(p) r(ossible) f(only) h(for) f(am)
n(biguous) g(grammars\).) 208 649 y(But) h(D) n(A) n(G) g(ma) n(y) g(b)
r(e) g(created) f(ev) n(en) h(for) f(unam) n(bigous) g(grammar) f(b) r
(ecause) i(some) f(no) r(des) h(\(empt) n(y) g(and) g(error) e(no) r
(des\)) 208 762 y(exist) h(only) h(in) g(one) f(exemplar.) 35
b(When) 25 b(suc) n(h) g(no) r(des) f(are) g(not) h(created,) g(the) g
(translation) e(no) r(des) i(forms) f(a) h(tree.) 35
b(This) 208 876 y(structure) 27 b(has) g(the) h(follo) n(wing) e(mem) n
(b) r(ers:) p Fd 208 1055 a(Mem) m(b) s(er) j(`t) m(yp) s(e') i(of) h
(t) m(yp) s(e) g(`en) m(um) e(earley_tree_no) s(de_t) m(yp) s(e') p
Fh 390 1185 a(represen) n(ting) c(t) n(yp) r(e) i(of) f(the) h
(translation) f(no) r(de.) p Fd 208 1330 a(Union) k(`v) -5
b(al') p Fh 390 1460 a(Dep) r(ending) 30 b(on) e(the) i(translation) d
(no) r(de) i(t) n(yp) r(e,) h(one) e(of) h(the) g(union) g(mem) n(b) r
(ers) g(`nil',) h(`error',) d(`term',) i(`ano) r(de',) 390
1574 y(and) f(`alt') f(of) h(the) g(structure) f(t) n(yp) r(es) g
(describ) r(ed) g(b) r(elo) n(w) h(is) f(used) h(to) f(represen) n(t) f
(the) i(translation) f(no) r(de.) p Fd 0 1753 a(Structure) 33
b(`earley_nil') p Fh 208 1899 a(represen) n(ts) 22 b(empt) n(y) j(no) r
(de.) 35 b(It) 25 b(has) f(no) f(mem) n(b) r(ers.) 36
b(A) n(ctually) 24 b(the) g(translation) f(is) h(D) n(A) n(G) h(\(not) f
(tree\)) h(in) f(general) f(case.) 208 2013 y(The) k(empt) n(y) h(and) f
(error) f(no) r(des) h(are) g(presen) n(t) g(only) g(in) h(one) f
(exemplar.) p Fd 0 2192 a(Structure) 33 b(`earley_error') p
Fh 208 2338 a(represen) n(ts) 23 b(translation) g(of) i(sp) r(ecial) f
(terminal) h(`error'.) 34 b(It) 25 b(has) f(no) g(mem) n(b) r(ers.) 36
b(The) 24 b(error) f(no) r(de) i(exists) f(only) h(in) f(one) 208
2451 y(exemplar.) p Fd 0 2630 a(Structure) 33 b(`earley_term') p
Fh 208 2777 a(represen) n(ts) 26 b(translation) g(of) h(terminals.) 37
b(It) 28 b(has) f(the) h(follo) n(wing) e(t) n(w) n(o) h(mem) n(b) r
(ers:) p Fd 208 2956 a(In) m(teger) 32 b(mem) m(b) s(er) c(`co) s(de') p
Fh 390 3085 a(represen) n(ting) e(co) r(de) i(of) f(the) h(corresp) r
(onding) e(terminal.) p Fd 208 3231 a(Mem) m(b) s(er) j(`attr') j(of) g
(t) m(yp) s(e) g(`*) f(v) m(oid') p Fh 390 3361 a(is) d(reference) e
(for) h(the) h(attribute) g(of) f(the) h(corresp) r(onding) e
(terminal.) p Fd 0 3540 a(Structure) 33 b(`earley_ano) s(de') p
Fh 208 3686 a(represen) n(ts) 26 b(abstract) g(no) r(de.) 37
b(It) 28 b(has) f(the) h(follo) n(wing) e(t) n(w) n(o) h(mem) n(b) r
(ers:) p Fd 208 3865 a(Mem) m(b) s(er) i(`name') h(of) i(t) m(yp) s(e) g
(`const) f(c) m(har) i(*') p Fh 390 3995 a(represen) n(ting) 26
b(name) i(of) f(ano) r(de) g(as) g(it) h(giv) n(en) f(in) h(the) g
(corresp) r(onding) d(rule) i(translation.) p Fd 208
4141 a(Mem) m(b) s(er) i(`cost') i(of) h(t) m(yp) s(e) g(`in) m(t') p
Fh 390 4271 a(represen) n(ting) e(cost) h(of) h(the) g(no) r(de) g
(plus) g(costs) f(of) g(all) h(c) n(hildren) f(if) h(the) g(cost) f
(\035ag) g(is) h(set) f(up.) 50 b(Otherwise,) 32 b(the) 390
4384 y(v) -5 b(alue) 28 b(is) f(cost) g(of) h(the) g(abstract) e(no) r
(de) i(itself.) p Fd 208 4530 a(Mem) m(b) s(er) h(`c) m(hildren') i(of)
h(t) m(yp) s(e) g(`struct) g(earley_tree_no) s(de) f(**') p
Fh 390 4660 a(is) d(arra) n(y) e(of) j(no) r(des) f(represen) n(ting) e
(the) j(translations) e(of) h(the) h(sym) n(b) r(ols) e(giv) n(en) h
(in) g(the) h(rule) f(with) h(the) f(abstract) 390 4773
y(no) r(de.) p Fd 0 4952 a(Structure) 33 b(`earley_alt') p
Fh 208 5098 a(represen) n(ts) 26 b(an) h(alternativ) n(e) f(of) i(the) g
(translation.) 35 b(It) 28 b(has) f(the) h(follo) n(wing) f(t) n(w) n
(o) f(mem) n(b) r(ers:) p Fd 208 5277 a(Mem) m(b) s(er) j(`no) s(de') h
(of) i(t) m(yp) s(e) g(`struct) g(earley_tree_no) s(de) g(*') p
Fh 390 5407 a(represen) n(ting) 26 b(alternativ) n(e) g(translation.) p
90 rotate dyy eop
%%Page: 40 40
40 39 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(40) p Fd 208 162 a(Mem) m(b) s(er) d(`next') i
(of) h(t) m(yp) s(e) g(`struct) g(earley_tree_no) s(de) g(*') p
Fh 390 292 a(is) c(reference) e(for) h(the) h(next) g(alternativ) n(e) e
(of) i(translation.) p Fd 0 472 a(F) -8 b(unction) 32
b(`earley_create_grammar') p Fc 782 659 a(`struct) 41
b(grammar) g(*earley_create_grammar) j(\(void\)') p Fh
208 960 a(should) 29 b(b) r(e) i(called) f(the) g(\034rst.) 44
b(It) 31 b(actually) e(creates) g(an) h(earley) e(parser) h(with) h
(unde\034ned) h(grammar.) 42 b(Y) -7 b(ou) 31 b(can) e(use) 208
1073 y(t) n(w) n(o) d(or) h(more) g(parsers) e(sim) n(ultaneously) -7
b(.) 36 b(The) 28 b(function) g(returns) f(`NULL') h(if) g(there) f(is)
h(no) f(memory) -7 b(.) p Fd 0 1253 a(F) f(unction) 32
b(`earley_error_co) s(de') p Fc 782 1440 a(`int) 40 b
(earley_error_code) j(\(struct) e(grammar) g(*g\)') p
Fh 208 1741 a(returns) 21 b(the) h(last) f(o) r(ccurred) g(error) e(co)
r(de) j(\(see) g(the) g(p) r(ossible) f(error) f(co) r(des) h(ab) r(o) n
(v) n(e\)) g(for) g(giv) n(en) g(parser.) 33 b(If) 22
b(the) h(function) 208 1855 y(returns) j(zero,) h(no) g(error) f(w) n
(as) g(found) i(so) f(far.) p Fd 0 2035 a(F) -8 b(unction) 32
b(`earley_error_message') p Fc 782 2222 a(`const) 41
b(char) f(*earley_error_message) k(\(struct) d(grammar) f(*g\)') p
Fh 208 2523 a(returns) 32 b(detail) i(message) e(ab) r(out) i(last) f
(o) r(ccurred) g(error.) 53 b(The) 34 b(message) e(alw) n(a) n(ys) f
(corresp) r(onds) h(to) i(the) g(last) f(error) 208 2636
y(co) r(de) 27 b(returned) g(the) h(previous) e(function.) p
Fd 0 2816 a(F) -8 b(unction) 32 b(`earley_read_grammar') p
Fc 782 3003 a(`int) 40 b(earley_read_grammar) k(\(struct) d(grammar) f
(*g,) g(int) g(strict_p,) 1802 3107 y(const) g(char) g
(*\(*read_terminal\)) j(\(int) d(*code\),) 1802 3211
y(const) g(char) g(*\(*read_rule\)) 2351 3316 y(\(const) h(char) f
(***rhs,) 2390 3420 y(const) h(char) f(**abs_node,) 2390
3524 y(int) g(*anode_cost,) 2390 3628 y(int) g(**transl\)\)') p
Fh 208 3929 a(is) 30 b(one) f(of) i(t) n(w) n(o) e(functions) h(whic) n
(h) h(tunes) f(the) h(parser) d(to) i(giv) n(en) g(grammar.) 42
b(The) 31 b(grammar) d(is) i(read) f(with) i(the) f(aid) 208
4042 y(functions) d(giv) n(en) g(as) g(parameters.) 208
4189 y(`read_terminal') g(is) j(function) g(for) f(reading) f
(terminals.) 42 b(This) 30 b(function) g(is) f(called) g(b) r(efore) h
(function) g(`read_rule'.) 208 4302 y(The) j(function) h(should) f
(return) f(the) i(name) f(and) g(the) h(co) r(de) f(of) g(the) g(next) h
(terminal.) 53 b(If) 34 b(all) f(terminals) g(ha) n(v) n(e) f(b) r(een)
208 4416 y(read) 26 b(the) i(function) g(returns) f(NULL.) h(The) g
(terminal) f(co) r(de) g(should) h(b) r(e) g(nonnegativ) n(e.) 208
4563 y(`read_rule') 55 b(is) i(function) h(called) f(to) g(read) f(the)
h(next) h(rule.) 125 b(This) 57 b(function) h(is) f(called) g(after) g
(function) 208 4676 y(`read_terminal'.) 62 b(The) 37
b(function) g(should) g(return) f(the) h(name) g(of) f(non) n(terminal)
g(in) h(the) g(left) h(hand) e(side) h(of) g(the) 208
4790 y(rule) 26 b(and) h(arra) n(y) e(of) i(names) f(of) h(sym) n(b) r
(ols) g(in) g(the) h(righ) n(t) e(hand) h(side) g(of) g(the) g(rule) g
(\(the) h(arra) n(y) c(end) k(mark) n(er) d(should) i(b) r(e) 208
4904 y(`NULL'\).) c(If) g(all) f(rules) g(ha) n(v) n(e) f(b) r(een) i
(read,) g(the) g(function) g(returns) f(`NULL'.) h(All) g(sym) n(b) r
(ol) f(with) h(name) f(whic) n(h) h(w) n(as) e(not) 208
5017 y(pro) n(vided) j(function) i(`read_terminal') e(are) g
(considered) g(to) i(b) r(e) g(non) n(terminals.) 35
b(The) 25 b(function) h(also) e(returns) h(trans-) 208
5131 y(lation) 31 b(giv) n(en) f(b) n(y) i(abstract) e(no) r(de) i
(name) f(and) h(its) f(\034elds) h(whic) n(h) g(will) f(b) r(e) h
(translation) f(of) g(sym) n(b) r(ols) g(\(with) h(indexes) 208
5244 y(giv) n(en) f(in) h(arra) n(y) d(giv) n(en) j(b) n(y) f
(parameter) g(`transl'\)) g(in) h(the) h(righ) n(t) e(hand) h(side) g
(of) g(the) g(rule.) 49 b(All) 33 b(indexes) e(in) i(`transl') 208
5358 y(should) h(b) r(e) h(di\033eren) n(t) g(\(so) f(the) h
(translation) f(of) h(a) f(sym) n(b) r(ol) g(can) g(not) h(b) r(e) g
(represen) n(ted) f(t) n(wice\).) 58 b(The) 35 b(end) g(mark) n(er) p
90 rotate dyy eop
%%Page: 41 41
41 40 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(41) 208 162 y(of) f(the) h(arra) n(y) c(should) j
(b) r(e) h(a) f(negativ) n(e) f(v) -5 b(alue.) 48 b(There) 31
b(is) g(a) g(reserv) n(ed) e(v) -5 b(alue) 32 b(of) f(the) h
(translation) e(sym) n(b) r(ol) g(n) n(um) n(b) r(er) 208
275 y(denoting) c(empt) n(y) h(no) r(de.) 37 b(It) 27
b(is) g(v) -5 b(alue) 26 b(de\034ned) i(b) n(y) e(macro) g
(`EARLEY_NIL_TRANSLA) -7 b(TION_NUMBER'.) 29 b(If) 208
389 y(parameter) g(`transl') i(is) g(`NULL') h(or) f(con) n(tains) f
(only) h(the) h(end) f(mark) n(er,) g(translations) f(of) h(the) h
(rule) f(will) g(b) r(e) h(empt) n(y) 208 502 y(no) r(de.) 54
b(If) 33 b(`abs_no) r(de') g(is) g(`NULL',) h(abstract) e(no) r(de) i
(is) f(not) g(created.) 53 b(In) 34 b(this) g(case) e(`transl') h
(should) g(b) r(e) h(n) n(ull) f(or) 208 616 y(con) n(tain) 21
b(at) h(most) g(one) g(elemen) n(t.) 35 b(This) 22 b(means) g(that) g
(the) h(translation) e(of) h(the) g(rule) g(will) g(b) r(e) h(corresp) r
(ondingly) d(empt) n(y) 208 730 y(no) r(de) i(or) h(the) g(translation)
e(of) i(the) h(sym) n(b) r(ol) e(in) h(the) h(righ) n(t) e(hand) h
(side) f(giv) n(en) g(b) n(y) h(the) g(single) g(arra) n(y) d(elemen) n
(t.) 36 b(The) 23 b(cost) 208 843 y(of) 28 b(the) g(abstract) f(no) r
(de) h(if) h(giv) n(en) e(is) h(passed) f(through) g(parameter) g(`ano)
r(de_cost'.) 37 b(If) 28 b(`abs_no) r(de') g(is) g(not) g(`NULL',) 208
957 y(the) g(cost) f(should) g(b) r(e) h(greater) e(or) g(equal) h(to) h
(zero.) 35 b(Otherwise) 27 b(the) h(cost) f(is) h(ignored.) 208
1103 y(There) f(is) g(reserv) n(ed) f(terminal) h(`error') f(whic) n(h)
h(is) h(used) f(to) h(mark) e(start) h(p) r(oin) n(t) h(of) f(error) f
(reco) n(v) n(ery) -7 b(.) 208 1250 y(Nonzero) 32 b(parameter) g
(`strict_p') h(v) -5 b(alue) 33 b(means) g(more) g(strict) g(c) n(hec) n
(king) f(the) i(grammar.) 53 b(In) 33 b(this) h(case,) g(all) g(non-)
208 1364 y(terminals) i(will) h(b) r(e) h(c) n(hec) n(k) n(ed) e(on) h
(abilit) n(y) g(to) g(deriv) n(e) f(a) h(terminal) f(string) h(instead)
g(of) g(only) f(c) n(hec) n(king) g(axiom) h(for) 208
1477 y(this.) 208 1624 y(The) 27 b(function) h(returns) f(zero) g(if) h
(it) g(is) f(all) g(ok.) 37 b(Otherwise,) 26 b(the) i(function) g
(returns) f(the) h(error) e(co) r(de) h(o) r(ccured.) p
Fd 0 1804 a(F) -8 b(unction) 32 b(`earley_parse_grammar') p
Fc 782 1991 a(`int) 40 b(earley_parse_grammar) k(\(struct) d(grammar) g
(*g,) e(int) h(strict_p,) 1841 2095 y(const) h(char) f(*description\)')
p Fh 208 2396 a(is) 23 b(another) g(function) h(whic) n(h) f(tunes) h
(the) g(parser) e(to) h(giv) n(en) g(grammar.) 33 b(The) 24
b(grammar) e(is) h(giv) n(en) g(b) n(y) g(string) g(`descrip-) 208
2510 y(tion'.) 37 b(The) 27 b(description) g(is) h(similiar) e(Y) -7
b(A) n(CC) 28 b(one.) 37 b(It) 28 b(has) f(the) g(follo) n(wing) g(syn)
n(tax:) p Fc 900 2680 a(file) 40 b(:) g(file) g(terms) g([';']) 1096
2784 y(|) g(file) g(rule) 1096 2888 y(|) g(terms) g([';']) 1096
2993 y(|) g(rule) 900 3201 y(terms) g(:) g(terms) g(IDENTIFIER) h(['=')
g(NUMBER]) 1135 3305 y(|) f(TERM) 900 3513 y(rule) g(:) g(IDENTIFIER) h
(':') f(rhs) g([';']) 900 3721 y(rhs) g(:) f(rhs) h('|') g(sequence) h
([translation]) 1057 3825 y(|) e(sequence) i([translation]) 900
4034 y(sequence) g(:) 1253 4138 y(|) e(sequence) i(IDENTIFIER) 1253
4242 y(|) e(sequence) i(C_CHARACTER_CONSTANT) 900 4450
y(translation) h(:) d('#') 1371 4554 y(|) g('#') h(NUMBER) 1371
4658 y(|) f('#') h('-') 1371 4762 y(|) f('#') h(IDENTIFIER) h([NUMBER])
g('\(') f(numbers) h('\)') 900 4971 y(numbers) g(:) 1214
5075 y(|) e(numbers) i(NUMBER) 1214 5179 y(|) e(numbers) i('-') p
90 rotate dyy eop
%%Page: 42 42
42 41 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(42) 208 162 y(So) 27 b(the) h(description) f
(consists) f(of) i(terminal) f(declaration) f(and) i(rules) f
(sections.) 208 303 y(T) -7 b(erminal) 29 b(declaration) f(section) i
(describ) r(es) f(name) h(of) g(terminals) f(and) h(their) g(co) r
(des.) 44 b(T) -7 b(erminal) 29 b(co) r(de) h(is) g(optional.) 208
416 y(If) e(it) h(is) f(omitted,) h(the) g(terminal) f(co) r(de) g
(will) h(the) f(next) h(free) f(co) r(de) g(starting) f(with) i(256.) 38
b(Y) -7 b(ou) 28 b(can) g(declare) f(terminal) 208 530
y(sev) n(eral) e(times) j(\(the) g(single) f(condition) h(its) f(co) r
(de) h(should) f(b) r(e) h(the) g(same\).) 208 671 y(Character) g
(constan) n(t) h(presen) n(t) g(in) h(the) g(rules) f(is) h(a) f
(terminal) h(describ) r(ed) f(b) n(y) h(default.) 44
b(Its) 29 b(co) r(de) h(is) g(alw) n(a) n(ys) e(co) r(de) h(of) 208
785 y(the) f(c) n(haracter) d(constan) n(t.) 208 926
y(Rules) 31 b(syn) n(tax) f(is) i(the) f(same) g(as) g(Y) -7
b(A) n(CC) 32 b(rule) f(syn) n(tax.) 47 b(The) 32 b(single) e
(di\033erence) i(is) f(an) g(optional) g(translation) f(con-) 208
1040 y(struction) c(starting) g(with) h(`#') g(righ) n(t) f(after) g
(eac) n(h) g(alternativ) n(e.) 36 b(The) 26 b(translation) g(part) g
(could) h(b) r(e) g(a) f(single) g(n) n(um) n(b) r(er) 208
1153 y(whic) n(h) 32 b(means) f(that) i(the) f(translation) f(of) h
(the) g(alternativ) n(e) f(will) h(b) r(e) h(the) f(translation) f(of) h
(the) h(sym) n(b) r(ol) e(with) i(giv) n(en) 208 1267
y(n) n(um) n(b) r(er) d(\(sym) n(b) r(ol) g(n) n(um) n(b) r(ers) g(in) h
(alternativ) n(e) e(starts) g(with) i(0\).) 46 b(Or) 30
b(the) g(translation) g(can) g(b) r(e) h(empt) n(y) f(or) g(`-') g
(whic) n(h) 208 1380 y(mean) e(empt) n(y) g(no) r(de.) 40
b(Or) 28 b(the) h(translation) e(can) h(b) r(e) h(abstract) e(no) r(de)
i(with) g(giv) n(en) f(name,) g(optional) g(cost,) g(and) h(with) 208
1494 y(\034elds) g(whose) g(v) -5 b(alues) 29 b(are) g(the) h
(translations) e(of) h(the) h(alternativ) n(e) e(sym) n(b) r(ols) h
(with) h(n) n(um) n(b) r(ers) f(giv) n(en) g(in) h(paren) n(theses) 208
1607 y(after) i(the) g(abstract) g(no) r(de) g(name.) 51
b(Y) -7 b(ou) 33 b(can) f(use) g(`-') h(in) f(abstract) g(no) r(de) g
(to) g(sho) n(w) g(that) h(empt) n(y) f(no) r(de) h(should) f(b) r(e)
208 1721 y(used) c(in) g(this) h(place.) 39 b(If) 29
b(the) f(cost) g(is) h(absen) n(t) e(it) i(is) f(b) r(eliev) n(ed) h
(to) f(b) r(e) h(one.) 38 b(The) 29 b(cost) f(of) g(terminal,) g(error)
f(no) r(de,) h(and) 208 1835 y(empt) n(y) f(no) r(de) h(is) f(alw) n(a)
n(ys) f(zero.) 208 1976 y(There) h(is) g(reserv) n(ed) f(terminal) h
(`error') f(whic) n(h) h(is) h(used) f(to) h(mark) e(start) h(p) r(oin)
n(t) h(of) f(error) f(reco) n(v) n(ery) -7 b(.) p Fd
0 2145 a(F) f(unction) 32 b(`earley_set_lo) s(ok) -5
b(ahead_lev) m(el') p Fc 782 2315 a(`int) 40 b
(earley_set_lookahead_level) 45 b(\(struct) c(grammar) g(*grammar,) 2077
2419 y(int) e(level\)') p Fh 208 2703 a(sets) 30 b(up) i(lev) n(el) f
(of) g(usage) f(of) h(lo) r(ok) f(ahead) h(in) g(parser) f(w) n(ork.) 46
b(V) -7 b(alue) 31 b(zero) f(means) h(no) f(usage) h(of) g(lo) r(ok) -5
b(aheads) 29 b(at) i(all.) 208 2817 y(Lo) r(ok) -5 b(ahead) 30
b(with) i(static) f(\(indep) r(enden) n(t) i(on) e(input) i(tok) n
(ens\)) e(con) n(text) g(sets) g(in) h(parser) e(situation) h(\(v) -5
b(alue) 32 b(1\)) f(giv) n(es) 208 2930 y(the) j(b) r(est) h(results) f
(with) h(the) g(p) r(oin) n(t) f(of) h(view) f(of) g(space) g(and) g
(sp) r(eed,) j(lo) r(ok) -5 b(ahead) 33 b(with) i(dynamic) f(\(dep) r
(enden) n(t) h(on) 208 3044 y(input) 28 b(tok) n(ens\)) f(con) n(text) h
(sets) f(in) h(parser) f(situations) g(\(all) h(the) g(rest) f
(parameter) g(v) -5 b(alues\)) 27 b(do) r(es) h(sligh) n(tly) f(w) n
(orse,) f(and) 208 3157 y(no) g(usage) f(of) i(lo) r(ok) -5
b(aheads) 25 b(do) r(es) h(the) h(w) n(orst.) 35 b(The) 27
b(default) f(v) -5 b(alue) 27 b(is) f(1) g(\(lo) r(ok) -5
b(ahead) 26 b(with) h(static) f(situation) h(con) n(text) 208
3271 y(sets\).) 36 b(The) 28 b(function) g(returns) f(the) h
(previously) e(set) i(up) g(lev) n(el.) p Fd 0 3440 a(F) -8
b(unction) 32 b(`earley_set_debug_lev) m(el') p Fc 782
3610 a(`int) 40 b(earley_set_debug_level) k(\(struct) d(grammar) g
(*grammar,) 1920 3714 y(int) f(level\)') p Fh 208 3998
a(sets) 35 b(up) h(lev) n(el) f(of) h(debugging) f(information) g
(output) h(to) g(`stderr'.) 60 b(The) 36 b(more) f(lev) n(el,) i(the) f
(more) f(information) g(is) 208 4112 y(output.) 68 b(The) 38
b(default) g(v) -5 b(alue) 38 b(is) g(0) f(\(no) h(output\).) 68
b(The) 38 b(debugging) f(information) g(includes) h(statistics,) i
(result) 208 4226 y(translation) 31 b(tree,) i(grammar,) f(parser) f
(sets,) i(parser) e(sets) i(with) g(all) f(situations,) h(situations) f
(with) h(con) n(texts.) 51 b(The) 208 4339 y(function) 31
b(returns) f(the) h(previously) e(set) i(up) g(debug) f(lev) n(el.) 46
b(Setting) 31 b(up) g(negativ) n(e) f(debug) g(lev) n(el) h(results) f
(in) h(output) 208 4453 y(of) c(translation) f(for) h(program) f(`dot')
i(of) f(graphic) f(visualization) h(pac) n(k) -5 b(age) 26
b(`graph) n(viz'.) p Fd 0 4622 a(F) -8 b(unction) 32
b(`earley_set_one_parse_\035ag') p Fc 782 4792 a(`int) 40
b(earley_set_one_parse_flag) 45 b(\(struct) c(grammar) g(*grammar,) 2037
4896 y(int) f(flag\)') p Fh 208 5180 a(sets) 22 b(up) h(building) g
(only) f(one) g(translation) f(tree) h(\(parameter) g(v) -5
b(alue) 22 b(0\)) h(or) e(all) i(parse) e(trees) h(for) g(am) n
(biguous) f(grammar) 208 5294 y(for) 27 b(whic) n(h) h(sev) n(eral) f
(parsings) f(are) h(p) r(ossible.) 39 b(F) -7 b(or) 27
b(unam) n(biguous) g(grammar) g(the) h(\035ag) f(do) r(es) h(not) h
(a\033ect) f(the) g(result.) 208 5407 y(The) f(default) h(v) -5
b(alue) 28 b(is) f(1.) 36 b(The) 28 b(function) g(returns) f(the) h
(previously) e(used) i(\035ag) f(v) -5 b(alue.) p 90 rotate
dyy eop
%%Page: 43 43
43 42 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(43) p Fd 0 162 a(F) -8 b(unction) 32
b(`earley_set_cost_\035ag') p Fc 782 349 a(`int) 40 b
(earley_set_cost_flag) k(\(struct) d(grammar) g(*grammar,) g(int) f
(flag\)') p Fh 208 650 a(sets) 27 b(up) h(building) g(only) f
(translation) f(tree) h(\(trees) h(if) g(w) n(e) f(set) g(up) h
(one_parse_\035ag) d(to) i(0\)) g(with) i(minimal) e(cost.) 37
b(F) -7 b(or) 208 763 y(unam) n(biguous) 23 b(grammar) g(the) j(\035ag)
e(do) r(es) h(not) g(a\033ect) g(the) g(result.) 36 b(The) 25
b(default) h(v) -5 b(alue) 25 b(is) g(0.) 35 b(The) 25
b(function) h(returns) 208 877 y(the) i(previously) e(used) h(\035ag) g
(v) -5 b(alue.) p Fd 0 1057 a(F) d(unction) 32 b
(`earley_set_error_reco) m(v) m(ery_\035ag') p Fc 782
1244 a(`int) 40 b(earley_set_error_recovery_fl) q(ag) 45
b(\(struct) c(grammar) g(*grammar,) 2233 1348 y(int) f(flag\)') p
Fh 208 1649 a(sets) 28 b(up) g(in) n(ternal) g(\035ag) f(whose) h
(nonzero) f(v) -5 b(alue) 28 b(means) g(making) f(error) g(reco) n(v) n
(ery) e(if) k(syn) n(tax) e(error) g(o) r(ccurred.) 37
b(Oth-) 208 1762 y(erwise,) i(syn) n(tax) e(error) f(results) i(in) g
(\034nishing) g(parsing) e(\(although) i(function) g(`syn) n
(tax_error') d(in) j(function) g(`ear-) 208 1876 y(ley_parse') 27
b(will) j(b) r(e) f(called) g(once\).) 42 b(The) 29 b(default) h(v) -5
b(alue) 29 b(is) h(1.) 41 b(The) 30 b(function) f(returns) g(the) h
(previously) e(used) h(\035ag) 208 1989 y(v) -5 b(alue.) p
Fd 0 2169 a(F) d(unction) 32 b(`earley_set_reco) m(v) m(ery_matc) m(h')
p Fc 782 2356 a(`int) 40 b(earley_set_recovery_match) 45
b(\(struct) c(grammar) g(*grammar,) 2037 2461 y(int) f(n_toks\)') p
Fh 208 2761 a(sets) 31 b(up) h(reco) n(v) n(ery) d(parameter) h(whic) n
(h) h(means) h(ho) n(w) f(m) n(uc) n(h) g(subsequen) n(t) g(tok) n(ens)
g(should) g(b) r(e) h(successfully) f(shifted) 208 2875
y(to) c(\034nish) h(error) d(reco) n(v) n(ery) -7 b(.) 35
b(The) 27 b(default) h(v) -5 b(alue) 28 b(is) f(3.) 37
b(The) 27 b(function) h(returns) f(the) h(previously) e(used) i(\035ag)
f(v) -5 b(alue.) p Fd 0 3055 a(F) d(unction) 32 b(`earley_parse') p
Fc 782 3242 a(`int) 40 b(earley_parse) i(\(struct) f(grammar) g
(*grammar,) 1528 3346 y(int) e(\(*read_token\)) j(\(void) f(**attr\),)
1528 3450 y(void) f(\(*syntax_error\)) 1724 3554 y(\(int) g
(err_tok_num,) i(void) e(*err_tok_attr,) 1763 3658 y(int) g
(start_ignored_tok_num,) 1763 3763 y(void) g(*start_ignored_tok_attr,)
1763 3867 y(int) g(start_recovered_tok_num,) 1763 3971
y(void) g(*start_recovered_tok_attr\),) 1528 4075 y(void) g
(*\(*parse_alloc\)) i(\(int) e(nmemb\),) 1528 4179 y(void) g
(\(*parse_free\)) i(\(void) e(*mem\),) 1528 4283 y(struct) g
(earley_tree_node) j(**root,) 1528 4387 y(int) c(*ambiguous_p\)') p
Fh 208 4688 a(is) f(ma) 5 b(jor) 37 b(parser) f(function.) 70
b(It) 38 b(parses) f(input) i(according) d(the) j(grammar.) 67
b(The) 38 b(function) h(returns) e(the) i(error) 208
4801 y(co) r(de) 30 b(\(whic) n(h) i(can) e(b) r(e) i(also) d(returned)
i(b) n(y) g(`earley_error_co) r(de'\).) 43 b(If) 31 b(the) h(co) r(de) e
(is) h(zero,) g(the) g(function) h(will) f(also) 208
4915 y(return) f(ro) r(ot) h(of) g(the) h(parse) e(tree) h(through) g
(parameter) f(`ro) r(ot'.) 47 b(The) 32 b(tree) f(represen) n(ting) e
(the) j(translation.) 47 b(V) -7 b(alue) 208 5029 y(passed) 22
b(through) g(`ro) r(ot') h(will) g(b) r(e) g(`NULL') h(only) f(if) g
(syn) n(tax) g(error) e(w) n(as) h(o) r(ccurred) g(and) h(error) e
(reco) n(v) n(ery) f(w) n(as) i(switc) n(hed) 208 5142
y(o\033) 6 b(\).) 47 b(The) 31 b(function) g(sets) f(up) i(\035ag) e
(passed) g(b) n(y) g(parameter) f(`am) n(biguous_p') g(if) j(w) n(e) e
(found) h(that) g(the) g(grammar) e(is) 208 5256 y(am) n(biguous) d
(\(it) i(w) n(orks) e(ev) n(en) h(w) n(e) g(ask) n(ed) g(only) g(one) g
(parse) f(tree) h(without) h(alternativ) n(es\).) p 90 rotate
dyy eop
%%Page: 44 44
44 43 bop 0 -167 3900 5 v Fd 0 -200 a(13.) 73 b(Earley) 32
b(parser) p Fh 3061 w(44) 208 162 y(F) -7 b(unction) 30
b(`read_tok) n(en') f(pro) n(vides) f(input) j(tok) n(ens.) 44
b(It) 31 b(returns) f(co) r(de) g(the) g(next) h(input) g(tok) n(en) e
(and) h(its) h(attribute.) 208 275 y(If) d(the) g(function) g(returns) e
(negativ) n(e) h(v) -5 b(alue) 27 b(w) n(e'v) n(e) g(read) g(all) g
(tok) n(ens.) 208 422 y(F) -7 b(unction) 33 b(`syn) n(tax_error') d
(called) j(when) g(synatctic) g(error) e(has) i(b) r(een) g(found.) 54
b(It) 34 b(ma) n(y) e(prin) n(t) h(an) g(error) f(message) 208
536 y(ab) r(out) 21 b(syn) n(tax) f(error) g(whic) n(h) h(o) r(ccurred)
f(on) i(tok) n(en) e(with) i(n) n(um) n(b) r(er) f(`err_tok_n) n(um') f
(and) h(attribute) h(`err_tok_attr'.) 208 649 y(The) j(follo) n(wing) g
(four) g(parameters) e(describ) r(es) i(made) g(error) f(reco) n(v) n
(ery) f(whic) n(h) i(ignored) f(tok) n(ens) h(starting) g(with) h(tok) n
(en) 208 763 y(giv) n(en) 37 b(b) n(y) g(3rd) g(and) h(4th) g
(parameters.) 66 b(The) 37 b(\034rst) h(tok) n(en) f(whic) n(h) h(w) n
(as) f(not) h(ignored) e(is) i(describ) r(ed) g(b) n(y) f(the) h(last)
208 876 y(parameters.) 44 b(If) 31 b(the) h(n) n(um) n(b) r(er) e(of) h
(ignored) e(tok) n(ens) h(is) h(zero,) g(the) g(all) f(parameters) f
(describ) r(es) h(the) i(same) e(tok) n(en.) 46 b(If) 208
990 y(the) 28 b(error) d(reco) n(v) n(ery) g(is) j(switc) n(hed) f
(o\033) h(\(see) f(commen) n(ts) g(for) g(`earley_set_error_reco) n(v) n
(e) o(ry_) o(\035ag) o('\),) c(the) 28 b(third) f(and) 208
1103 y(the) h(\034fth) g(parameters) e(will) i(b) r(e) g(negativ) n(e) e
(and) h(the) h(forth) g(and) f(the) h(sixth) g(parameters) d(will) j(b)
r(e) g(`NULL'.) 208 1250 y(F) -7 b(unction) 22 b(`parse_allo) r(c') e
(is) i(used) g(b) n(y) f(Earley) h(parser) e(to) i(allo) r(cate) f
(memory) g(for) g(parse) g(tree) h(represen) n(tation) e(\(trans-) 208
1364 y(lation\).) 35 b(After) 23 b(calling) g(`earley_free_grammar') 18
b(w) n(e) 23 b(free) f(all) h(memory) f(allo) r(cated) h(for) f(the) i
(parser.) 33 b(A) n(t) 24 b(this) f(p) r(oin) n(t) 208
1477 y(it) k(is) g(con) n(v) n(enien) n(t) f(to) h(free) f(all) h
(memory) f(but) i(parse) e(tree.) 36 b(Therefore) 26
b(w) n(e) h(require) e(the) j(follo) n(wing) e(function.) 37
b(So) 27 b(the) 208 1591 y(caller) g(will) i(b) r(e) g(resp) r(onsible)
f(to) g(allo) r(cate) g(and) g(free) g(memory) g(for) g(parse) g(tree) g
(represen) n(tation) f(\(translation\).) 39 b(But) 208
1705 y(the) 27 b(caller) g(should) g(not) g(free) g(the) h(memory) f
(un) n(til) g(`earley_free_grammar') c(is) 28 b(called) f(for) f(the) i
(parser.) 35 b(The) 28 b(func-) 208 1818 y(tion) 21 b(ma) n(y) f(b) r
(e) i(called) f(ev) n(en) g(during) f(reading) h(the) g(grammar) e(not)
j(only) e(during) h(the) h(parsing.) 33 b(F) -7 b(unction) 22
b(`parse_free') 208 1932 y(is) 32 b(used) g(b) n(y) g(the) g(parser) f
(to) h(free) g(memory) f(allo) r(cated) g(b) n(y) h(`parse_allo) r(c'.)
48 b(If) 33 b(it) g(is) f(`NULL',) g(the) h(memory) e(is) h(not) 208
2045 y(freed.) p Fd 0 2225 a(F) -8 b(unction) 32 b
(`earley_free_grammar') p Fc 782 2412 a(`void) 41 b
(earley_free_grammar) i(\(struct) e(grammar) g(*grammar\)') p
Fh 208 2713 a(frees) 27 b(all) g(memory) g(allo) r(cated) f(for) h(the)
h(parser.) 36 b(This) 27 b(function) h(should) f(b) r(e) h(called) g
(the) g(last) f(for) g(giv) n(en) g(parser.) p 90 rotate
dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
